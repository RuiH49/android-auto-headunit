// Generated by the protocol buffer compiler.  DO NOT EDIT!

package ca.anodsplace.headunit.aap.protocol.nano;

@SuppressWarnings("hiding")
public interface Media {

  // enum MsgType
  public static final int MSG_MEDIA_SETUPREQUEST = 32768;
  public static final int MSG_MEDIA_STARTREQUEST = 32769;
  public static final int MSG_MEDIA_STOPREQUEST = 32770;
  public static final int MSG_MEDIA_CONFIGRESPONSE = 32771;
  public static final int MSG_MEDIA_ACK = 32772;
  public static final int MSG_MEDIA_MICREQUEST = 32773;
  public static final int MSG_MEDIA_MICRESPONSE = 32774;
  public static final int MSG_MEDIA_VIDEOFOCUSREQUESTNOTIFICATION = 32775;
  public static final int MSG_MEDIA_VIDEOFOCUSNOTIFICATION = 32776;

  // enum MediaCodecType
  public static final int MEDIA_CODEC_AUDIO = 1;
  public static final int MEDIA_CODEC_VIDEO = 3;

  // enum AudioStreamType
  public static final int CAR_STREAM_SYSTEM = 1;
  public static final int CAR_STREAM_VOICE = 2;
  public static final int CAR_STREAM_MEDIA = 3;

  // enum VideoFocusMode
  public static final int VIDEO_FOCUS_MODE_1 = 1;
  public static final int VIDEO_FOCUS_MODE_2 = 2;

  public static final class AudioConfiguration extends
      com.google.protobuf.nano.MessageNano {

    private static volatile AudioConfiguration[] _emptyArray;
    public static AudioConfiguration[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AudioConfiguration[0];
          }
        }
      }
      return _emptyArray;
    }

    // required uint32 sample_rate = 1;
    public int sampleRate;

    // required uint32 number_of_bits = 2;
    public int numberOfBits;

    // required uint32 number_of_channels = 3;
    public int numberOfChannels;

    public AudioConfiguration() {
      clear();
    }

    public AudioConfiguration clear() {
      sampleRate = 0;
      numberOfBits = 0;
      numberOfChannels = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeUInt32(1, this.sampleRate);
      output.writeUInt32(2, this.numberOfBits);
      output.writeUInt32(3, this.numberOfChannels);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(1, this.sampleRate);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(2, this.numberOfBits);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(3, this.numberOfChannels);
      return size;
    }

    @Override
    public AudioConfiguration mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.sampleRate = input.readUInt32();
            break;
          }
          case 16: {
            this.numberOfBits = input.readUInt32();
            break;
          }
          case 24: {
            this.numberOfChannels = input.readUInt32();
            break;
          }
        }
      }
    }

    public static AudioConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AudioConfiguration(), data);
    }

    public static AudioConfiguration parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AudioConfiguration().mergeFrom(input);
    }
  }

  public static final class Start extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Start[] _emptyArray;
    public static Start[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Start[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 session_id = 1;
    public int sessionId;

    // optional uint32 configuration_index = 2;
    public int configurationIndex;

    public Start() {
      clear();
    }

    public Start clear() {
      sessionId = 0;
      configurationIndex = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.sessionId != 0) {
        output.writeInt32(1, this.sessionId);
      }
      if (this.configurationIndex != 0) {
        output.writeUInt32(2, this.configurationIndex);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.sessionId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.sessionId);
      }
      if (this.configurationIndex != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.configurationIndex);
      }
      return size;
    }

    @Override
    public Start mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.sessionId = input.readInt32();
            break;
          }
          case 16: {
            this.configurationIndex = input.readUInt32();
            break;
          }
        }
      }
    }

    public static Start parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Start(), data);
    }

    public static Start parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Start().mergeFrom(input);
    }
  }

  public static final class Ack extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Ack[] _emptyArray;
    public static Ack[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Ack[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 session_id = 1;
    public int sessionId;

    // required uint32 ack = 2;
    public int ack;

    public Ack() {
      clear();
    }

    public Ack clear() {
      sessionId = 0;
      ack = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.sessionId);
      output.writeUInt32(2, this.ack);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.sessionId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(2, this.ack);
      return size;
    }

    @Override
    public Ack mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.sessionId = input.readInt32();
            break;
          }
          case 16: {
            this.ack = input.readUInt32();
            break;
          }
        }
      }
    }

    public static Ack parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Ack(), data);
    }

    public static Ack parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Ack().mergeFrom(input);
    }
  }

  public static final class MicrophoneRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile MicrophoneRequest[] _emptyArray;
    public static MicrophoneRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new MicrophoneRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // required bool open = 1;
    public boolean open;

    // optional bool anc_enabled = 2;
    public boolean ancEnabled;

    // optional bool ec_enabled = 3;
    public boolean ecEnabled;

    // optional int32 max_unacked = 4;
    public int maxUnacked;

    public MicrophoneRequest() {
      clear();
    }

    public MicrophoneRequest clear() {
      open = false;
      ancEnabled = false;
      ecEnabled = false;
      maxUnacked = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeBool(1, this.open);
      if (this.ancEnabled != false) {
        output.writeBool(2, this.ancEnabled);
      }
      if (this.ecEnabled != false) {
        output.writeBool(3, this.ecEnabled);
      }
      if (this.maxUnacked != 0) {
        output.writeInt32(4, this.maxUnacked);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(1, this.open);
      if (this.ancEnabled != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.ancEnabled);
      }
      if (this.ecEnabled != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(3, this.ecEnabled);
      }
      if (this.maxUnacked != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.maxUnacked);
      }
      return size;
    }

    @Override
    public MicrophoneRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.open = input.readBool();
            break;
          }
          case 16: {
            this.ancEnabled = input.readBool();
            break;
          }
          case 24: {
            this.ecEnabled = input.readBool();
            break;
          }
          case 32: {
            this.maxUnacked = input.readInt32();
            break;
          }
        }
      }
    }

    public static MicrophoneRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new MicrophoneRequest(), data);
    }

    public static MicrophoneRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new MicrophoneRequest().mergeFrom(input);
    }
  }

  public static final class MicrophoneResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile MicrophoneResponse[] _emptyArray;
    public static MicrophoneResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new MicrophoneResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 status = 1;
    public int status;

    // required uint32 session_id = 2;
    public int sessionId;

    public MicrophoneResponse() {
      clear();
    }

    public MicrophoneResponse clear() {
      status = 0;
      sessionId = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.status);
      output.writeUInt32(2, this.sessionId);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.status);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(2, this.sessionId);
      return size;
    }

    @Override
    public MicrophoneResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.status = input.readInt32();
            break;
          }
          case 16: {
            this.sessionId = input.readUInt32();
            break;
          }
        }
      }
    }

    public static MicrophoneResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new MicrophoneResponse(), data);
    }

    public static MicrophoneResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new MicrophoneResponse().mergeFrom(input);
    }
  }

  public static final class VideoFocusRequestNotification extends
      com.google.protobuf.nano.MessageNano {

    // enum VideoFocusReason
    public static final int VIDEO_FOCUS_REASON_1 = 1;
    public static final int VIDEO_FOCUS_REASON_2 = 2;

    private static volatile VideoFocusRequestNotification[] _emptyArray;
    public static VideoFocusRequestNotification[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VideoFocusRequestNotification[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int32 disp_channel_id = 1;
    public int dispChannelId;

    // required .ca.yyx.hu.aap.protocol.VideoFocusMode mode = 2;
    public int mode;

    // optional .ca.yyx.hu.aap.protocol.VideoFocusRequestNotification.VideoFocusReason reason = 3;
    public int reason;

    public VideoFocusRequestNotification() {
      clear();
    }

    public VideoFocusRequestNotification clear() {
      dispChannelId = 0;
      mode = ca.anodsplace.headunit.aap.protocol.nano.Media.VIDEO_FOCUS_MODE_1;
      reason = ca.anodsplace.headunit.aap.protocol.nano.Media.VideoFocusRequestNotification.VIDEO_FOCUS_REASON_1;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.dispChannelId != 0) {
        output.writeInt32(1, this.dispChannelId);
      }
      output.writeInt32(2, this.mode);
      if (this.reason != ca.anodsplace.headunit.aap.protocol.nano.Media.VideoFocusRequestNotification.VIDEO_FOCUS_REASON_1) {
        output.writeInt32(3, this.reason);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.dispChannelId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.dispChannelId);
      }
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(2, this.mode);
      if (this.reason != ca.anodsplace.headunit.aap.protocol.nano.Media.VideoFocusRequestNotification.VIDEO_FOCUS_REASON_1) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.reason);
      }
      return size;
    }

    @Override
    public VideoFocusRequestNotification mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.dispChannelId = input.readInt32();
            break;
          }
          case 16: {
            int value = input.readInt32();
            switch (value) {
              case ca.anodsplace.headunit.aap.protocol.nano.Media.VIDEO_FOCUS_MODE_1:
              case ca.anodsplace.headunit.aap.protocol.nano.Media.VIDEO_FOCUS_MODE_2:
                this.mode = value;
                break;
            }
            break;
          }
          case 24: {
            int value = input.readInt32();
            switch (value) {
              case ca.anodsplace.headunit.aap.protocol.nano.Media.VideoFocusRequestNotification.VIDEO_FOCUS_REASON_1:
              case ca.anodsplace.headunit.aap.protocol.nano.Media.VideoFocusRequestNotification.VIDEO_FOCUS_REASON_2:
                this.reason = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static VideoFocusRequestNotification parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VideoFocusRequestNotification(), data);
    }

    public static VideoFocusRequestNotification parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VideoFocusRequestNotification().mergeFrom(input);
    }
  }

  public static final class VideoFocusNotification extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VideoFocusNotification[] _emptyArray;
    public static VideoFocusNotification[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VideoFocusNotification[0];
          }
        }
      }
      return _emptyArray;
    }

    // required .ca.yyx.hu.aap.protocol.VideoFocusMode mode = 1;
    public int mode;

    // optional bool unsolicited = 2;
    public boolean unsolicited;

    public VideoFocusNotification() {
      clear();
    }

    public VideoFocusNotification clear() {
      mode = ca.anodsplace.headunit.aap.protocol.nano.Media.VIDEO_FOCUS_MODE_1;
      unsolicited = false;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.mode);
      if (this.unsolicited != false) {
        output.writeBool(2, this.unsolicited);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.mode);
      if (this.unsolicited != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(2, this.unsolicited);
      }
      return size;
    }

    @Override
    public VideoFocusNotification mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.anodsplace.headunit.aap.protocol.nano.Media.VIDEO_FOCUS_MODE_1:
              case ca.anodsplace.headunit.aap.protocol.nano.Media.VIDEO_FOCUS_MODE_2:
                this.mode = value;
                break;
            }
            break;
          }
          case 16: {
            this.unsolicited = input.readBool();
            break;
          }
        }
      }
    }

    public static VideoFocusNotification parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VideoFocusNotification(), data);
    }

    public static VideoFocusNotification parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VideoFocusNotification().mergeFrom(input);
    }
  }

  public static final class MediaSetupRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile MediaSetupRequest[] _emptyArray;
    public static MediaSetupRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new MediaSetupRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 type = 1;
    public int type;

    public MediaSetupRequest() {
      clear();
    }

    public MediaSetupRequest clear() {
      type = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.type != 0) {
        output.writeUInt32(1, this.type);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.type != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.type);
      }
      return size;
    }

    @Override
    public MediaSetupRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.type = input.readUInt32();
            break;
          }
        }
      }
    }

    public static MediaSetupRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new MediaSetupRequest(), data);
    }

    public static MediaSetupRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new MediaSetupRequest().mergeFrom(input);
    }
  }

  public static final class Config extends
      com.google.protobuf.nano.MessageNano {

    // enum ConfigStatus
    public static final int CONFIG_STATUS_DEVICE = 1;
    public static final int CONFIG_STATUS_HEADUNIT = 2;

    private static volatile Config[] _emptyArray;
    public static Config[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Config[0];
          }
        }
      }
      return _emptyArray;
    }

    // required .ca.yyx.hu.aap.protocol.Config.ConfigStatus status = 1;
    public int status;

    // required uint32 max_unacked = 2;
    public int maxUnacked;

    // repeated uint32 configuration_indices = 3;
    public int[] configurationIndices;

    public Config() {
      clear();
    }

    public Config clear() {
      status = ca.anodsplace.headunit.aap.protocol.nano.Media.Config.CONFIG_STATUS_DEVICE;
      maxUnacked = 0;
      configurationIndices = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.status);
      output.writeUInt32(2, this.maxUnacked);
      if (this.configurationIndices != null && this.configurationIndices.length > 0) {
        for (int i = 0; i < this.configurationIndices.length; i++) {
          output.writeUInt32(3, this.configurationIndices[i]);
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.status);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(2, this.maxUnacked);
      if (this.configurationIndices != null && this.configurationIndices.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.configurationIndices.length; i++) {
          int element = this.configurationIndices[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.configurationIndices.length;
      }
      return size;
    }

    @Override
    public Config mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.anodsplace.headunit.aap.protocol.nano.Media.Config.CONFIG_STATUS_DEVICE:
              case ca.anodsplace.headunit.aap.protocol.nano.Media.Config.CONFIG_STATUS_HEADUNIT:
                this.status = value;
                break;
            }
            break;
          }
          case 16: {
            this.maxUnacked = input.readUInt32();
            break;
          }
          case 24: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 24);
            int i = this.configurationIndices == null ? 0 : this.configurationIndices.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.configurationIndices, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt32();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt32();
            this.configurationIndices = newArray;
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt32();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.configurationIndices == null ? 0 : this.configurationIndices.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.configurationIndices, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt32();
            }
            this.configurationIndices = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }

    public static Config parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Config(), data);
    }

    public static Config parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Config().mergeFrom(input);
    }
  }
}
