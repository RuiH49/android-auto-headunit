// Generated by the protocol buffer compiler.  DO NOT EDIT!

package ca.anodsplace.headunit.aap.protocol.nano;

@SuppressWarnings("hiding")
public interface Input {

  // enum MsgType
  public static final int MSG_INPUT_EVENT = 32769;
  public static final int MSG_INPUT_BINDINGREQUEST = 32770;
  public static final int MSG_INPUT_BINDINGRESPONSE = 32771;

  public static final class Key extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Key[] _emptyArray;
    public static Key[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Key[0];
          }
        }
      }
      return _emptyArray;
    }

    // required uint32 keycode = 1;
    public int keycode;

    // required bool down = 2;
    public boolean down;

    // required uint32 metastate = 3;
    public int metastate;

    // required bool longpress = 4;
    public boolean longpress;

    public Key() {
      clear();
    }

    public Key clear() {
      keycode = 0;
      down = false;
      metastate = 0;
      longpress = false;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeUInt32(1, this.keycode);
      output.writeBool(2, this.down);
      output.writeUInt32(3, this.metastate);
      output.writeBool(4, this.longpress);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(1, this.keycode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(2, this.down);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(3, this.metastate);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(4, this.longpress);
      return size;
    }

    @Override
    public Key mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.keycode = input.readUInt32();
            break;
          }
          case 16: {
            this.down = input.readBool();
            break;
          }
          case 24: {
            this.metastate = input.readUInt32();
            break;
          }
          case 32: {
            this.longpress = input.readBool();
            break;
          }
        }
      }
    }

    public static Key parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Key(), data);
    }

    public static Key parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Key().mergeFrom(input);
    }
  }

  public static final class KeyEvent extends
      com.google.protobuf.nano.MessageNano {

    private static volatile KeyEvent[] _emptyArray;
    public static KeyEvent[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new KeyEvent[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .ca.yyx.hu.aap.protocol.Key keys = 1;
    public ca.anodsplace.headunit.aap.protocol.nano.Input.Key[] keys;

    public KeyEvent() {
      clear();
    }

    public KeyEvent clear() {
      keys = ca.anodsplace.headunit.aap.protocol.nano.Input.Key.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.keys != null && this.keys.length > 0) {
        for (int i = 0; i < this.keys.length; i++) {
          ca.anodsplace.headunit.aap.protocol.nano.Input.Key element = this.keys[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.keys != null && this.keys.length > 0) {
        for (int i = 0; i < this.keys.length; i++) {
          ca.anodsplace.headunit.aap.protocol.nano.Input.Key element = this.keys[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public KeyEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.keys == null ? 0 : this.keys.length;
            ca.anodsplace.headunit.aap.protocol.nano.Input.Key[] newArray =
                new ca.anodsplace.headunit.aap.protocol.nano.Input.Key[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.keys, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.anodsplace.headunit.aap.protocol.nano.Input.Key();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.anodsplace.headunit.aap.protocol.nano.Input.Key();
            input.readMessage(newArray[i]);
            this.keys = newArray;
            break;
          }
        }
      }
    }

    public static KeyEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new KeyEvent(), data);
    }

    public static KeyEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new KeyEvent().mergeFrom(input);
    }
  }

  public static final class TouchEvent extends
      com.google.protobuf.nano.MessageNano {

    // enum PointerAction
    public static final int TOUCH_ACTION_DOWN = 0;
    public static final int TOUCH_ACTION_UP = 1;
    public static final int TOUCH_ACTION_MOVE = 2;
    public static final int TOUCH_ACTION_CANCEL = 3;
    public static final int TOUCH_ACTION_OUTSIDE = 4;
    public static final int TOUCH_ACTION_POINTER_DOWN = 5;
    public static final int TOUCH_ACTION_POINTER_UP = 6;

    public static final class Pointer extends
        com.google.protobuf.nano.MessageNano {

      private static volatile Pointer[] _emptyArray;
      public static Pointer[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Pointer[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional uint32 x = 1;
      public int x;

      // optional uint32 y = 2;
      public int y;

      // optional uint32 pointer_id = 3;
      public int pointerId;

      public Pointer() {
        clear();
      }

      public Pointer clear() {
        x = 0;
        y = 0;
        pointerId = 0;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.x != 0) {
          output.writeUInt32(1, this.x);
        }
        if (this.y != 0) {
          output.writeUInt32(2, this.y);
        }
        if (this.pointerId != 0) {
          output.writeUInt32(3, this.pointerId);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.x != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(1, this.x);
        }
        if (this.y != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(2, this.y);
        }
        if (this.pointerId != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(3, this.pointerId);
        }
        return size;
      }

      @Override
      public Pointer mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.x = input.readUInt32();
              break;
            }
            case 16: {
              this.y = input.readUInt32();
              break;
            }
            case 24: {
              this.pointerId = input.readUInt32();
              break;
            }
          }
        }
      }

      public static Pointer parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Pointer(), data);
      }

      public static Pointer parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Pointer().mergeFrom(input);
      }
    }

    private static volatile TouchEvent[] _emptyArray;
    public static TouchEvent[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new TouchEvent[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .ca.yyx.hu.aap.protocol.TouchEvent.Pointer pointer_data = 1;
    public ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.Pointer[] pointerData;

    // optional uint32 action_index = 2;
    public int actionIndex;

    // optional .ca.yyx.hu.aap.protocol.TouchEvent.PointerAction action = 3;
    public int action;

    public TouchEvent() {
      clear();
    }

    public TouchEvent clear() {
      pointerData = ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.Pointer.emptyArray();
      actionIndex = 0;
      action = ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.TOUCH_ACTION_DOWN;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.pointerData != null && this.pointerData.length > 0) {
        for (int i = 0; i < this.pointerData.length; i++) {
          ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.Pointer element = this.pointerData[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.actionIndex != 0) {
        output.writeUInt32(2, this.actionIndex);
      }
      if (this.action != ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.TOUCH_ACTION_DOWN) {
        output.writeInt32(3, this.action);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.pointerData != null && this.pointerData.length > 0) {
        for (int i = 0; i < this.pointerData.length; i++) {
          ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.Pointer element = this.pointerData[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.actionIndex != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.actionIndex);
      }
      if (this.action != ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.TOUCH_ACTION_DOWN) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.action);
      }
      return size;
    }

    @Override
    public TouchEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.pointerData == null ? 0 : this.pointerData.length;
            ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.Pointer[] newArray =
                new ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.Pointer[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.pointerData, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.Pointer();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.Pointer();
            input.readMessage(newArray[i]);
            this.pointerData = newArray;
            break;
          }
          case 16: {
            this.actionIndex = input.readUInt32();
            break;
          }
          case 24: {
            int value = input.readInt32();
            switch (value) {
              case ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.TOUCH_ACTION_DOWN:
              case ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.TOUCH_ACTION_UP:
              case ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.TOUCH_ACTION_MOVE:
              case ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.TOUCH_ACTION_CANCEL:
              case ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.TOUCH_ACTION_OUTSIDE:
              case ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.TOUCH_ACTION_POINTER_DOWN:
              case ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent.TOUCH_ACTION_POINTER_UP:
                this.action = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static TouchEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new TouchEvent(), data);
    }

    public static TouchEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new TouchEvent().mergeFrom(input);
    }
  }

  public static final class RelativeEvent_Rel extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RelativeEvent_Rel[] _emptyArray;
    public static RelativeEvent_Rel[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RelativeEvent_Rel[0];
          }
        }
      }
      return _emptyArray;
    }

    // required uint32 keycode = 1;
    public int keycode;

    // required int32 delta = 2;
    public int delta;

    public RelativeEvent_Rel() {
      clear();
    }

    public RelativeEvent_Rel clear() {
      keycode = 0;
      delta = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeUInt32(1, this.keycode);
      output.writeInt32(2, this.delta);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(1, this.keycode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.delta);
      return size;
    }

    @Override
    public RelativeEvent_Rel mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.keycode = input.readUInt32();
            break;
          }
          case 16: {
            this.delta = input.readInt32();
            break;
          }
        }
      }
    }

    public static RelativeEvent_Rel parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RelativeEvent_Rel(), data);
    }

    public static RelativeEvent_Rel parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RelativeEvent_Rel().mergeFrom(input);
    }
  }

  public static final class RelativeEvent extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RelativeEvent[] _emptyArray;
    public static RelativeEvent[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RelativeEvent[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .ca.yyx.hu.aap.protocol.RelativeEvent_Rel data = 1;
    public ca.anodsplace.headunit.aap.protocol.nano.Input.RelativeEvent_Rel[] data;

    public RelativeEvent() {
      clear();
    }

    public RelativeEvent clear() {
      data = ca.anodsplace.headunit.aap.protocol.nano.Input.RelativeEvent_Rel.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.data != null && this.data.length > 0) {
        for (int i = 0; i < this.data.length; i++) {
          ca.anodsplace.headunit.aap.protocol.nano.Input.RelativeEvent_Rel element = this.data[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.data != null && this.data.length > 0) {
        for (int i = 0; i < this.data.length; i++) {
          ca.anodsplace.headunit.aap.protocol.nano.Input.RelativeEvent_Rel element = this.data[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public RelativeEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.data == null ? 0 : this.data.length;
            ca.anodsplace.headunit.aap.protocol.nano.Input.RelativeEvent_Rel[] newArray =
                new ca.anodsplace.headunit.aap.protocol.nano.Input.RelativeEvent_Rel[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.data, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.anodsplace.headunit.aap.protocol.nano.Input.RelativeEvent_Rel();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.anodsplace.headunit.aap.protocol.nano.Input.RelativeEvent_Rel();
            input.readMessage(newArray[i]);
            this.data = newArray;
            break;
          }
        }
      }
    }

    public static RelativeEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RelativeEvent(), data);
    }

    public static RelativeEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RelativeEvent().mergeFrom(input);
    }
  }

  public static final class AbsoluteEvent_Abs extends
      com.google.protobuf.nano.MessageNano {

    private static volatile AbsoluteEvent_Abs[] _emptyArray;
    public static AbsoluteEvent_Abs[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AbsoluteEvent_Abs[0];
          }
        }
      }
      return _emptyArray;
    }

    // required uint32 keycode = 1;
    public int keycode;

    // required int32 value = 2;
    public int value;

    public AbsoluteEvent_Abs() {
      clear();
    }

    public AbsoluteEvent_Abs clear() {
      keycode = 0;
      value = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeUInt32(1, this.keycode);
      output.writeInt32(2, this.value);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt32Size(1, this.keycode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.value);
      return size;
    }

    @Override
    public AbsoluteEvent_Abs mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.keycode = input.readUInt32();
            break;
          }
          case 16: {
            this.value = input.readInt32();
            break;
          }
        }
      }
    }

    public static AbsoluteEvent_Abs parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AbsoluteEvent_Abs(), data);
    }

    public static AbsoluteEvent_Abs parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AbsoluteEvent_Abs().mergeFrom(input);
    }
  }

  public static final class AbsoluteEvent extends
      com.google.protobuf.nano.MessageNano {

    private static volatile AbsoluteEvent[] _emptyArray;
    public static AbsoluteEvent[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AbsoluteEvent[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .ca.yyx.hu.aap.protocol.AbsoluteEvent_Abs data = 1;
    public ca.anodsplace.headunit.aap.protocol.nano.Input.AbsoluteEvent_Abs[] data;

    public AbsoluteEvent() {
      clear();
    }

    public AbsoluteEvent clear() {
      data = ca.anodsplace.headunit.aap.protocol.nano.Input.AbsoluteEvent_Abs.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.data != null && this.data.length > 0) {
        for (int i = 0; i < this.data.length; i++) {
          ca.anodsplace.headunit.aap.protocol.nano.Input.AbsoluteEvent_Abs element = this.data[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.data != null && this.data.length > 0) {
        for (int i = 0; i < this.data.length; i++) {
          ca.anodsplace.headunit.aap.protocol.nano.Input.AbsoluteEvent_Abs element = this.data[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public AbsoluteEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.data == null ? 0 : this.data.length;
            ca.anodsplace.headunit.aap.protocol.nano.Input.AbsoluteEvent_Abs[] newArray =
                new ca.anodsplace.headunit.aap.protocol.nano.Input.AbsoluteEvent_Abs[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.data, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.anodsplace.headunit.aap.protocol.nano.Input.AbsoluteEvent_Abs();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.anodsplace.headunit.aap.protocol.nano.Input.AbsoluteEvent_Abs();
            input.readMessage(newArray[i]);
            this.data = newArray;
            break;
          }
        }
      }
    }

    public static AbsoluteEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AbsoluteEvent(), data);
    }

    public static AbsoluteEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AbsoluteEvent().mergeFrom(input);
    }
  }

  public static final class InputReport extends
      com.google.protobuf.nano.MessageNano {

    private static volatile InputReport[] _emptyArray;
    public static InputReport[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new InputReport[0];
          }
        }
      }
      return _emptyArray;
    }

    // required uint64 timestamp = 1;
    public long timestamp;

    // required int32 disp_channel_id = 2;
    public int dispChannelId;

    // optional .ca.yyx.hu.aap.protocol.TouchEvent touch_event = 3;
    public ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent touchEvent;

    // optional .ca.yyx.hu.aap.protocol.KeyEvent key_event = 4;
    public ca.anodsplace.headunit.aap.protocol.nano.Input.KeyEvent keyEvent;

    // optional .ca.yyx.hu.aap.protocol.AbsoluteEvent absolute_event = 5;
    public ca.anodsplace.headunit.aap.protocol.nano.Input.AbsoluteEvent absoluteEvent;

    // optional .ca.yyx.hu.aap.protocol.RelativeEvent relative_event = 6;
    public ca.anodsplace.headunit.aap.protocol.nano.Input.RelativeEvent relativeEvent;

    // optional .ca.yyx.hu.aap.protocol.TouchEvent touchpad_event = 7;
    public ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent touchpadEvent;

    public InputReport() {
      clear();
    }

    public InputReport clear() {
      timestamp = 0L;
      dispChannelId = 0;
      touchEvent = null;
      keyEvent = null;
      absoluteEvent = null;
      relativeEvent = null;
      touchpadEvent = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeUInt64(1, this.timestamp);
      output.writeInt32(2, this.dispChannelId);
      if (this.touchEvent != null) {
        output.writeMessage(3, this.touchEvent);
      }
      if (this.keyEvent != null) {
        output.writeMessage(4, this.keyEvent);
      }
      if (this.absoluteEvent != null) {
        output.writeMessage(5, this.absoluteEvent);
      }
      if (this.relativeEvent != null) {
        output.writeMessage(6, this.relativeEvent);
      }
      if (this.touchpadEvent != null) {
        output.writeMessage(7, this.touchpadEvent);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeUInt64Size(1, this.timestamp);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.dispChannelId);
      if (this.touchEvent != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.touchEvent);
      }
      if (this.keyEvent != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.keyEvent);
      }
      if (this.absoluteEvent != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(5, this.absoluteEvent);
      }
      if (this.relativeEvent != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(6, this.relativeEvent);
      }
      if (this.touchpadEvent != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(7, this.touchpadEvent);
      }
      return size;
    }

    @Override
    public InputReport mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.timestamp = input.readUInt64();
            break;
          }
          case 16: {
            this.dispChannelId = input.readInt32();
            break;
          }
          case 26: {
            if (this.touchEvent == null) {
              this.touchEvent = new ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent();
            }
            input.readMessage(this.touchEvent);
            break;
          }
          case 34: {
            if (this.keyEvent == null) {
              this.keyEvent = new ca.anodsplace.headunit.aap.protocol.nano.Input.KeyEvent();
            }
            input.readMessage(this.keyEvent);
            break;
          }
          case 42: {
            if (this.absoluteEvent == null) {
              this.absoluteEvent = new ca.anodsplace.headunit.aap.protocol.nano.Input.AbsoluteEvent();
            }
            input.readMessage(this.absoluteEvent);
            break;
          }
          case 50: {
            if (this.relativeEvent == null) {
              this.relativeEvent = new ca.anodsplace.headunit.aap.protocol.nano.Input.RelativeEvent();
            }
            input.readMessage(this.relativeEvent);
            break;
          }
          case 58: {
            if (this.touchpadEvent == null) {
              this.touchpadEvent = new ca.anodsplace.headunit.aap.protocol.nano.Input.TouchEvent();
            }
            input.readMessage(this.touchpadEvent);
            break;
          }
        }
      }
    }

    public static InputReport parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new InputReport(), data);
    }

    public static InputReport parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new InputReport().mergeFrom(input);
    }
  }

  public static final class KeyBindingRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile KeyBindingRequest[] _emptyArray;
    public static KeyBindingRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new KeyBindingRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated int32 keycodes = 1;
    public int[] keycodes;

    public KeyBindingRequest() {
      clear();
    }

    public KeyBindingRequest clear() {
      keycodes = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.keycodes != null && this.keycodes.length > 0) {
        for (int i = 0; i < this.keycodes.length; i++) {
          output.writeInt32(1, this.keycodes[i]);
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.keycodes != null && this.keycodes.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.keycodes.length; i++) {
          int element = this.keycodes[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.keycodes.length;
      }
      return size;
    }

    @Override
    public KeyBindingRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 8);
            int i = this.keycodes == null ? 0 : this.keycodes.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.keycodes, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readInt32();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readInt32();
            this.keycodes = newArray;
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readInt32();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.keycodes == null ? 0 : this.keycodes.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.keycodes, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readInt32();
            }
            this.keycodes = newArray;
            input.popLimit(limit);
            break;
          }
        }
      }
    }

    public static KeyBindingRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new KeyBindingRequest(), data);
    }

    public static KeyBindingRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new KeyBindingRequest().mergeFrom(input);
    }
  }

  public static final class BindingResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile BindingResponse[] _emptyArray;
    public static BindingResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new BindingResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // required .ca.yyx.hu.aap.protocol.MessageStatus status = 1;
    public int status;

    public BindingResponse() {
      clear();
    }

    public BindingResponse clear() {
      status = ca.anodsplace.headunit.aap.protocol.nano.Common.STATUS_OK;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.status);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.status);
      return size;
    }

    @Override
    public BindingResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.anodsplace.headunit.aap.protocol.nano.Common.STATUS_OK:
                this.status = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static BindingResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new BindingResponse(), data);
    }

    public static BindingResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new BindingResponse().mergeFrom(input);
    }
  }
}
