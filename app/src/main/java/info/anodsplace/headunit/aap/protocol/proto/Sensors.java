// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sensors.proto

package info.anodsplace.headunit.aap.protocol.proto;

public final class Sensors {
  private Sensors() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code info.anodsplace.headunit.aap.protocol.proto.SensorsMsgType}
   */
  public enum SensorsMsgType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SENSOR_STARTREQUEST = 32769;</code>
     */
    SENSOR_STARTREQUEST(32769),
    /**
     * <code>SENSOR_STARTRESPONSE = 32770;</code>
     */
    SENSOR_STARTRESPONSE(32770),
    /**
     * <code>SENSOR_EVENT = 32771;</code>
     */
    SENSOR_EVENT(32771),
    ;

    /**
     * <code>SENSOR_STARTREQUEST = 32769;</code>
     */
    public static final int SENSOR_STARTREQUEST_VALUE = 32769;
    /**
     * <code>SENSOR_STARTRESPONSE = 32770;</code>
     */
    public static final int SENSOR_STARTRESPONSE_VALUE = 32770;
    /**
     * <code>SENSOR_EVENT = 32771;</code>
     */
    public static final int SENSOR_EVENT_VALUE = 32771;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SensorsMsgType valueOf(int value) {
      return forNumber(value);
    }

    public static SensorsMsgType forNumber(int value) {
      switch (value) {
        case 32769: return SENSOR_STARTREQUEST;
        case 32770: return SENSOR_STARTRESPONSE;
        case 32771: return SENSOR_EVENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SensorsMsgType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SensorsMsgType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SensorsMsgType>() {
            public SensorsMsgType findValueByNumber(int number) {
              return SensorsMsgType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return info.anodsplace.headunit.aap.protocol.proto.Sensors.getDescriptor().getEnumTypes().get(0);
    }

    private static final SensorsMsgType[] VALUES = values();

    public static SensorsMsgType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SensorsMsgType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:info.anodsplace.headunit.aap.protocol.proto.SensorsMsgType)
  }

  /**
   * Protobuf enum {@code info.anodsplace.headunit.aap.protocol.proto.SensorType}
   */
  public enum SensorType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LOCATION = 1;</code>
     */
    LOCATION(1),
    /**
     * <code>COMPASS = 2;</code>
     */
    COMPASS(2),
    /**
     * <code>CAR_SPEED = 3;</code>
     */
    CAR_SPEED(3),
    /**
     * <code>RPM = 4;</code>
     */
    RPM(4),
    /**
     * <code>ODOMETER = 5;</code>
     */
    ODOMETER(5),
    /**
     * <code>FUEL_LEVEL = 6;</code>
     */
    FUEL_LEVEL(6),
    /**
     * <code>PARKING_BRAKE = 7;</code>
     */
    PARKING_BRAKE(7),
    /**
     * <code>GEAR = 8;</code>
     */
    GEAR(8),
    /**
     * <code>DIAGNOSTICS = 9;</code>
     */
    DIAGNOSTICS(9),
    /**
     * <code>NIGHT = 10;</code>
     */
    NIGHT(10),
    /**
     * <code>ENVIRONMENT = 11;</code>
     */
    ENVIRONMENT(11),
    /**
     * <code>HVAC = 12;</code>
     */
    HVAC(12),
    /**
     * <code>DRIVING_STATUS = 13;</code>
     */
    DRIVING_STATUS(13),
    /**
     * <code>DEAD_RECONING = 14;</code>
     */
    DEAD_RECONING(14),
    /**
     * <code>PASSENGER = 15;</code>
     */
    PASSENGER(15),
    /**
     * <code>DOOR = 16;</code>
     */
    DOOR(16),
    /**
     * <code>LIGHT = 17;</code>
     */
    LIGHT(17),
    /**
     * <code>TIRE = 18;</code>
     */
    TIRE(18),
    /**
     * <code>ACCEL = 19;</code>
     */
    ACCEL(19),
    /**
     * <code>GYRO = 20;</code>
     */
    GYRO(20),
    /**
     * <code>GPS = 21;</code>
     */
    GPS(21),
    ;

    /**
     * <code>LOCATION = 1;</code>
     */
    public static final int LOCATION_VALUE = 1;
    /**
     * <code>COMPASS = 2;</code>
     */
    public static final int COMPASS_VALUE = 2;
    /**
     * <code>CAR_SPEED = 3;</code>
     */
    public static final int CAR_SPEED_VALUE = 3;
    /**
     * <code>RPM = 4;</code>
     */
    public static final int RPM_VALUE = 4;
    /**
     * <code>ODOMETER = 5;</code>
     */
    public static final int ODOMETER_VALUE = 5;
    /**
     * <code>FUEL_LEVEL = 6;</code>
     */
    public static final int FUEL_LEVEL_VALUE = 6;
    /**
     * <code>PARKING_BRAKE = 7;</code>
     */
    public static final int PARKING_BRAKE_VALUE = 7;
    /**
     * <code>GEAR = 8;</code>
     */
    public static final int GEAR_VALUE = 8;
    /**
     * <code>DIAGNOSTICS = 9;</code>
     */
    public static final int DIAGNOSTICS_VALUE = 9;
    /**
     * <code>NIGHT = 10;</code>
     */
    public static final int NIGHT_VALUE = 10;
    /**
     * <code>ENVIRONMENT = 11;</code>
     */
    public static final int ENVIRONMENT_VALUE = 11;
    /**
     * <code>HVAC = 12;</code>
     */
    public static final int HVAC_VALUE = 12;
    /**
     * <code>DRIVING_STATUS = 13;</code>
     */
    public static final int DRIVING_STATUS_VALUE = 13;
    /**
     * <code>DEAD_RECONING = 14;</code>
     */
    public static final int DEAD_RECONING_VALUE = 14;
    /**
     * <code>PASSENGER = 15;</code>
     */
    public static final int PASSENGER_VALUE = 15;
    /**
     * <code>DOOR = 16;</code>
     */
    public static final int DOOR_VALUE = 16;
    /**
     * <code>LIGHT = 17;</code>
     */
    public static final int LIGHT_VALUE = 17;
    /**
     * <code>TIRE = 18;</code>
     */
    public static final int TIRE_VALUE = 18;
    /**
     * <code>ACCEL = 19;</code>
     */
    public static final int ACCEL_VALUE = 19;
    /**
     * <code>GYRO = 20;</code>
     */
    public static final int GYRO_VALUE = 20;
    /**
     * <code>GPS = 21;</code>
     */
    public static final int GPS_VALUE = 21;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SensorType valueOf(int value) {
      return forNumber(value);
    }

    public static SensorType forNumber(int value) {
      switch (value) {
        case 1: return LOCATION;
        case 2: return COMPASS;
        case 3: return CAR_SPEED;
        case 4: return RPM;
        case 5: return ODOMETER;
        case 6: return FUEL_LEVEL;
        case 7: return PARKING_BRAKE;
        case 8: return GEAR;
        case 9: return DIAGNOSTICS;
        case 10: return NIGHT;
        case 11: return ENVIRONMENT;
        case 12: return HVAC;
        case 13: return DRIVING_STATUS;
        case 14: return DEAD_RECONING;
        case 15: return PASSENGER;
        case 16: return DOOR;
        case 17: return LIGHT;
        case 18: return TIRE;
        case 19: return ACCEL;
        case 20: return GYRO;
        case 21: return GPS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SensorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SensorType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SensorType>() {
            public SensorType findValueByNumber(int number) {
              return SensorType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return info.anodsplace.headunit.aap.protocol.proto.Sensors.getDescriptor().getEnumTypes().get(1);
    }

    private static final SensorType[] VALUES = values();

    public static SensorType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SensorType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:info.anodsplace.headunit.aap.protocol.proto.SensorType)
  }

  public interface SensorBatchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData> 
        getLocationDataList();
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData getLocationData(int index);
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
     */
    int getLocationDataCount();
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationDataOrBuilder> 
        getLocationDataOrBuilderList();
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationDataOrBuilder getLocationDataOrBuilder(
        int index);

    /**
     * <pre>
     * Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData> 
        getCompassDataList();
    /**
     * <pre>
     * Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData getCompassData(int index);
    /**
     * <pre>
     * Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
     */
    int getCompassDataCount();
    /**
     * <pre>
     * Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassDataOrBuilder> 
        getCompassDataOrBuilderList();
    /**
     * <pre>
     * Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassDataOrBuilder getCompassDataOrBuilder(
        int index);

    /**
     * <pre>
     * Working - Aka data is received, but has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData> 
        getSpeedDataList();
    /**
     * <pre>
     * Working - Aka data is received, but has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData getSpeedData(int index);
    /**
     * <pre>
     * Working - Aka data is received, but has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
     */
    int getSpeedDataCount();
    /**
     * <pre>
     * Working - Aka data is received, but has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedDataOrBuilder> 
        getSpeedDataOrBuilderList();
    /**
     * <pre>
     * Working - Aka data is received, but has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedDataOrBuilder getSpeedDataOrBuilder(
        int index);

    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData> 
        getRpmList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData getRpm(int index);
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
     */
    int getRpmCount();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmDataOrBuilder> 
        getRpmOrBuilderList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmDataOrBuilder getRpmOrBuilder(
        int index);

    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData> 
        getOdometerDataList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData getOdometerData(int index);
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
     */
    int getOdometerDataCount();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerDataOrBuilder> 
        getOdometerDataOrBuilderList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerDataOrBuilder getOdometerDataOrBuilder(
        int index);

    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData> 
        getFuelDataList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData getFuelData(int index);
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
     */
    int getFuelDataCount();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelDataOrBuilder> 
        getFuelDataOrBuilderList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelDataOrBuilder getFuelDataOrBuilder(
        int index);

    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData> 
        getParkingbrakeDataList();
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData getParkingbrakeData(int index);
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
     */
    int getParkingbrakeDataCount();
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeDataOrBuilder> 
        getParkingbrakeDataOrBuilderList();
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeDataOrBuilder getParkingbrakeDataOrBuilder(
        int index);

    /**
     * <pre>
     *Working but need to do the enum definition, and has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData> 
        getGearDataList();
    /**
     * <pre>
     *Working but need to do the enum definition, and has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData getGearData(int index);
    /**
     * <pre>
     *Working but need to do the enum definition, and has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
     */
    int getGearDataCount();
    /**
     * <pre>
     *Working but need to do the enum definition, and has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearDataOrBuilder> 
        getGearDataOrBuilderList();
    /**
     * <pre>
     *Working but need to do the enum definition, and has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearDataOrBuilder getGearDataOrBuilder(
        int index);

    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData> 
        getDiagnosticsDataList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData getDiagnosticsData(int index);
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
     */
    int getDiagnosticsDataCount();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsDataOrBuilder> 
        getDiagnosticsDataOrBuilderList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsDataOrBuilder getDiagnosticsDataOrBuilder(
        int index);

    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData> 
        getNightModeList();
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData getNightMode(int index);
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
     */
    int getNightModeCount();
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightDataOrBuilder> 
        getNightModeOrBuilderList();
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightDataOrBuilder getNightModeOrBuilder(
        int index);

    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData> 
        getEnviormentDataList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData getEnviormentData(int index);
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
     */
    int getEnviormentDataCount();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentDataOrBuilder> 
        getEnviormentDataOrBuilderList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentDataOrBuilder getEnviormentDataOrBuilder(
        int index);

    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData> 
        getHvacDataList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData getHvacData(int index);
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
     */
    int getHvacDataCount();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacDataOrBuilder> 
        getHvacDataOrBuilderList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacDataOrBuilder getHvacDataOrBuilder(
        int index);

    /**
     * <pre>
     *Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData> 
        getDrivingStatusList();
    /**
     * <pre>
     *Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData getDrivingStatus(int index);
    /**
     * <pre>
     *Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
     */
    int getDrivingStatusCount();
    /**
     * <pre>
     *Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusDataOrBuilder> 
        getDrivingStatusOrBuilderList();
    /**
     * <pre>
     *Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusDataOrBuilder getDrivingStatusOrBuilder(
        int index);

    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData> 
        getDeadReckoningList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData getDeadReckoning(int index);
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
     */
    int getDeadReckoningCount();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningDataOrBuilder> 
        getDeadReckoningOrBuilderList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningDataOrBuilder getDeadReckoningOrBuilder(
        int index);

    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData> 
        getPassengerDataList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData getPassengerData(int index);
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
     */
    int getPassengerDataCount();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerDataOrBuilder> 
        getPassengerDataOrBuilderList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerDataOrBuilder getPassengerDataOrBuilder(
        int index);

    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData> 
        getDoorDataList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData getDoorData(int index);
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
     */
    int getDoorDataCount();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorDataOrBuilder> 
        getDoorDataOrBuilderList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorDataOrBuilder getDoorDataOrBuilder(
        int index);

    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData> 
        getLightDataList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData getLightData(int index);
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
     */
    int getLightDataCount();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightDataOrBuilder> 
        getLightDataOrBuilderList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightDataOrBuilder getLightDataOrBuilder(
        int index);

    /**
     * <pre>
     *repeated TirePressureData Tire = 18;
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData> 
        getAccelDataList();
    /**
     * <pre>
     *repeated TirePressureData Tire = 18;
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData getAccelData(int index);
    /**
     * <pre>
     *repeated TirePressureData Tire = 18;
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
     */
    int getAccelDataCount();
    /**
     * <pre>
     *repeated TirePressureData Tire = 18;
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerDataOrBuilder> 
        getAccelDataOrBuilderList();
    /**
     * <pre>
     *repeated TirePressureData Tire = 18;
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerDataOrBuilder getAccelDataOrBuilder(
        int index);

    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData> 
        getGyroDataList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData getGyroData(int index);
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
     */
    int getGyroDataCount();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeDataOrBuilder> 
        getGyroDataOrBuilderList();
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeDataOrBuilder getGyroDataOrBuilder(
        int index);

    /**
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
     */
    java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData> 
        getGpsSatelliteDataList();
    /**
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData getGpsSatelliteData(int index);
    /**
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
     */
    int getGpsSatelliteDataCount();
    /**
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
     */
    java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteDataOrBuilder> 
        getGpsSatelliteDataOrBuilderList();
    /**
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteDataOrBuilder getGpsSatelliteDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch}
   */
  public  static final class SensorBatch extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch)
      SensorBatchOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SensorBatch.newBuilder() to construct.
    private SensorBatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SensorBatch() {
      locationData_ = java.util.Collections.emptyList();
      compassData_ = java.util.Collections.emptyList();
      speedData_ = java.util.Collections.emptyList();
      rpm_ = java.util.Collections.emptyList();
      odometerData_ = java.util.Collections.emptyList();
      fuelData_ = java.util.Collections.emptyList();
      parkingbrakeData_ = java.util.Collections.emptyList();
      gearData_ = java.util.Collections.emptyList();
      diagnosticsData_ = java.util.Collections.emptyList();
      nightMode_ = java.util.Collections.emptyList();
      enviormentData_ = java.util.Collections.emptyList();
      hvacData_ = java.util.Collections.emptyList();
      drivingStatus_ = java.util.Collections.emptyList();
      deadReckoning_ = java.util.Collections.emptyList();
      passengerData_ = java.util.Collections.emptyList();
      doorData_ = java.util.Collections.emptyList();
      lightData_ = java.util.Collections.emptyList();
      accelData_ = java.util.Collections.emptyList();
      gyroData_ = java.util.Collections.emptyList();
      gpsSatelliteData_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SensorBatch();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SensorBatch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                locationData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData>();
                mutable_bitField0_ |= 0x00000001;
              }
              locationData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                compassData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData>();
                mutable_bitField0_ |= 0x00000002;
              }
              compassData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                speedData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData>();
                mutable_bitField0_ |= 0x00000004;
              }
              speedData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                rpm_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData>();
                mutable_bitField0_ |= 0x00000008;
              }
              rpm_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                odometerData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData>();
                mutable_bitField0_ |= 0x00000010;
              }
              odometerData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                fuelData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData>();
                mutable_bitField0_ |= 0x00000020;
              }
              fuelData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                parkingbrakeData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData>();
                mutable_bitField0_ |= 0x00000040;
              }
              parkingbrakeData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                gearData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData>();
                mutable_bitField0_ |= 0x00000080;
              }
              gearData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                diagnosticsData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData>();
                mutable_bitField0_ |= 0x00000100;
              }
              diagnosticsData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.PARSER, extensionRegistry));
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                nightMode_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData>();
                mutable_bitField0_ |= 0x00000200;
              }
              nightMode_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.PARSER, extensionRegistry));
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) != 0)) {
                enviormentData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData>();
                mutable_bitField0_ |= 0x00000400;
              }
              enviormentData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.PARSER, extensionRegistry));
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) != 0)) {
                hvacData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData>();
                mutable_bitField0_ |= 0x00000800;
              }
              hvacData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.PARSER, extensionRegistry));
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) != 0)) {
                drivingStatus_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData>();
                mutable_bitField0_ |= 0x00001000;
              }
              drivingStatus_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.PARSER, extensionRegistry));
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) != 0)) {
                deadReckoning_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData>();
                mutable_bitField0_ |= 0x00002000;
              }
              deadReckoning_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.PARSER, extensionRegistry));
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) != 0)) {
                passengerData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData>();
                mutable_bitField0_ |= 0x00004000;
              }
              passengerData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.PARSER, extensionRegistry));
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) != 0)) {
                doorData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData>();
                mutable_bitField0_ |= 0x00008000;
              }
              doorData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.PARSER, extensionRegistry));
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00010000) != 0)) {
                lightData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData>();
                mutable_bitField0_ |= 0x00010000;
              }
              lightData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.PARSER, extensionRegistry));
              break;
            }
            case 154: {
              if (!((mutable_bitField0_ & 0x00020000) != 0)) {
                accelData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData>();
                mutable_bitField0_ |= 0x00020000;
              }
              accelData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.PARSER, extensionRegistry));
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00040000) != 0)) {
                gyroData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData>();
                mutable_bitField0_ |= 0x00040000;
              }
              gyroData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.PARSER, extensionRegistry));
              break;
            }
            case 170: {
              if (!((mutable_bitField0_ & 0x00080000) != 0)) {
                gpsSatelliteData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData>();
                mutable_bitField0_ |= 0x00080000;
              }
              gpsSatelliteData_.add(
                  input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          locationData_ = java.util.Collections.unmodifiableList(locationData_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          compassData_ = java.util.Collections.unmodifiableList(compassData_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          speedData_ = java.util.Collections.unmodifiableList(speedData_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          rpm_ = java.util.Collections.unmodifiableList(rpm_);
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          odometerData_ = java.util.Collections.unmodifiableList(odometerData_);
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          fuelData_ = java.util.Collections.unmodifiableList(fuelData_);
        }
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          parkingbrakeData_ = java.util.Collections.unmodifiableList(parkingbrakeData_);
        }
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          gearData_ = java.util.Collections.unmodifiableList(gearData_);
        }
        if (((mutable_bitField0_ & 0x00000100) != 0)) {
          diagnosticsData_ = java.util.Collections.unmodifiableList(diagnosticsData_);
        }
        if (((mutable_bitField0_ & 0x00000200) != 0)) {
          nightMode_ = java.util.Collections.unmodifiableList(nightMode_);
        }
        if (((mutable_bitField0_ & 0x00000400) != 0)) {
          enviormentData_ = java.util.Collections.unmodifiableList(enviormentData_);
        }
        if (((mutable_bitField0_ & 0x00000800) != 0)) {
          hvacData_ = java.util.Collections.unmodifiableList(hvacData_);
        }
        if (((mutable_bitField0_ & 0x00001000) != 0)) {
          drivingStatus_ = java.util.Collections.unmodifiableList(drivingStatus_);
        }
        if (((mutable_bitField0_ & 0x00002000) != 0)) {
          deadReckoning_ = java.util.Collections.unmodifiableList(deadReckoning_);
        }
        if (((mutable_bitField0_ & 0x00004000) != 0)) {
          passengerData_ = java.util.Collections.unmodifiableList(passengerData_);
        }
        if (((mutable_bitField0_ & 0x00008000) != 0)) {
          doorData_ = java.util.Collections.unmodifiableList(doorData_);
        }
        if (((mutable_bitField0_ & 0x00010000) != 0)) {
          lightData_ = java.util.Collections.unmodifiableList(lightData_);
        }
        if (((mutable_bitField0_ & 0x00020000) != 0)) {
          accelData_ = java.util.Collections.unmodifiableList(accelData_);
        }
        if (((mutable_bitField0_ & 0x00040000) != 0)) {
          gyroData_ = java.util.Collections.unmodifiableList(gyroData_);
        }
        if (((mutable_bitField0_ & 0x00080000) != 0)) {
          gpsSatelliteData_ = java.util.Collections.unmodifiableList(gpsSatelliteData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.Builder.class);
    }

    public interface LocationDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required uint64 timestamp = 1;</code>
       */
      boolean hasTimestamp();
      /**
       * <code>required uint64 timestamp = 1;</code>
       */
      long getTimestamp();

      /**
       * <code>required int32 latitude = 2;</code>
       */
      boolean hasLatitude();
      /**
       * <code>required int32 latitude = 2;</code>
       */
      int getLatitude();

      /**
       * <code>required int32 longitude = 3;</code>
       */
      boolean hasLongitude();
      /**
       * <code>required int32 longitude = 3;</code>
       */
      int getLongitude();

      /**
       * <code>required uint32 accuracy = 4;</code>
       */
      boolean hasAccuracy();
      /**
       * <code>required uint32 accuracy = 4;</code>
       */
      int getAccuracy();

      /**
       * <code>optional int32 altitude = 5;</code>
       */
      boolean hasAltitude();
      /**
       * <code>optional int32 altitude = 5;</code>
       */
      int getAltitude();

      /**
       * <code>optional int32 speed = 6;</code>
       */
      boolean hasSpeed();
      /**
       * <code>optional int32 speed = 6;</code>
       */
      int getSpeed();

      /**
       * <code>optional int32 bearing = 7;</code>
       */
      boolean hasBearing();
      /**
       * <code>optional int32 bearing = 7;</code>
       */
      int getBearing();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData}
     */
    public  static final class LocationData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData)
        LocationDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LocationData.newBuilder() to construct.
      private LocationData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LocationData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LocationData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private LocationData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                timestamp_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                latitude_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                longitude_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                accuracy_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                altitude_ = input.readInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                speed_ = input.readInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                bearing_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LocationData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LocationData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.Builder.class);
      }

      private int bitField0_;
      public static final int TIMESTAMP_FIELD_NUMBER = 1;
      private long timestamp_;
      /**
       * <code>required uint64 timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required uint64 timestamp = 1;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }

      public static final int LATITUDE_FIELD_NUMBER = 2;
      private int latitude_;
      /**
       * <code>required int32 latitude = 2;</code>
       */
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required int32 latitude = 2;</code>
       */
      public int getLatitude() {
        return latitude_;
      }

      public static final int LONGITUDE_FIELD_NUMBER = 3;
      private int longitude_;
      /**
       * <code>required int32 longitude = 3;</code>
       */
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required int32 longitude = 3;</code>
       */
      public int getLongitude() {
        return longitude_;
      }

      public static final int ACCURACY_FIELD_NUMBER = 4;
      private int accuracy_;
      /**
       * <code>required uint32 accuracy = 4;</code>
       */
      public boolean hasAccuracy() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required uint32 accuracy = 4;</code>
       */
      public int getAccuracy() {
        return accuracy_;
      }

      public static final int ALTITUDE_FIELD_NUMBER = 5;
      private int altitude_;
      /**
       * <code>optional int32 altitude = 5;</code>
       */
      public boolean hasAltitude() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int32 altitude = 5;</code>
       */
      public int getAltitude() {
        return altitude_;
      }

      public static final int SPEED_FIELD_NUMBER = 6;
      private int speed_;
      /**
       * <code>optional int32 speed = 6;</code>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional int32 speed = 6;</code>
       */
      public int getSpeed() {
        return speed_;
      }

      public static final int BEARING_FIELD_NUMBER = 7;
      private int bearing_;
      /**
       * <code>optional int32 bearing = 7;</code>
       */
      public boolean hasBearing() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional int32 bearing = 7;</code>
       */
      public int getBearing() {
        return bearing_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasTimestamp()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLatitude()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLongitude()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasAccuracy()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt64(1, timestamp_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, latitude_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt32(3, longitude_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, accuracy_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeInt32(5, altitude_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeInt32(6, speed_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeInt32(7, bearing_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, timestamp_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, latitude_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, longitude_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, accuracy_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, altitude_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, speed_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(7, bearing_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData) obj;

        if (hasTimestamp() != other.hasTimestamp()) return false;
        if (hasTimestamp()) {
          if (getTimestamp()
              != other.getTimestamp()) return false;
        }
        if (hasLatitude() != other.hasLatitude()) return false;
        if (hasLatitude()) {
          if (getLatitude()
              != other.getLatitude()) return false;
        }
        if (hasLongitude() != other.hasLongitude()) return false;
        if (hasLongitude()) {
          if (getLongitude()
              != other.getLongitude()) return false;
        }
        if (hasAccuracy() != other.hasAccuracy()) return false;
        if (hasAccuracy()) {
          if (getAccuracy()
              != other.getAccuracy()) return false;
        }
        if (hasAltitude() != other.hasAltitude()) return false;
        if (hasAltitude()) {
          if (getAltitude()
              != other.getAltitude()) return false;
        }
        if (hasSpeed() != other.hasSpeed()) return false;
        if (hasSpeed()) {
          if (getSpeed()
              != other.getSpeed()) return false;
        }
        if (hasBearing() != other.hasBearing()) return false;
        if (hasBearing()) {
          if (getBearing()
              != other.getBearing()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTimestamp()) {
          hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTimestamp());
        }
        if (hasLatitude()) {
          hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
          hash = (53 * hash) + getLatitude();
        }
        if (hasLongitude()) {
          hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
          hash = (53 * hash) + getLongitude();
        }
        if (hasAccuracy()) {
          hash = (37 * hash) + ACCURACY_FIELD_NUMBER;
          hash = (53 * hash) + getAccuracy();
        }
        if (hasAltitude()) {
          hash = (37 * hash) + ALTITUDE_FIELD_NUMBER;
          hash = (53 * hash) + getAltitude();
        }
        if (hasSpeed()) {
          hash = (37 * hash) + SPEED_FIELD_NUMBER;
          hash = (53 * hash) + getSpeed();
        }
        if (hasBearing()) {
          hash = (37 * hash) + BEARING_FIELD_NUMBER;
          hash = (53 * hash) + getBearing();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LocationData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LocationData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          timestamp_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          latitude_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          longitude_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          accuracy_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          altitude_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          speed_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          bearing_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LocationData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.timestamp_ = timestamp_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.latitude_ = latitude_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.longitude_ = longitude_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.accuracy_ = accuracy_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.altitude_ = altitude_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.speed_ = speed_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.bearing_ = bearing_;
            to_bitField0_ |= 0x00000040;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.getDefaultInstance()) return this;
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          if (other.hasLatitude()) {
            setLatitude(other.getLatitude());
          }
          if (other.hasLongitude()) {
            setLongitude(other.getLongitude());
          }
          if (other.hasAccuracy()) {
            setAccuracy(other.getAccuracy());
          }
          if (other.hasAltitude()) {
            setAltitude(other.getAltitude());
          }
          if (other.hasSpeed()) {
            setSpeed(other.getSpeed());
          }
          if (other.hasBearing()) {
            setBearing(other.getBearing());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasTimestamp()) {
            return false;
          }
          if (!hasLatitude()) {
            return false;
          }
          if (!hasLongitude()) {
            return false;
          }
          if (!hasAccuracy()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long timestamp_ ;
        /**
         * <code>required uint64 timestamp = 1;</code>
         */
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required uint64 timestamp = 1;</code>
         */
        public long getTimestamp() {
          return timestamp_;
        }
        /**
         * <code>required uint64 timestamp = 1;</code>
         */
        public Builder setTimestamp(long value) {
          bitField0_ |= 0x00000001;
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint64 timestamp = 1;</code>
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000001);
          timestamp_ = 0L;
          onChanged();
          return this;
        }

        private int latitude_ ;
        /**
         * <code>required int32 latitude = 2;</code>
         */
        public boolean hasLatitude() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>required int32 latitude = 2;</code>
         */
        public int getLatitude() {
          return latitude_;
        }
        /**
         * <code>required int32 latitude = 2;</code>
         */
        public Builder setLatitude(int value) {
          bitField0_ |= 0x00000002;
          latitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 latitude = 2;</code>
         */
        public Builder clearLatitude() {
          bitField0_ = (bitField0_ & ~0x00000002);
          latitude_ = 0;
          onChanged();
          return this;
        }

        private int longitude_ ;
        /**
         * <code>required int32 longitude = 3;</code>
         */
        public boolean hasLongitude() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>required int32 longitude = 3;</code>
         */
        public int getLongitude() {
          return longitude_;
        }
        /**
         * <code>required int32 longitude = 3;</code>
         */
        public Builder setLongitude(int value) {
          bitField0_ |= 0x00000004;
          longitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 longitude = 3;</code>
         */
        public Builder clearLongitude() {
          bitField0_ = (bitField0_ & ~0x00000004);
          longitude_ = 0;
          onChanged();
          return this;
        }

        private int accuracy_ ;
        /**
         * <code>required uint32 accuracy = 4;</code>
         */
        public boolean hasAccuracy() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>required uint32 accuracy = 4;</code>
         */
        public int getAccuracy() {
          return accuracy_;
        }
        /**
         * <code>required uint32 accuracy = 4;</code>
         */
        public Builder setAccuracy(int value) {
          bitField0_ |= 0x00000008;
          accuracy_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint32 accuracy = 4;</code>
         */
        public Builder clearAccuracy() {
          bitField0_ = (bitField0_ & ~0x00000008);
          accuracy_ = 0;
          onChanged();
          return this;
        }

        private int altitude_ ;
        /**
         * <code>optional int32 altitude = 5;</code>
         */
        public boolean hasAltitude() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional int32 altitude = 5;</code>
         */
        public int getAltitude() {
          return altitude_;
        }
        /**
         * <code>optional int32 altitude = 5;</code>
         */
        public Builder setAltitude(int value) {
          bitField0_ |= 0x00000010;
          altitude_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 altitude = 5;</code>
         */
        public Builder clearAltitude() {
          bitField0_ = (bitField0_ & ~0x00000010);
          altitude_ = 0;
          onChanged();
          return this;
        }

        private int speed_ ;
        /**
         * <code>optional int32 speed = 6;</code>
         */
        public boolean hasSpeed() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional int32 speed = 6;</code>
         */
        public int getSpeed() {
          return speed_;
        }
        /**
         * <code>optional int32 speed = 6;</code>
         */
        public Builder setSpeed(int value) {
          bitField0_ |= 0x00000020;
          speed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 speed = 6;</code>
         */
        public Builder clearSpeed() {
          bitField0_ = (bitField0_ & ~0x00000020);
          speed_ = 0;
          onChanged();
          return this;
        }

        private int bearing_ ;
        /**
         * <code>optional int32 bearing = 7;</code>
         */
        public boolean hasBearing() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional int32 bearing = 7;</code>
         */
        public int getBearing() {
          return bearing_;
        }
        /**
         * <code>optional int32 bearing = 7;</code>
         */
        public Builder setBearing(int value) {
          bitField0_ |= 0x00000040;
          bearing_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 bearing = 7;</code>
         */
        public Builder clearBearing() {
          bitField0_ = (bitField0_ & ~0x00000040);
          bearing_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<LocationData>
          PARSER = new com.google.protobuf.AbstractParser<LocationData>() {
        @java.lang.Override
        public LocationData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LocationData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<LocationData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LocationData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RpmDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required int32 rpm = 1;</code>
       */
      boolean hasRpm();
      /**
       * <code>required int32 rpm = 1;</code>
       */
      int getRpm();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData}
     */
    public  static final class RpmData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData)
        RpmDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use RpmData.newBuilder() to construct.
      private RpmData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RpmData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new RpmData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private RpmData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                rpm_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_RpmData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_RpmData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.Builder.class);
      }

      private int bitField0_;
      public static final int RPM_FIELD_NUMBER = 1;
      private int rpm_;
      /**
       * <code>required int32 rpm = 1;</code>
       */
      public boolean hasRpm() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 rpm = 1;</code>
       */
      public int getRpm() {
        return rpm_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasRpm()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, rpm_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, rpm_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData) obj;

        if (hasRpm() != other.hasRpm()) return false;
        if (hasRpm()) {
          if (getRpm()
              != other.getRpm()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasRpm()) {
          hash = (37 * hash) + RPM_FIELD_NUMBER;
          hash = (53 * hash) + getRpm();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_RpmData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_RpmData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          rpm_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_RpmData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.rpm_ = rpm_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.getDefaultInstance()) return this;
          if (other.hasRpm()) {
            setRpm(other.getRpm());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasRpm()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int rpm_ ;
        /**
         * <code>required int32 rpm = 1;</code>
         */
        public boolean hasRpm() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required int32 rpm = 1;</code>
         */
        public int getRpm() {
          return rpm_;
        }
        /**
         * <code>required int32 rpm = 1;</code>
         */
        public Builder setRpm(int value) {
          bitField0_ |= 0x00000001;
          rpm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 rpm = 1;</code>
         */
        public Builder clearRpm() {
          bitField0_ = (bitField0_ & ~0x00000001);
          rpm_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<RpmData>
          PARSER = new com.google.protobuf.AbstractParser<RpmData>() {
        @java.lang.Override
        public RpmData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RpmData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<RpmData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RpmData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface FuelDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required int32 fuellevel = 1;</code>
       */
      boolean hasFuellevel();
      /**
       * <code>required int32 fuellevel = 1;</code>
       */
      int getFuellevel();

      /**
       * <code>optional int32 range = 2;</code>
       */
      boolean hasRange();
      /**
       * <code>optional int32 range = 2;</code>
       */
      int getRange();

      /**
       * <code>optional bool lowfuel = 3;</code>
       */
      boolean hasLowfuel();
      /**
       * <code>optional bool lowfuel = 3;</code>
       */
      boolean getLowfuel();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData}
     */
    public  static final class FuelData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData)
        FuelDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use FuelData.newBuilder() to construct.
      private FuelData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private FuelData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new FuelData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private FuelData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                fuellevel_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                range_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                lowfuel_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_FuelData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_FuelData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.Builder.class);
      }

      private int bitField0_;
      public static final int FUELLEVEL_FIELD_NUMBER = 1;
      private int fuellevel_;
      /**
       * <code>required int32 fuellevel = 1;</code>
       */
      public boolean hasFuellevel() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 fuellevel = 1;</code>
       */
      public int getFuellevel() {
        return fuellevel_;
      }

      public static final int RANGE_FIELD_NUMBER = 2;
      private int range_;
      /**
       * <code>optional int32 range = 2;</code>
       */
      public boolean hasRange() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 range = 2;</code>
       */
      public int getRange() {
        return range_;
      }

      public static final int LOWFUEL_FIELD_NUMBER = 3;
      private boolean lowfuel_;
      /**
       * <code>optional bool lowfuel = 3;</code>
       */
      public boolean hasLowfuel() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bool lowfuel = 3;</code>
       */
      public boolean getLowfuel() {
        return lowfuel_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasFuellevel()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, fuellevel_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, range_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeBool(3, lowfuel_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, fuellevel_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, range_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, lowfuel_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData) obj;

        if (hasFuellevel() != other.hasFuellevel()) return false;
        if (hasFuellevel()) {
          if (getFuellevel()
              != other.getFuellevel()) return false;
        }
        if (hasRange() != other.hasRange()) return false;
        if (hasRange()) {
          if (getRange()
              != other.getRange()) return false;
        }
        if (hasLowfuel() != other.hasLowfuel()) return false;
        if (hasLowfuel()) {
          if (getLowfuel()
              != other.getLowfuel()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasFuellevel()) {
          hash = (37 * hash) + FUELLEVEL_FIELD_NUMBER;
          hash = (53 * hash) + getFuellevel();
        }
        if (hasRange()) {
          hash = (37 * hash) + RANGE_FIELD_NUMBER;
          hash = (53 * hash) + getRange();
        }
        if (hasLowfuel()) {
          hash = (37 * hash) + LOWFUEL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getLowfuel());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_FuelData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_FuelData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          fuellevel_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          range_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          lowfuel_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_FuelData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.fuellevel_ = fuellevel_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.range_ = range_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.lowfuel_ = lowfuel_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.getDefaultInstance()) return this;
          if (other.hasFuellevel()) {
            setFuellevel(other.getFuellevel());
          }
          if (other.hasRange()) {
            setRange(other.getRange());
          }
          if (other.hasLowfuel()) {
            setLowfuel(other.getLowfuel());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasFuellevel()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int fuellevel_ ;
        /**
         * <code>required int32 fuellevel = 1;</code>
         */
        public boolean hasFuellevel() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required int32 fuellevel = 1;</code>
         */
        public int getFuellevel() {
          return fuellevel_;
        }
        /**
         * <code>required int32 fuellevel = 1;</code>
         */
        public Builder setFuellevel(int value) {
          bitField0_ |= 0x00000001;
          fuellevel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 fuellevel = 1;</code>
         */
        public Builder clearFuellevel() {
          bitField0_ = (bitField0_ & ~0x00000001);
          fuellevel_ = 0;
          onChanged();
          return this;
        }

        private int range_ ;
        /**
         * <code>optional int32 range = 2;</code>
         */
        public boolean hasRange() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 range = 2;</code>
         */
        public int getRange() {
          return range_;
        }
        /**
         * <code>optional int32 range = 2;</code>
         */
        public Builder setRange(int value) {
          bitField0_ |= 0x00000002;
          range_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 range = 2;</code>
         */
        public Builder clearRange() {
          bitField0_ = (bitField0_ & ~0x00000002);
          range_ = 0;
          onChanged();
          return this;
        }

        private boolean lowfuel_ ;
        /**
         * <code>optional bool lowfuel = 3;</code>
         */
        public boolean hasLowfuel() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional bool lowfuel = 3;</code>
         */
        public boolean getLowfuel() {
          return lowfuel_;
        }
        /**
         * <code>optional bool lowfuel = 3;</code>
         */
        public Builder setLowfuel(boolean value) {
          bitField0_ |= 0x00000004;
          lowfuel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool lowfuel = 3;</code>
         */
        public Builder clearLowfuel() {
          bitField0_ = (bitField0_ & ~0x00000004);
          lowfuel_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<FuelData>
          PARSER = new com.google.protobuf.AbstractParser<FuelData>() {
        @java.lang.Override
        public FuelData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new FuelData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<FuelData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<FuelData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DeadReckoningDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 steering_angel = 1;</code>
       */
      boolean hasSteeringAngel();
      /**
       * <code>optional int32 steering_angel = 1;</code>
       */
      int getSteeringAngel();

      /**
       * <code>optional int32 wheel_speed = 2;</code>
       */
      boolean hasWheelSpeed();
      /**
       * <code>optional int32 wheel_speed = 2;</code>
       */
      int getWheelSpeed();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData}
     */
    public  static final class DeadReckoningData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData)
        DeadReckoningDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeadReckoningData.newBuilder() to construct.
      private DeadReckoningData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeadReckoningData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new DeadReckoningData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DeadReckoningData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                steeringAngel_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                wheelSpeed_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DeadReckoningData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DeadReckoningData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.Builder.class);
      }

      private int bitField0_;
      public static final int STEERING_ANGEL_FIELD_NUMBER = 1;
      private int steeringAngel_;
      /**
       * <code>optional int32 steering_angel = 1;</code>
       */
      public boolean hasSteeringAngel() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 steering_angel = 1;</code>
       */
      public int getSteeringAngel() {
        return steeringAngel_;
      }

      public static final int WHEEL_SPEED_FIELD_NUMBER = 2;
      private int wheelSpeed_;
      /**
       * <code>optional int32 wheel_speed = 2;</code>
       */
      public boolean hasWheelSpeed() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 wheel_speed = 2;</code>
       */
      public int getWheelSpeed() {
        return wheelSpeed_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, steeringAngel_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, wheelSpeed_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, steeringAngel_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, wheelSpeed_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData) obj;

        if (hasSteeringAngel() != other.hasSteeringAngel()) return false;
        if (hasSteeringAngel()) {
          if (getSteeringAngel()
              != other.getSteeringAngel()) return false;
        }
        if (hasWheelSpeed() != other.hasWheelSpeed()) return false;
        if (hasWheelSpeed()) {
          if (getWheelSpeed()
              != other.getWheelSpeed()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSteeringAngel()) {
          hash = (37 * hash) + STEERING_ANGEL_FIELD_NUMBER;
          hash = (53 * hash) + getSteeringAngel();
        }
        if (hasWheelSpeed()) {
          hash = (37 * hash) + WHEEL_SPEED_FIELD_NUMBER;
          hash = (53 * hash) + getWheelSpeed();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DeadReckoningData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DeadReckoningData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          steeringAngel_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          wheelSpeed_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DeadReckoningData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.steeringAngel_ = steeringAngel_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.wheelSpeed_ = wheelSpeed_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.getDefaultInstance()) return this;
          if (other.hasSteeringAngel()) {
            setSteeringAngel(other.getSteeringAngel());
          }
          if (other.hasWheelSpeed()) {
            setWheelSpeed(other.getWheelSpeed());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int steeringAngel_ ;
        /**
         * <code>optional int32 steering_angel = 1;</code>
         */
        public boolean hasSteeringAngel() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int32 steering_angel = 1;</code>
         */
        public int getSteeringAngel() {
          return steeringAngel_;
        }
        /**
         * <code>optional int32 steering_angel = 1;</code>
         */
        public Builder setSteeringAngel(int value) {
          bitField0_ |= 0x00000001;
          steeringAngel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 steering_angel = 1;</code>
         */
        public Builder clearSteeringAngel() {
          bitField0_ = (bitField0_ & ~0x00000001);
          steeringAngel_ = 0;
          onChanged();
          return this;
        }

        private int wheelSpeed_ ;
        /**
         * <code>optional int32 wheel_speed = 2;</code>
         */
        public boolean hasWheelSpeed() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 wheel_speed = 2;</code>
         */
        public int getWheelSpeed() {
          return wheelSpeed_;
        }
        /**
         * <code>optional int32 wheel_speed = 2;</code>
         */
        public Builder setWheelSpeed(int value) {
          bitField0_ |= 0x00000002;
          wheelSpeed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 wheel_speed = 2;</code>
         */
        public Builder clearWheelSpeed() {
          bitField0_ = (bitField0_ & ~0x00000002);
          wheelSpeed_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DeadReckoningData>
          PARSER = new com.google.protobuf.AbstractParser<DeadReckoningData>() {
        @java.lang.Override
        public DeadReckoningData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DeadReckoningData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DeadReckoningData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeadReckoningData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface NightDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required bool is_night_mode = 1;</code>
       */
      boolean hasIsNightMode();
      /**
       * <code>required bool is_night_mode = 1;</code>
       */
      boolean getIsNightMode();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData}
     */
    public  static final class NightData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData)
        NightDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use NightData.newBuilder() to construct.
      private NightData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private NightData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new NightData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private NightData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                isNightMode_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_NightData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_NightData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.Builder.class);
      }

      private int bitField0_;
      public static final int IS_NIGHT_MODE_FIELD_NUMBER = 1;
      private boolean isNightMode_;
      /**
       * <code>required bool is_night_mode = 1;</code>
       */
      public boolean hasIsNightMode() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required bool is_night_mode = 1;</code>
       */
      public boolean getIsNightMode() {
        return isNightMode_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasIsNightMode()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeBool(1, isNightMode_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, isNightMode_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData) obj;

        if (hasIsNightMode() != other.hasIsNightMode()) return false;
        if (hasIsNightMode()) {
          if (getIsNightMode()
              != other.getIsNightMode()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasIsNightMode()) {
          hash = (37 * hash) + IS_NIGHT_MODE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsNightMode());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_NightData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_NightData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          isNightMode_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_NightData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.isNightMode_ = isNightMode_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.getDefaultInstance()) return this;
          if (other.hasIsNightMode()) {
            setIsNightMode(other.getIsNightMode());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasIsNightMode()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean isNightMode_ ;
        /**
         * <code>required bool is_night_mode = 1;</code>
         */
        public boolean hasIsNightMode() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required bool is_night_mode = 1;</code>
         */
        public boolean getIsNightMode() {
          return isNightMode_;
        }
        /**
         * <code>required bool is_night_mode = 1;</code>
         */
        public Builder setIsNightMode(boolean value) {
          bitField0_ |= 0x00000001;
          isNightMode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool is_night_mode = 1;</code>
         */
        public Builder clearIsNightMode() {
          bitField0_ = (bitField0_ & ~0x00000001);
          isNightMode_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<NightData>
          PARSER = new com.google.protobuf.AbstractParser<NightData>() {
        @java.lang.Override
        public NightData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new NightData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<NightData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<NightData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ParkingBrakeDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required bool is_engaged = 1;</code>
       */
      boolean hasIsEngaged();
      /**
       * <code>required bool is_engaged = 1;</code>
       */
      boolean getIsEngaged();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData}
     */
    public  static final class ParkingBrakeData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData)
        ParkingBrakeDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ParkingBrakeData.newBuilder() to construct.
      private ParkingBrakeData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ParkingBrakeData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ParkingBrakeData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ParkingBrakeData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                isEngaged_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_ParkingBrakeData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_ParkingBrakeData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.Builder.class);
      }

      private int bitField0_;
      public static final int IS_ENGAGED_FIELD_NUMBER = 1;
      private boolean isEngaged_;
      /**
       * <code>required bool is_engaged = 1;</code>
       */
      public boolean hasIsEngaged() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required bool is_engaged = 1;</code>
       */
      public boolean getIsEngaged() {
        return isEngaged_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasIsEngaged()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeBool(1, isEngaged_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, isEngaged_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData) obj;

        if (hasIsEngaged() != other.hasIsEngaged()) return false;
        if (hasIsEngaged()) {
          if (getIsEngaged()
              != other.getIsEngaged()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasIsEngaged()) {
          hash = (37 * hash) + IS_ENGAGED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsEngaged());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_ParkingBrakeData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_ParkingBrakeData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          isEngaged_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_ParkingBrakeData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.isEngaged_ = isEngaged_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.getDefaultInstance()) return this;
          if (other.hasIsEngaged()) {
            setIsEngaged(other.getIsEngaged());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasIsEngaged()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean isEngaged_ ;
        /**
         * <code>required bool is_engaged = 1;</code>
         */
        public boolean hasIsEngaged() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required bool is_engaged = 1;</code>
         */
        public boolean getIsEngaged() {
          return isEngaged_;
        }
        /**
         * <code>required bool is_engaged = 1;</code>
         */
        public Builder setIsEngaged(boolean value) {
          bitField0_ |= 0x00000001;
          isEngaged_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool is_engaged = 1;</code>
         */
        public Builder clearIsEngaged() {
          bitField0_ = (bitField0_ & ~0x00000001);
          isEngaged_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ParkingBrakeData>
          PARSER = new com.google.protobuf.AbstractParser<ParkingBrakeData>() {
        @java.lang.Override
        public ParkingBrakeData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ParkingBrakeData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ParkingBrakeData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ParkingBrakeData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DrivingStatusDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required int32 status = 1;</code>
       */
      boolean hasStatus();
      /**
       * <code>required int32 status = 1;</code>
       */
      int getStatus();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData}
     */
    public  static final class DrivingStatusData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData)
        DrivingStatusDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DrivingStatusData.newBuilder() to construct.
      private DrivingStatusData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DrivingStatusData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new DrivingStatusData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DrivingStatusData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                status_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DrivingStatusData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DrivingStatusData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.Builder.class);
      }

      /**
       * Protobuf enum {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData.Status}
       */
      public enum Status
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * 0x0
         * </pre>
         *
         * <code>UNRESTRICTED = 0;</code>
         */
        UNRESTRICTED(0),
        /**
         * <pre>
         * 0x1
         * </pre>
         *
         * <code>NO_VIDEO = 1;</code>
         */
        NO_VIDEO(1),
        /**
         * <pre>
         * 0x2
         * </pre>
         *
         * <code>NO_KEYBOARD_INPUT = 2;</code>
         */
        NO_KEYBOARD_INPUT(2),
        /**
         * <pre>
         * 0x4
         * </pre>
         *
         * <code>NO_VOICE_INPUT = 4;</code>
         */
        NO_VOICE_INPUT(4),
        /**
         * <pre>
         * 0x8
         * </pre>
         *
         * <code>NO_CONFIG = 8;</code>
         */
        NO_CONFIG(8),
        /**
         * <pre>
         * 0x10
         * </pre>
         *
         * <code>LIMIT_MESSAGE_LEN = 16;</code>
         */
        LIMIT_MESSAGE_LEN(16),
        /**
         * <pre>
         * 0x1f
         * </pre>
         *
         * <code>FULLY_RESTRICTED = 31;</code>
         */
        FULLY_RESTRICTED(31),
        ;

        /**
         * <pre>
         * 0x0
         * </pre>
         *
         * <code>UNRESTRICTED = 0;</code>
         */
        public static final int UNRESTRICTED_VALUE = 0;
        /**
         * <pre>
         * 0x1
         * </pre>
         *
         * <code>NO_VIDEO = 1;</code>
         */
        public static final int NO_VIDEO_VALUE = 1;
        /**
         * <pre>
         * 0x2
         * </pre>
         *
         * <code>NO_KEYBOARD_INPUT = 2;</code>
         */
        public static final int NO_KEYBOARD_INPUT_VALUE = 2;
        /**
         * <pre>
         * 0x4
         * </pre>
         *
         * <code>NO_VOICE_INPUT = 4;</code>
         */
        public static final int NO_VOICE_INPUT_VALUE = 4;
        /**
         * <pre>
         * 0x8
         * </pre>
         *
         * <code>NO_CONFIG = 8;</code>
         */
        public static final int NO_CONFIG_VALUE = 8;
        /**
         * <pre>
         * 0x10
         * </pre>
         *
         * <code>LIMIT_MESSAGE_LEN = 16;</code>
         */
        public static final int LIMIT_MESSAGE_LEN_VALUE = 16;
        /**
         * <pre>
         * 0x1f
         * </pre>
         *
         * <code>FULLY_RESTRICTED = 31;</code>
         */
        public static final int FULLY_RESTRICTED_VALUE = 31;


        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Status valueOf(int value) {
          return forNumber(value);
        }

        public static Status forNumber(int value) {
          switch (value) {
            case 0: return UNRESTRICTED;
            case 1: return NO_VIDEO;
            case 2: return NO_KEYBOARD_INPUT;
            case 4: return NO_VOICE_INPUT;
            case 8: return NO_CONFIG;
            case 16: return LIMIT_MESSAGE_LEN;
            case 31: return FULLY_RESTRICTED;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Status>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Status> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Status>() {
                public Status findValueByNumber(int number) {
                  return Status.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.getDescriptor().getEnumTypes().get(0);
        }

        private static final Status[] VALUES = values();

        public static Status valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private Status(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData.Status)
      }

      private int bitField0_;
      public static final int STATUS_FIELD_NUMBER = 1;
      private int status_;
      /**
       * <code>required int32 status = 1;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 status = 1;</code>
       */
      public int getStatus() {
        return status_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasStatus()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, status_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, status_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData) obj;

        if (hasStatus() != other.hasStatus()) return false;
        if (hasStatus()) {
          if (getStatus()
              != other.getStatus()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasStatus()) {
          hash = (37 * hash) + STATUS_FIELD_NUMBER;
          hash = (53 * hash) + getStatus();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DrivingStatusData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DrivingStatusData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          status_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DrivingStatusData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.status_ = status_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.getDefaultInstance()) return this;
          if (other.hasStatus()) {
            setStatus(other.getStatus());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasStatus()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int status_ ;
        /**
         * <code>required int32 status = 1;</code>
         */
        public boolean hasStatus() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required int32 status = 1;</code>
         */
        public int getStatus() {
          return status_;
        }
        /**
         * <code>required int32 status = 1;</code>
         */
        public Builder setStatus(int value) {
          bitField0_ |= 0x00000001;
          status_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 status = 1;</code>
         */
        public Builder clearStatus() {
          bitField0_ = (bitField0_ & ~0x00000001);
          status_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DrivingStatusData>
          PARSER = new com.google.protobuf.AbstractParser<DrivingStatusData>() {
        @java.lang.Override
        public DrivingStatusData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DrivingStatusData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DrivingStatusData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DrivingStatusData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface GpsSatelliteDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 number_in_use = 1;</code>
       */
      boolean hasNumberInUse();
      /**
       * <code>optional int32 number_in_use = 1;</code>
       */
      int getNumberInUse();

      /**
       * <code>optional int32 number_in_view = 2;</code>
       */
      boolean hasNumberInView();
      /**
       * <code>optional int32 number_in_view = 2;</code>
       */
      int getNumberInView();

      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
       */
      java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite> 
          getSatellitesList();
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
       */
      info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite getSatellites(int index);
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
       */
      int getSatellitesCount();
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
       */
      java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatelliteOrBuilder> 
          getSatellitesOrBuilderList();
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
       */
      info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatelliteOrBuilder getSatellitesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData}
     */
    public  static final class GpsSatelliteData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData)
        GpsSatelliteDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use GpsSatelliteData.newBuilder() to construct.
      private GpsSatelliteData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private GpsSatelliteData() {
        satellites_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new GpsSatelliteData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private GpsSatelliteData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                numberInUse_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                numberInView_ = input.readInt32();
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                  satellites_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite>();
                  mutable_bitField0_ |= 0x00000004;
                }
                satellites_.add(
                    input.readMessage(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.PARSER, extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) != 0)) {
            satellites_ = java.util.Collections.unmodifiableList(satellites_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.Builder.class);
      }

      public interface GpsSatelliteOrBuilder extends
          // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional int32 prn = 1;</code>
         */
        boolean hasPrn();
        /**
         * <code>optional int32 prn = 1;</code>
         */
        int getPrn();

        /**
         * <code>optional int32 snr_e3 = 2;</code>
         */
        boolean hasSnrE3();
        /**
         * <code>optional int32 snr_e3 = 2;</code>
         */
        int getSnrE3();

        /**
         * <code>optional bool used_in_fix = 3;</code>
         */
        boolean hasUsedInFix();
        /**
         * <code>optional bool used_in_fix = 3;</code>
         */
        boolean getUsedInFix();

        /**
         * <code>optional int32 azimuth_e3 = 4;</code>
         */
        boolean hasAzimuthE3();
        /**
         * <code>optional int32 azimuth_e3 = 4;</code>
         */
        int getAzimuthE3();

        /**
         * <code>optional int32 elevation_e3 = 5;</code>
         */
        boolean hasElevationE3();
        /**
         * <code>optional int32 elevation_e3 = 5;</code>
         */
        int getElevationE3();
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite}
       */
      public  static final class GpsSatellite extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite)
          GpsSatelliteOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use GpsSatellite.newBuilder() to construct.
        private GpsSatellite(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private GpsSatellite() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new GpsSatellite();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private GpsSatellite(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  bitField0_ |= 0x00000001;
                  prn_ = input.readInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  snrE3_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  usedInFix_ = input.readBool();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  azimuthE3_ = input.readInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  elevationE3_ = input.readInt32();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_GpsSatellite_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_GpsSatellite_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.Builder.class);
        }

        private int bitField0_;
        public static final int PRN_FIELD_NUMBER = 1;
        private int prn_;
        /**
         * <code>optional int32 prn = 1;</code>
         */
        public boolean hasPrn() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int32 prn = 1;</code>
         */
        public int getPrn() {
          return prn_;
        }

        public static final int SNR_E3_FIELD_NUMBER = 2;
        private int snrE3_;
        /**
         * <code>optional int32 snr_e3 = 2;</code>
         */
        public boolean hasSnrE3() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 snr_e3 = 2;</code>
         */
        public int getSnrE3() {
          return snrE3_;
        }

        public static final int USED_IN_FIX_FIELD_NUMBER = 3;
        private boolean usedInFix_;
        /**
         * <code>optional bool used_in_fix = 3;</code>
         */
        public boolean hasUsedInFix() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional bool used_in_fix = 3;</code>
         */
        public boolean getUsedInFix() {
          return usedInFix_;
        }

        public static final int AZIMUTH_E3_FIELD_NUMBER = 4;
        private int azimuthE3_;
        /**
         * <code>optional int32 azimuth_e3 = 4;</code>
         */
        public boolean hasAzimuthE3() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional int32 azimuth_e3 = 4;</code>
         */
        public int getAzimuthE3() {
          return azimuthE3_;
        }

        public static final int ELEVATION_E3_FIELD_NUMBER = 5;
        private int elevationE3_;
        /**
         * <code>optional int32 elevation_e3 = 5;</code>
         */
        public boolean hasElevationE3() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional int32 elevation_e3 = 5;</code>
         */
        public int getElevationE3() {
          return elevationE3_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeInt32(1, prn_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeInt32(2, snrE3_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeBool(3, usedInFix_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeInt32(4, azimuthE3_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            output.writeInt32(5, elevationE3_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, prn_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(2, snrE3_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(3, usedInFix_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(4, azimuthE3_);
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(5, elevationE3_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite)) {
            return super.equals(obj);
          }
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite) obj;

          if (hasPrn() != other.hasPrn()) return false;
          if (hasPrn()) {
            if (getPrn()
                != other.getPrn()) return false;
          }
          if (hasSnrE3() != other.hasSnrE3()) return false;
          if (hasSnrE3()) {
            if (getSnrE3()
                != other.getSnrE3()) return false;
          }
          if (hasUsedInFix() != other.hasUsedInFix()) return false;
          if (hasUsedInFix()) {
            if (getUsedInFix()
                != other.getUsedInFix()) return false;
          }
          if (hasAzimuthE3() != other.hasAzimuthE3()) return false;
          if (hasAzimuthE3()) {
            if (getAzimuthE3()
                != other.getAzimuthE3()) return false;
          }
          if (hasElevationE3() != other.hasElevationE3()) return false;
          if (hasElevationE3()) {
            if (getElevationE3()
                != other.getElevationE3()) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasPrn()) {
            hash = (37 * hash) + PRN_FIELD_NUMBER;
            hash = (53 * hash) + getPrn();
          }
          if (hasSnrE3()) {
            hash = (37 * hash) + SNR_E3_FIELD_NUMBER;
            hash = (53 * hash) + getSnrE3();
          }
          if (hasUsedInFix()) {
            hash = (37 * hash) + USED_IN_FIX_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getUsedInFix());
          }
          if (hasAzimuthE3()) {
            hash = (37 * hash) + AZIMUTH_E3_FIELD_NUMBER;
            hash = (53 * hash) + getAzimuthE3();
          }
          if (hasElevationE3()) {
            hash = (37 * hash) + ELEVATION_E3_FIELD_NUMBER;
            hash = (53 * hash) + getElevationE3();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite)
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatelliteOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_GpsSatellite_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_GpsSatellite_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.Builder.class);
          }

          // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            prn_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            snrE3_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            usedInFix_ = false;
            bitField0_ = (bitField0_ & ~0x00000004);
            azimuthE3_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            elevationE3_ = 0;
            bitField0_ = (bitField0_ & ~0x00000010);
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_GpsSatellite_descriptor;
          }

          @java.lang.Override
          public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite getDefaultInstanceForType() {
            return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.getDefaultInstance();
          }

          @java.lang.Override
          public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite build() {
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite buildPartial() {
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.prn_ = prn_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.snrE3_ = snrE3_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.usedInFix_ = usedInFix_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.azimuthE3_ = azimuthE3_;
              to_bitField0_ |= 0x00000008;
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
              result.elevationE3_ = elevationE3_;
              to_bitField0_ |= 0x00000010;
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite) {
              return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite other) {
            if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.getDefaultInstance()) return this;
            if (other.hasPrn()) {
              setPrn(other.getPrn());
            }
            if (other.hasSnrE3()) {
              setSnrE3(other.getSnrE3());
            }
            if (other.hasUsedInFix()) {
              setUsedInFix(other.getUsedInFix());
            }
            if (other.hasAzimuthE3()) {
              setAzimuthE3(other.getAzimuthE3());
            }
            if (other.hasElevationE3()) {
              setElevationE3(other.getElevationE3());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int prn_ ;
          /**
           * <code>optional int32 prn = 1;</code>
           */
          public boolean hasPrn() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional int32 prn = 1;</code>
           */
          public int getPrn() {
            return prn_;
          }
          /**
           * <code>optional int32 prn = 1;</code>
           */
          public Builder setPrn(int value) {
            bitField0_ |= 0x00000001;
            prn_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 prn = 1;</code>
           */
          public Builder clearPrn() {
            bitField0_ = (bitField0_ & ~0x00000001);
            prn_ = 0;
            onChanged();
            return this;
          }

          private int snrE3_ ;
          /**
           * <code>optional int32 snr_e3 = 2;</code>
           */
          public boolean hasSnrE3() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional int32 snr_e3 = 2;</code>
           */
          public int getSnrE3() {
            return snrE3_;
          }
          /**
           * <code>optional int32 snr_e3 = 2;</code>
           */
          public Builder setSnrE3(int value) {
            bitField0_ |= 0x00000002;
            snrE3_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 snr_e3 = 2;</code>
           */
          public Builder clearSnrE3() {
            bitField0_ = (bitField0_ & ~0x00000002);
            snrE3_ = 0;
            onChanged();
            return this;
          }

          private boolean usedInFix_ ;
          /**
           * <code>optional bool used_in_fix = 3;</code>
           */
          public boolean hasUsedInFix() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <code>optional bool used_in_fix = 3;</code>
           */
          public boolean getUsedInFix() {
            return usedInFix_;
          }
          /**
           * <code>optional bool used_in_fix = 3;</code>
           */
          public Builder setUsedInFix(boolean value) {
            bitField0_ |= 0x00000004;
            usedInFix_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool used_in_fix = 3;</code>
           */
          public Builder clearUsedInFix() {
            bitField0_ = (bitField0_ & ~0x00000004);
            usedInFix_ = false;
            onChanged();
            return this;
          }

          private int azimuthE3_ ;
          /**
           * <code>optional int32 azimuth_e3 = 4;</code>
           */
          public boolean hasAzimuthE3() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <code>optional int32 azimuth_e3 = 4;</code>
           */
          public int getAzimuthE3() {
            return azimuthE3_;
          }
          /**
           * <code>optional int32 azimuth_e3 = 4;</code>
           */
          public Builder setAzimuthE3(int value) {
            bitField0_ |= 0x00000008;
            azimuthE3_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 azimuth_e3 = 4;</code>
           */
          public Builder clearAzimuthE3() {
            bitField0_ = (bitField0_ & ~0x00000008);
            azimuthE3_ = 0;
            onChanged();
            return this;
          }

          private int elevationE3_ ;
          /**
           * <code>optional int32 elevation_e3 = 5;</code>
           */
          public boolean hasElevationE3() {
            return ((bitField0_ & 0x00000010) != 0);
          }
          /**
           * <code>optional int32 elevation_e3 = 5;</code>
           */
          public int getElevationE3() {
            return elevationE3_;
          }
          /**
           * <code>optional int32 elevation_e3 = 5;</code>
           */
          public Builder setElevationE3(int value) {
            bitField0_ |= 0x00000010;
            elevationE3_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 elevation_e3 = 5;</code>
           */
          public Builder clearElevationE3() {
            bitField0_ = (bitField0_ & ~0x00000010);
            elevationE3_ = 0;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite)
        }

        // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite)
        private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite();
        }

        public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<GpsSatellite>
            PARSER = new com.google.protobuf.AbstractParser<GpsSatellite>() {
          @java.lang.Override
          public GpsSatellite parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new GpsSatellite(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<GpsSatellite> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<GpsSatellite> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int NUMBER_IN_USE_FIELD_NUMBER = 1;
      private int numberInUse_;
      /**
       * <code>optional int32 number_in_use = 1;</code>
       */
      public boolean hasNumberInUse() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 number_in_use = 1;</code>
       */
      public int getNumberInUse() {
        return numberInUse_;
      }

      public static final int NUMBER_IN_VIEW_FIELD_NUMBER = 2;
      private int numberInView_;
      /**
       * <code>optional int32 number_in_view = 2;</code>
       */
      public boolean hasNumberInView() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 number_in_view = 2;</code>
       */
      public int getNumberInView() {
        return numberInView_;
      }

      public static final int SATELLITES_FIELD_NUMBER = 3;
      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite> satellites_;
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite> getSatellitesList() {
        return satellites_;
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatelliteOrBuilder> 
          getSatellitesOrBuilderList() {
        return satellites_;
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
       */
      public int getSatellitesCount() {
        return satellites_.size();
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite getSatellites(int index) {
        return satellites_.get(index);
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatelliteOrBuilder getSatellitesOrBuilder(
          int index) {
        return satellites_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, numberInUse_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, numberInView_);
        }
        for (int i = 0; i < satellites_.size(); i++) {
          output.writeMessage(3, satellites_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, numberInUse_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, numberInView_);
        }
        for (int i = 0; i < satellites_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, satellites_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData) obj;

        if (hasNumberInUse() != other.hasNumberInUse()) return false;
        if (hasNumberInUse()) {
          if (getNumberInUse()
              != other.getNumberInUse()) return false;
        }
        if (hasNumberInView() != other.hasNumberInView()) return false;
        if (hasNumberInView()) {
          if (getNumberInView()
              != other.getNumberInView()) return false;
        }
        if (!getSatellitesList()
            .equals(other.getSatellitesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasNumberInUse()) {
          hash = (37 * hash) + NUMBER_IN_USE_FIELD_NUMBER;
          hash = (53 * hash) + getNumberInUse();
        }
        if (hasNumberInView()) {
          hash = (37 * hash) + NUMBER_IN_VIEW_FIELD_NUMBER;
          hash = (53 * hash) + getNumberInView();
        }
        if (getSatellitesCount() > 0) {
          hash = (37 * hash) + SATELLITES_FIELD_NUMBER;
          hash = (53 * hash) + getSatellitesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSatellitesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          numberInUse_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          numberInView_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          if (satellitesBuilder_ == null) {
            satellites_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            satellitesBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.numberInUse_ = numberInUse_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.numberInView_ = numberInView_;
            to_bitField0_ |= 0x00000002;
          }
          if (satellitesBuilder_ == null) {
            if (((bitField0_ & 0x00000004) != 0)) {
              satellites_ = java.util.Collections.unmodifiableList(satellites_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.satellites_ = satellites_;
          } else {
            result.satellites_ = satellitesBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.getDefaultInstance()) return this;
          if (other.hasNumberInUse()) {
            setNumberInUse(other.getNumberInUse());
          }
          if (other.hasNumberInView()) {
            setNumberInView(other.getNumberInView());
          }
          if (satellitesBuilder_ == null) {
            if (!other.satellites_.isEmpty()) {
              if (satellites_.isEmpty()) {
                satellites_ = other.satellites_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureSatellitesIsMutable();
                satellites_.addAll(other.satellites_);
              }
              onChanged();
            }
          } else {
            if (!other.satellites_.isEmpty()) {
              if (satellitesBuilder_.isEmpty()) {
                satellitesBuilder_.dispose();
                satellitesBuilder_ = null;
                satellites_ = other.satellites_;
                bitField0_ = (bitField0_ & ~0x00000004);
                satellitesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSatellitesFieldBuilder() : null;
              } else {
                satellitesBuilder_.addAllMessages(other.satellites_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int numberInUse_ ;
        /**
         * <code>optional int32 number_in_use = 1;</code>
         */
        public boolean hasNumberInUse() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int32 number_in_use = 1;</code>
         */
        public int getNumberInUse() {
          return numberInUse_;
        }
        /**
         * <code>optional int32 number_in_use = 1;</code>
         */
        public Builder setNumberInUse(int value) {
          bitField0_ |= 0x00000001;
          numberInUse_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 number_in_use = 1;</code>
         */
        public Builder clearNumberInUse() {
          bitField0_ = (bitField0_ & ~0x00000001);
          numberInUse_ = 0;
          onChanged();
          return this;
        }

        private int numberInView_ ;
        /**
         * <code>optional int32 number_in_view = 2;</code>
         */
        public boolean hasNumberInView() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 number_in_view = 2;</code>
         */
        public int getNumberInView() {
          return numberInView_;
        }
        /**
         * <code>optional int32 number_in_view = 2;</code>
         */
        public Builder setNumberInView(int value) {
          bitField0_ |= 0x00000002;
          numberInView_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 number_in_view = 2;</code>
         */
        public Builder clearNumberInView() {
          bitField0_ = (bitField0_ & ~0x00000002);
          numberInView_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite> satellites_ =
          java.util.Collections.emptyList();
        private void ensureSatellitesIsMutable() {
          if (!((bitField0_ & 0x00000004) != 0)) {
            satellites_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite>(satellites_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatelliteOrBuilder> satellitesBuilder_;

        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite> getSatellitesList() {
          if (satellitesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(satellites_);
          } else {
            return satellitesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public int getSatellitesCount() {
          if (satellitesBuilder_ == null) {
            return satellites_.size();
          } else {
            return satellitesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite getSatellites(int index) {
          if (satellitesBuilder_ == null) {
            return satellites_.get(index);
          } else {
            return satellitesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public Builder setSatellites(
            int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite value) {
          if (satellitesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSatellitesIsMutable();
            satellites_.set(index, value);
            onChanged();
          } else {
            satellitesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public Builder setSatellites(
            int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.Builder builderForValue) {
          if (satellitesBuilder_ == null) {
            ensureSatellitesIsMutable();
            satellites_.set(index, builderForValue.build());
            onChanged();
          } else {
            satellitesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public Builder addSatellites(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite value) {
          if (satellitesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSatellitesIsMutable();
            satellites_.add(value);
            onChanged();
          } else {
            satellitesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public Builder addSatellites(
            int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite value) {
          if (satellitesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSatellitesIsMutable();
            satellites_.add(index, value);
            onChanged();
          } else {
            satellitesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public Builder addSatellites(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.Builder builderForValue) {
          if (satellitesBuilder_ == null) {
            ensureSatellitesIsMutable();
            satellites_.add(builderForValue.build());
            onChanged();
          } else {
            satellitesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public Builder addSatellites(
            int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.Builder builderForValue) {
          if (satellitesBuilder_ == null) {
            ensureSatellitesIsMutable();
            satellites_.add(index, builderForValue.build());
            onChanged();
          } else {
            satellitesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public Builder addAllSatellites(
            java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite> values) {
          if (satellitesBuilder_ == null) {
            ensureSatellitesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, satellites_);
            onChanged();
          } else {
            satellitesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public Builder clearSatellites() {
          if (satellitesBuilder_ == null) {
            satellites_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            satellitesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public Builder removeSatellites(int index) {
          if (satellitesBuilder_ == null) {
            ensureSatellitesIsMutable();
            satellites_.remove(index);
            onChanged();
          } else {
            satellitesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.Builder getSatellitesBuilder(
            int index) {
          return getSatellitesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatelliteOrBuilder getSatellitesOrBuilder(
            int index) {
          if (satellitesBuilder_ == null) {
            return satellites_.get(index);  } else {
            return satellitesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatelliteOrBuilder> 
             getSatellitesOrBuilderList() {
          if (satellitesBuilder_ != null) {
            return satellitesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(satellites_);
          }
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.Builder addSatellitesBuilder() {
          return getSatellitesFieldBuilder().addBuilder(
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.getDefaultInstance());
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.Builder addSatellitesBuilder(
            int index) {
          return getSatellitesFieldBuilder().addBuilder(
              index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.getDefaultInstance());
        }
        /**
         * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;</code>
         */
        public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.Builder> 
             getSatellitesBuilderList() {
          return getSatellitesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatelliteOrBuilder> 
            getSatellitesFieldBuilder() {
          if (satellitesBuilder_ == null) {
            satellitesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.GpsSatelliteOrBuilder>(
                    satellites_,
                    ((bitField0_ & 0x00000004) != 0),
                    getParentForChildren(),
                    isClean());
            satellites_ = null;
          }
          return satellitesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<GpsSatelliteData>
          PARSER = new com.google.protobuf.AbstractParser<GpsSatelliteData>() {
        @java.lang.Override
        public GpsSatelliteData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new GpsSatelliteData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<GpsSatelliteData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<GpsSatelliteData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface GearDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData.GEAR gear = 1;</code>
       */
      boolean hasGear();
      /**
       * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData.GEAR gear = 1;</code>
       */
      info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.GEAR getGear();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData}
     */
    public  static final class GearData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData)
        GearDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use GearData.newBuilder() to construct.
      private GearData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private GearData() {
        gear_ = 100;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new GearData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private GearData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();
                  @SuppressWarnings("deprecation")
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.GEAR value = info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.GEAR.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  gear_ = rawValue;
                }
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GearData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GearData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.Builder.class);
      }

      /**
       * Protobuf enum {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData.GEAR}
       */
      public enum GEAR
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         * 0x64
         * </pre>
         *
         * <code>DRIVE = 100;</code>
         */
        DRIVE(100),
        /**
         * <pre>
         * 0x8
         * </pre>
         *
         * <code>EIGHTH = 8;</code>
         */
        EIGHTH(8),
        /**
         * <pre>
         * 0x5
         * </pre>
         *
         * <code>FIFTH = 5;</code>
         */
        FIFTH(5),
        /**
         * <pre>
         * 0x1
         * </pre>
         *
         * <code>FIRST = 1;</code>
         */
        FIRST(1),
        /**
         * <pre>
         * 0x4
         * </pre>
         *
         * <code>FOURTH = 4;</code>
         */
        FOURTH(4),
        /**
         * <pre>
         * 0x0
         * </pre>
         *
         * <code>NEUTRAL = 0;</code>
         */
        NEUTRAL(0),
        /**
         * <pre>
         * 0x9
         * </pre>
         *
         * <code>NINTH = 9;</code>
         */
        NINTH(9),
        /**
         * <pre>
         * 0x65
         * </pre>
         *
         * <code>PARK = 101;</code>
         */
        PARK(101),
        /**
         * <pre>
         * 0x66
         * </pre>
         *
         * <code>REVERSE = 102;</code>
         */
        REVERSE(102),
        /**
         * <pre>
         * 0x2
         * </pre>
         *
         * <code>SECOND = 2;</code>
         */
        SECOND(2),
        /**
         * <pre>
         * 0x7
         * </pre>
         *
         * <code>SEVENTH = 7;</code>
         */
        SEVENTH(7),
        /**
         * <pre>
         * 0x6
         * </pre>
         *
         * <code>SIXTH = 6;</code>
         */
        SIXTH(6),
        /**
         * <pre>
         * 0xa
         * </pre>
         *
         * <code>TENTH = 10;</code>
         */
        TENTH(10),
        /**
         * <pre>
         * 0x3
         * </pre>
         *
         * <code>THIRD = 3;</code>
         */
        THIRD(3),
        ;

        /**
         * <pre>
         * 0x64
         * </pre>
         *
         * <code>DRIVE = 100;</code>
         */
        public static final int DRIVE_VALUE = 100;
        /**
         * <pre>
         * 0x8
         * </pre>
         *
         * <code>EIGHTH = 8;</code>
         */
        public static final int EIGHTH_VALUE = 8;
        /**
         * <pre>
         * 0x5
         * </pre>
         *
         * <code>FIFTH = 5;</code>
         */
        public static final int FIFTH_VALUE = 5;
        /**
         * <pre>
         * 0x1
         * </pre>
         *
         * <code>FIRST = 1;</code>
         */
        public static final int FIRST_VALUE = 1;
        /**
         * <pre>
         * 0x4
         * </pre>
         *
         * <code>FOURTH = 4;</code>
         */
        public static final int FOURTH_VALUE = 4;
        /**
         * <pre>
         * 0x0
         * </pre>
         *
         * <code>NEUTRAL = 0;</code>
         */
        public static final int NEUTRAL_VALUE = 0;
        /**
         * <pre>
         * 0x9
         * </pre>
         *
         * <code>NINTH = 9;</code>
         */
        public static final int NINTH_VALUE = 9;
        /**
         * <pre>
         * 0x65
         * </pre>
         *
         * <code>PARK = 101;</code>
         */
        public static final int PARK_VALUE = 101;
        /**
         * <pre>
         * 0x66
         * </pre>
         *
         * <code>REVERSE = 102;</code>
         */
        public static final int REVERSE_VALUE = 102;
        /**
         * <pre>
         * 0x2
         * </pre>
         *
         * <code>SECOND = 2;</code>
         */
        public static final int SECOND_VALUE = 2;
        /**
         * <pre>
         * 0x7
         * </pre>
         *
         * <code>SEVENTH = 7;</code>
         */
        public static final int SEVENTH_VALUE = 7;
        /**
         * <pre>
         * 0x6
         * </pre>
         *
         * <code>SIXTH = 6;</code>
         */
        public static final int SIXTH_VALUE = 6;
        /**
         * <pre>
         * 0xa
         * </pre>
         *
         * <code>TENTH = 10;</code>
         */
        public static final int TENTH_VALUE = 10;
        /**
         * <pre>
         * 0x3
         * </pre>
         *
         * <code>THIRD = 3;</code>
         */
        public static final int THIRD_VALUE = 3;


        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static GEAR valueOf(int value) {
          return forNumber(value);
        }

        public static GEAR forNumber(int value) {
          switch (value) {
            case 100: return DRIVE;
            case 8: return EIGHTH;
            case 5: return FIFTH;
            case 1: return FIRST;
            case 4: return FOURTH;
            case 0: return NEUTRAL;
            case 9: return NINTH;
            case 101: return PARK;
            case 102: return REVERSE;
            case 2: return SECOND;
            case 7: return SEVENTH;
            case 6: return SIXTH;
            case 10: return TENTH;
            case 3: return THIRD;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<GEAR>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            GEAR> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<GEAR>() {
                public GEAR findValueByNumber(int number) {
                  return GEAR.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.getDescriptor().getEnumTypes().get(0);
        }

        private static final GEAR[] VALUES = values();

        public static GEAR valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private GEAR(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData.GEAR)
      }

      private int bitField0_;
      public static final int GEAR_FIELD_NUMBER = 1;
      private int gear_;
      /**
       * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData.GEAR gear = 1;</code>
       */
      public boolean hasGear() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData.GEAR gear = 1;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.GEAR getGear() {
        @SuppressWarnings("deprecation")
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.GEAR result = info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.GEAR.valueOf(gear_);
        return result == null ? info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.GEAR.DRIVE : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasGear()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeEnum(1, gear_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, gear_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData) obj;

        if (hasGear() != other.hasGear()) return false;
        if (hasGear()) {
          if (gear_ != other.gear_) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasGear()) {
          hash = (37 * hash) + GEAR_FIELD_NUMBER;
          hash = (53 * hash) + gear_;
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GearData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GearData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          gear_ = 100;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GearData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.gear_ = gear_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.getDefaultInstance()) return this;
          if (other.hasGear()) {
            setGear(other.getGear());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasGear()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int gear_ = 100;
        /**
         * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData.GEAR gear = 1;</code>
         */
        public boolean hasGear() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData.GEAR gear = 1;</code>
         */
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.GEAR getGear() {
          @SuppressWarnings("deprecation")
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.GEAR result = info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.GEAR.valueOf(gear_);
          return result == null ? info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.GEAR.DRIVE : result;
        }
        /**
         * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData.GEAR gear = 1;</code>
         */
        public Builder setGear(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.GEAR value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          gear_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData.GEAR gear = 1;</code>
         */
        public Builder clearGear() {
          bitField0_ = (bitField0_ & ~0x00000001);
          gear_ = 100;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<GearData>
          PARSER = new com.google.protobuf.AbstractParser<GearData>() {
        @java.lang.Override
        public GearData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new GearData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<GearData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<GearData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CompassDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required int32 bearing_e6 = 1;</code>
       */
      boolean hasBearingE6();
      /**
       * <code>required int32 bearing_e6 = 1;</code>
       */
      int getBearingE6();

      /**
       * <code>required int32 pitch_e6 = 2;</code>
       */
      boolean hasPitchE6();
      /**
       * <code>required int32 pitch_e6 = 2;</code>
       */
      int getPitchE6();

      /**
       * <code>required int32 roll_e6 = 3;</code>
       */
      boolean hasRollE6();
      /**
       * <code>required int32 roll_e6 = 3;</code>
       */
      int getRollE6();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData}
     */
    public  static final class CompassData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData)
        CompassDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use CompassData.newBuilder() to construct.
      private CompassData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private CompassData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new CompassData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private CompassData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                bearingE6_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                pitchE6_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                rollE6_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_CompassData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_CompassData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.Builder.class);
      }

      private int bitField0_;
      public static final int BEARING_E6_FIELD_NUMBER = 1;
      private int bearingE6_;
      /**
       * <code>required int32 bearing_e6 = 1;</code>
       */
      public boolean hasBearingE6() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 bearing_e6 = 1;</code>
       */
      public int getBearingE6() {
        return bearingE6_;
      }

      public static final int PITCH_E6_FIELD_NUMBER = 2;
      private int pitchE6_;
      /**
       * <code>required int32 pitch_e6 = 2;</code>
       */
      public boolean hasPitchE6() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required int32 pitch_e6 = 2;</code>
       */
      public int getPitchE6() {
        return pitchE6_;
      }

      public static final int ROLL_E6_FIELD_NUMBER = 3;
      private int rollE6_;
      /**
       * <code>required int32 roll_e6 = 3;</code>
       */
      public boolean hasRollE6() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required int32 roll_e6 = 3;</code>
       */
      public int getRollE6() {
        return rollE6_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasBearingE6()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPitchE6()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRollE6()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, bearingE6_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, pitchE6_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt32(3, rollE6_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, bearingE6_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, pitchE6_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, rollE6_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData) obj;

        if (hasBearingE6() != other.hasBearingE6()) return false;
        if (hasBearingE6()) {
          if (getBearingE6()
              != other.getBearingE6()) return false;
        }
        if (hasPitchE6() != other.hasPitchE6()) return false;
        if (hasPitchE6()) {
          if (getPitchE6()
              != other.getPitchE6()) return false;
        }
        if (hasRollE6() != other.hasRollE6()) return false;
        if (hasRollE6()) {
          if (getRollE6()
              != other.getRollE6()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasBearingE6()) {
          hash = (37 * hash) + BEARING_E6_FIELD_NUMBER;
          hash = (53 * hash) + getBearingE6();
        }
        if (hasPitchE6()) {
          hash = (37 * hash) + PITCH_E6_FIELD_NUMBER;
          hash = (53 * hash) + getPitchE6();
        }
        if (hasRollE6()) {
          hash = (37 * hash) + ROLL_E6_FIELD_NUMBER;
          hash = (53 * hash) + getRollE6();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_CompassData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_CompassData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bearingE6_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          pitchE6_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          rollE6_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_CompassData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.bearingE6_ = bearingE6_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.pitchE6_ = pitchE6_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.rollE6_ = rollE6_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.getDefaultInstance()) return this;
          if (other.hasBearingE6()) {
            setBearingE6(other.getBearingE6());
          }
          if (other.hasPitchE6()) {
            setPitchE6(other.getPitchE6());
          }
          if (other.hasRollE6()) {
            setRollE6(other.getRollE6());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasBearingE6()) {
            return false;
          }
          if (!hasPitchE6()) {
            return false;
          }
          if (!hasRollE6()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int bearingE6_ ;
        /**
         * <code>required int32 bearing_e6 = 1;</code>
         */
        public boolean hasBearingE6() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required int32 bearing_e6 = 1;</code>
         */
        public int getBearingE6() {
          return bearingE6_;
        }
        /**
         * <code>required int32 bearing_e6 = 1;</code>
         */
        public Builder setBearingE6(int value) {
          bitField0_ |= 0x00000001;
          bearingE6_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 bearing_e6 = 1;</code>
         */
        public Builder clearBearingE6() {
          bitField0_ = (bitField0_ & ~0x00000001);
          bearingE6_ = 0;
          onChanged();
          return this;
        }

        private int pitchE6_ ;
        /**
         * <code>required int32 pitch_e6 = 2;</code>
         */
        public boolean hasPitchE6() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>required int32 pitch_e6 = 2;</code>
         */
        public int getPitchE6() {
          return pitchE6_;
        }
        /**
         * <code>required int32 pitch_e6 = 2;</code>
         */
        public Builder setPitchE6(int value) {
          bitField0_ |= 0x00000002;
          pitchE6_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 pitch_e6 = 2;</code>
         */
        public Builder clearPitchE6() {
          bitField0_ = (bitField0_ & ~0x00000002);
          pitchE6_ = 0;
          onChanged();
          return this;
        }

        private int rollE6_ ;
        /**
         * <code>required int32 roll_e6 = 3;</code>
         */
        public boolean hasRollE6() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>required int32 roll_e6 = 3;</code>
         */
        public int getRollE6() {
          return rollE6_;
        }
        /**
         * <code>required int32 roll_e6 = 3;</code>
         */
        public Builder setRollE6(int value) {
          bitField0_ |= 0x00000004;
          rollE6_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 roll_e6 = 3;</code>
         */
        public Builder clearRollE6() {
          bitField0_ = (bitField0_ & ~0x00000004);
          rollE6_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<CompassData>
          PARSER = new com.google.protobuf.AbstractParser<CompassData>() {
        @java.lang.Override
        public CompassData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CompassData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<CompassData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<CompassData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SpeedDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required int32 speed_e6 = 1;</code>
       */
      boolean hasSpeedE6();
      /**
       * <code>required int32 speed_e6 = 1;</code>
       */
      int getSpeedE6();

      /**
       * <code>optional bool cruise_engaged = 2;</code>
       */
      boolean hasCruiseEngaged();
      /**
       * <code>optional bool cruise_engaged = 2;</code>
       */
      boolean getCruiseEngaged();

      /**
       * <code>optional bool cruise_set_speed = 3;</code>
       */
      boolean hasCruiseSetSpeed();
      /**
       * <code>optional bool cruise_set_speed = 3;</code>
       */
      boolean getCruiseSetSpeed();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData}
     */
    public  static final class SpeedData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData)
        SpeedDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SpeedData.newBuilder() to construct.
      private SpeedData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SpeedData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new SpeedData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private SpeedData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                speedE6_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                cruiseEngaged_ = input.readBool();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                cruiseSetSpeed_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_SpeedData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_SpeedData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.Builder.class);
      }

      private int bitField0_;
      public static final int SPEED_E6_FIELD_NUMBER = 1;
      private int speedE6_;
      /**
       * <code>required int32 speed_e6 = 1;</code>
       */
      public boolean hasSpeedE6() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 speed_e6 = 1;</code>
       */
      public int getSpeedE6() {
        return speedE6_;
      }

      public static final int CRUISE_ENGAGED_FIELD_NUMBER = 2;
      private boolean cruiseEngaged_;
      /**
       * <code>optional bool cruise_engaged = 2;</code>
       */
      public boolean hasCruiseEngaged() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional bool cruise_engaged = 2;</code>
       */
      public boolean getCruiseEngaged() {
        return cruiseEngaged_;
      }

      public static final int CRUISE_SET_SPEED_FIELD_NUMBER = 3;
      private boolean cruiseSetSpeed_;
      /**
       * <code>optional bool cruise_set_speed = 3;</code>
       */
      public boolean hasCruiseSetSpeed() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bool cruise_set_speed = 3;</code>
       */
      public boolean getCruiseSetSpeed() {
        return cruiseSetSpeed_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasSpeedE6()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, speedE6_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeBool(2, cruiseEngaged_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeBool(3, cruiseSetSpeed_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, speedE6_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, cruiseEngaged_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, cruiseSetSpeed_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData) obj;

        if (hasSpeedE6() != other.hasSpeedE6()) return false;
        if (hasSpeedE6()) {
          if (getSpeedE6()
              != other.getSpeedE6()) return false;
        }
        if (hasCruiseEngaged() != other.hasCruiseEngaged()) return false;
        if (hasCruiseEngaged()) {
          if (getCruiseEngaged()
              != other.getCruiseEngaged()) return false;
        }
        if (hasCruiseSetSpeed() != other.hasCruiseSetSpeed()) return false;
        if (hasCruiseSetSpeed()) {
          if (getCruiseSetSpeed()
              != other.getCruiseSetSpeed()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSpeedE6()) {
          hash = (37 * hash) + SPEED_E6_FIELD_NUMBER;
          hash = (53 * hash) + getSpeedE6();
        }
        if (hasCruiseEngaged()) {
          hash = (37 * hash) + CRUISE_ENGAGED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getCruiseEngaged());
        }
        if (hasCruiseSetSpeed()) {
          hash = (37 * hash) + CRUISE_SET_SPEED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getCruiseSetSpeed());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_SpeedData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_SpeedData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          speedE6_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          cruiseEngaged_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          cruiseSetSpeed_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_SpeedData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.speedE6_ = speedE6_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.cruiseEngaged_ = cruiseEngaged_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.cruiseSetSpeed_ = cruiseSetSpeed_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.getDefaultInstance()) return this;
          if (other.hasSpeedE6()) {
            setSpeedE6(other.getSpeedE6());
          }
          if (other.hasCruiseEngaged()) {
            setCruiseEngaged(other.getCruiseEngaged());
          }
          if (other.hasCruiseSetSpeed()) {
            setCruiseSetSpeed(other.getCruiseSetSpeed());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasSpeedE6()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int speedE6_ ;
        /**
         * <code>required int32 speed_e6 = 1;</code>
         */
        public boolean hasSpeedE6() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required int32 speed_e6 = 1;</code>
         */
        public int getSpeedE6() {
          return speedE6_;
        }
        /**
         * <code>required int32 speed_e6 = 1;</code>
         */
        public Builder setSpeedE6(int value) {
          bitField0_ |= 0x00000001;
          speedE6_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 speed_e6 = 1;</code>
         */
        public Builder clearSpeedE6() {
          bitField0_ = (bitField0_ & ~0x00000001);
          speedE6_ = 0;
          onChanged();
          return this;
        }

        private boolean cruiseEngaged_ ;
        /**
         * <code>optional bool cruise_engaged = 2;</code>
         */
        public boolean hasCruiseEngaged() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional bool cruise_engaged = 2;</code>
         */
        public boolean getCruiseEngaged() {
          return cruiseEngaged_;
        }
        /**
         * <code>optional bool cruise_engaged = 2;</code>
         */
        public Builder setCruiseEngaged(boolean value) {
          bitField0_ |= 0x00000002;
          cruiseEngaged_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool cruise_engaged = 2;</code>
         */
        public Builder clearCruiseEngaged() {
          bitField0_ = (bitField0_ & ~0x00000002);
          cruiseEngaged_ = false;
          onChanged();
          return this;
        }

        private boolean cruiseSetSpeed_ ;
        /**
         * <code>optional bool cruise_set_speed = 3;</code>
         */
        public boolean hasCruiseSetSpeed() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional bool cruise_set_speed = 3;</code>
         */
        public boolean getCruiseSetSpeed() {
          return cruiseSetSpeed_;
        }
        /**
         * <code>optional bool cruise_set_speed = 3;</code>
         */
        public Builder setCruiseSetSpeed(boolean value) {
          bitField0_ |= 0x00000004;
          cruiseSetSpeed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool cruise_set_speed = 3;</code>
         */
        public Builder clearCruiseSetSpeed() {
          bitField0_ = (bitField0_ & ~0x00000004);
          cruiseSetSpeed_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<SpeedData>
          PARSER = new com.google.protobuf.AbstractParser<SpeedData>() {
        @java.lang.Override
        public SpeedData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SpeedData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<SpeedData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SpeedData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface OdometerDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 kms_el = 1;</code>
       */
      boolean hasKmsEl();
      /**
       * <code>optional int32 kms_el = 1;</code>
       */
      int getKmsEl();

      /**
       * <code>optional int32 trip_kms_el = 2;</code>
       */
      boolean hasTripKmsEl();
      /**
       * <code>optional int32 trip_kms_el = 2;</code>
       */
      int getTripKmsEl();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData}
     */
    public  static final class OdometerData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData)
        OdometerDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use OdometerData.newBuilder() to construct.
      private OdometerData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private OdometerData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new OdometerData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private OdometerData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                kmsEl_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                tripKmsEl_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_OdometerData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_OdometerData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.Builder.class);
      }

      private int bitField0_;
      public static final int KMS_EL_FIELD_NUMBER = 1;
      private int kmsEl_;
      /**
       * <code>optional int32 kms_el = 1;</code>
       */
      public boolean hasKmsEl() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 kms_el = 1;</code>
       */
      public int getKmsEl() {
        return kmsEl_;
      }

      public static final int TRIP_KMS_EL_FIELD_NUMBER = 2;
      private int tripKmsEl_;
      /**
       * <code>optional int32 trip_kms_el = 2;</code>
       */
      public boolean hasTripKmsEl() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 trip_kms_el = 2;</code>
       */
      public int getTripKmsEl() {
        return tripKmsEl_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, kmsEl_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, tripKmsEl_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, kmsEl_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, tripKmsEl_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData) obj;

        if (hasKmsEl() != other.hasKmsEl()) return false;
        if (hasKmsEl()) {
          if (getKmsEl()
              != other.getKmsEl()) return false;
        }
        if (hasTripKmsEl() != other.hasTripKmsEl()) return false;
        if (hasTripKmsEl()) {
          if (getTripKmsEl()
              != other.getTripKmsEl()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasKmsEl()) {
          hash = (37 * hash) + KMS_EL_FIELD_NUMBER;
          hash = (53 * hash) + getKmsEl();
        }
        if (hasTripKmsEl()) {
          hash = (37 * hash) + TRIP_KMS_EL_FIELD_NUMBER;
          hash = (53 * hash) + getTripKmsEl();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_OdometerData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_OdometerData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          kmsEl_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          tripKmsEl_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_OdometerData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.kmsEl_ = kmsEl_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.tripKmsEl_ = tripKmsEl_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.getDefaultInstance()) return this;
          if (other.hasKmsEl()) {
            setKmsEl(other.getKmsEl());
          }
          if (other.hasTripKmsEl()) {
            setTripKmsEl(other.getTripKmsEl());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int kmsEl_ ;
        /**
         * <code>optional int32 kms_el = 1;</code>
         */
        public boolean hasKmsEl() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int32 kms_el = 1;</code>
         */
        public int getKmsEl() {
          return kmsEl_;
        }
        /**
         * <code>optional int32 kms_el = 1;</code>
         */
        public Builder setKmsEl(int value) {
          bitField0_ |= 0x00000001;
          kmsEl_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 kms_el = 1;</code>
         */
        public Builder clearKmsEl() {
          bitField0_ = (bitField0_ & ~0x00000001);
          kmsEl_ = 0;
          onChanged();
          return this;
        }

        private int tripKmsEl_ ;
        /**
         * <code>optional int32 trip_kms_el = 2;</code>
         */
        public boolean hasTripKmsEl() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 trip_kms_el = 2;</code>
         */
        public int getTripKmsEl() {
          return tripKmsEl_;
        }
        /**
         * <code>optional int32 trip_kms_el = 2;</code>
         */
        public Builder setTripKmsEl(int value) {
          bitField0_ |= 0x00000002;
          tripKmsEl_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 trip_kms_el = 2;</code>
         */
        public Builder clearTripKmsEl() {
          bitField0_ = (bitField0_ & ~0x00000002);
          tripKmsEl_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<OdometerData>
          PARSER = new com.google.protobuf.AbstractParser<OdometerData>() {
        @java.lang.Override
        public OdometerData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new OdometerData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<OdometerData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<OdometerData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DiagnosticsDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required bytes diagnostics_byte = 1;</code>
       */
      boolean hasDiagnosticsByte();
      /**
       * <code>required bytes diagnostics_byte = 1;</code>
       */
      com.google.protobuf.ByteString getDiagnosticsByte();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData}
     */
    public  static final class DiagnosticsData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData)
        DiagnosticsDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DiagnosticsData.newBuilder() to construct.
      private DiagnosticsData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DiagnosticsData() {
        diagnosticsByte_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new DiagnosticsData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DiagnosticsData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                bitField0_ |= 0x00000001;
                diagnosticsByte_ = input.readBytes();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DiagnosticsData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DiagnosticsData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.Builder.class);
      }

      private int bitField0_;
      public static final int DIAGNOSTICS_BYTE_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString diagnosticsByte_;
      /**
       * <code>required bytes diagnostics_byte = 1;</code>
       */
      public boolean hasDiagnosticsByte() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required bytes diagnostics_byte = 1;</code>
       */
      public com.google.protobuf.ByteString getDiagnosticsByte() {
        return diagnosticsByte_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasDiagnosticsByte()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeBytes(1, diagnosticsByte_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, diagnosticsByte_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData) obj;

        if (hasDiagnosticsByte() != other.hasDiagnosticsByte()) return false;
        if (hasDiagnosticsByte()) {
          if (!getDiagnosticsByte()
              .equals(other.getDiagnosticsByte())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasDiagnosticsByte()) {
          hash = (37 * hash) + DIAGNOSTICS_BYTE_FIELD_NUMBER;
          hash = (53 * hash) + getDiagnosticsByte().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DiagnosticsData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DiagnosticsData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          diagnosticsByte_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DiagnosticsData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.diagnosticsByte_ = diagnosticsByte_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.getDefaultInstance()) return this;
          if (other.hasDiagnosticsByte()) {
            setDiagnosticsByte(other.getDiagnosticsByte());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasDiagnosticsByte()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.ByteString diagnosticsByte_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>required bytes diagnostics_byte = 1;</code>
         */
        public boolean hasDiagnosticsByte() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required bytes diagnostics_byte = 1;</code>
         */
        public com.google.protobuf.ByteString getDiagnosticsByte() {
          return diagnosticsByte_;
        }
        /**
         * <code>required bytes diagnostics_byte = 1;</code>
         */
        public Builder setDiagnosticsByte(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          diagnosticsByte_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bytes diagnostics_byte = 1;</code>
         */
        public Builder clearDiagnosticsByte() {
          bitField0_ = (bitField0_ & ~0x00000001);
          diagnosticsByte_ = getDefaultInstance().getDiagnosticsByte();
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DiagnosticsData>
          PARSER = new com.google.protobuf.AbstractParser<DiagnosticsData>() {
        @java.lang.Override
        public DiagnosticsData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DiagnosticsData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DiagnosticsData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DiagnosticsData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface EnvironmentDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 temperature_e3 = 1;</code>
       */
      boolean hasTemperatureE3();
      /**
       * <code>optional int32 temperature_e3 = 1;</code>
       */
      int getTemperatureE3();

      /**
       * <code>optional int32 pressure_e3 = 2;</code>
       */
      boolean hasPressureE3();
      /**
       * <code>optional int32 pressure_e3 = 2;</code>
       */
      int getPressureE3();

      /**
       * <code>optional int32 rain = 3;</code>
       */
      boolean hasRain();
      /**
       * <code>optional int32 rain = 3;</code>
       */
      int getRain();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData}
     */
    public  static final class EnvironmentData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData)
        EnvironmentDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use EnvironmentData.newBuilder() to construct.
      private EnvironmentData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private EnvironmentData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new EnvironmentData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private EnvironmentData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                temperatureE3_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                pressureE3_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                rain_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_EnvironmentData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_EnvironmentData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.Builder.class);
      }

      private int bitField0_;
      public static final int TEMPERATURE_E3_FIELD_NUMBER = 1;
      private int temperatureE3_;
      /**
       * <code>optional int32 temperature_e3 = 1;</code>
       */
      public boolean hasTemperatureE3() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 temperature_e3 = 1;</code>
       */
      public int getTemperatureE3() {
        return temperatureE3_;
      }

      public static final int PRESSURE_E3_FIELD_NUMBER = 2;
      private int pressureE3_;
      /**
       * <code>optional int32 pressure_e3 = 2;</code>
       */
      public boolean hasPressureE3() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 pressure_e3 = 2;</code>
       */
      public int getPressureE3() {
        return pressureE3_;
      }

      public static final int RAIN_FIELD_NUMBER = 3;
      private int rain_;
      /**
       * <code>optional int32 rain = 3;</code>
       */
      public boolean hasRain() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 rain = 3;</code>
       */
      public int getRain() {
        return rain_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, temperatureE3_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, pressureE3_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt32(3, rain_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, temperatureE3_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, pressureE3_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, rain_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData) obj;

        if (hasTemperatureE3() != other.hasTemperatureE3()) return false;
        if (hasTemperatureE3()) {
          if (getTemperatureE3()
              != other.getTemperatureE3()) return false;
        }
        if (hasPressureE3() != other.hasPressureE3()) return false;
        if (hasPressureE3()) {
          if (getPressureE3()
              != other.getPressureE3()) return false;
        }
        if (hasRain() != other.hasRain()) return false;
        if (hasRain()) {
          if (getRain()
              != other.getRain()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTemperatureE3()) {
          hash = (37 * hash) + TEMPERATURE_E3_FIELD_NUMBER;
          hash = (53 * hash) + getTemperatureE3();
        }
        if (hasPressureE3()) {
          hash = (37 * hash) + PRESSURE_E3_FIELD_NUMBER;
          hash = (53 * hash) + getPressureE3();
        }
        if (hasRain()) {
          hash = (37 * hash) + RAIN_FIELD_NUMBER;
          hash = (53 * hash) + getRain();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_EnvironmentData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_EnvironmentData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          temperatureE3_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          pressureE3_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          rain_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_EnvironmentData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.temperatureE3_ = temperatureE3_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.pressureE3_ = pressureE3_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.rain_ = rain_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.getDefaultInstance()) return this;
          if (other.hasTemperatureE3()) {
            setTemperatureE3(other.getTemperatureE3());
          }
          if (other.hasPressureE3()) {
            setPressureE3(other.getPressureE3());
          }
          if (other.hasRain()) {
            setRain(other.getRain());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int temperatureE3_ ;
        /**
         * <code>optional int32 temperature_e3 = 1;</code>
         */
        public boolean hasTemperatureE3() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int32 temperature_e3 = 1;</code>
         */
        public int getTemperatureE3() {
          return temperatureE3_;
        }
        /**
         * <code>optional int32 temperature_e3 = 1;</code>
         */
        public Builder setTemperatureE3(int value) {
          bitField0_ |= 0x00000001;
          temperatureE3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 temperature_e3 = 1;</code>
         */
        public Builder clearTemperatureE3() {
          bitField0_ = (bitField0_ & ~0x00000001);
          temperatureE3_ = 0;
          onChanged();
          return this;
        }

        private int pressureE3_ ;
        /**
         * <code>optional int32 pressure_e3 = 2;</code>
         */
        public boolean hasPressureE3() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 pressure_e3 = 2;</code>
         */
        public int getPressureE3() {
          return pressureE3_;
        }
        /**
         * <code>optional int32 pressure_e3 = 2;</code>
         */
        public Builder setPressureE3(int value) {
          bitField0_ |= 0x00000002;
          pressureE3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 pressure_e3 = 2;</code>
         */
        public Builder clearPressureE3() {
          bitField0_ = (bitField0_ & ~0x00000002);
          pressureE3_ = 0;
          onChanged();
          return this;
        }

        private int rain_ ;
        /**
         * <code>optional int32 rain = 3;</code>
         */
        public boolean hasRain() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional int32 rain = 3;</code>
         */
        public int getRain() {
          return rain_;
        }
        /**
         * <code>optional int32 rain = 3;</code>
         */
        public Builder setRain(int value) {
          bitField0_ |= 0x00000004;
          rain_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 rain = 3;</code>
         */
        public Builder clearRain() {
          bitField0_ = (bitField0_ & ~0x00000004);
          rain_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<EnvironmentData>
          PARSER = new com.google.protobuf.AbstractParser<EnvironmentData>() {
        @java.lang.Override
        public EnvironmentData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new EnvironmentData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<EnvironmentData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<EnvironmentData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface HvacDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 target_temperature_e3 = 1;</code>
       */
      boolean hasTargetTemperatureE3();
      /**
       * <code>optional int32 target_temperature_e3 = 1;</code>
       */
      int getTargetTemperatureE3();

      /**
       * <code>optional int32 current_temperature_e3 = 2;</code>
       */
      boolean hasCurrentTemperatureE3();
      /**
       * <code>optional int32 current_temperature_e3 = 2;</code>
       */
      int getCurrentTemperatureE3();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData}
     */
    public  static final class HvacData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData)
        HvacDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use HvacData.newBuilder() to construct.
      private HvacData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HvacData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new HvacData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private HvacData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                targetTemperatureE3_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                currentTemperatureE3_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_HvacData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_HvacData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.Builder.class);
      }

      private int bitField0_;
      public static final int TARGET_TEMPERATURE_E3_FIELD_NUMBER = 1;
      private int targetTemperatureE3_;
      /**
       * <code>optional int32 target_temperature_e3 = 1;</code>
       */
      public boolean hasTargetTemperatureE3() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 target_temperature_e3 = 1;</code>
       */
      public int getTargetTemperatureE3() {
        return targetTemperatureE3_;
      }

      public static final int CURRENT_TEMPERATURE_E3_FIELD_NUMBER = 2;
      private int currentTemperatureE3_;
      /**
       * <code>optional int32 current_temperature_e3 = 2;</code>
       */
      public boolean hasCurrentTemperatureE3() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 current_temperature_e3 = 2;</code>
       */
      public int getCurrentTemperatureE3() {
        return currentTemperatureE3_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, targetTemperatureE3_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, currentTemperatureE3_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, targetTemperatureE3_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, currentTemperatureE3_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData) obj;

        if (hasTargetTemperatureE3() != other.hasTargetTemperatureE3()) return false;
        if (hasTargetTemperatureE3()) {
          if (getTargetTemperatureE3()
              != other.getTargetTemperatureE3()) return false;
        }
        if (hasCurrentTemperatureE3() != other.hasCurrentTemperatureE3()) return false;
        if (hasCurrentTemperatureE3()) {
          if (getCurrentTemperatureE3()
              != other.getCurrentTemperatureE3()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTargetTemperatureE3()) {
          hash = (37 * hash) + TARGET_TEMPERATURE_E3_FIELD_NUMBER;
          hash = (53 * hash) + getTargetTemperatureE3();
        }
        if (hasCurrentTemperatureE3()) {
          hash = (37 * hash) + CURRENT_TEMPERATURE_E3_FIELD_NUMBER;
          hash = (53 * hash) + getCurrentTemperatureE3();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_HvacData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_HvacData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          targetTemperatureE3_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          currentTemperatureE3_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_HvacData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.targetTemperatureE3_ = targetTemperatureE3_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.currentTemperatureE3_ = currentTemperatureE3_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.getDefaultInstance()) return this;
          if (other.hasTargetTemperatureE3()) {
            setTargetTemperatureE3(other.getTargetTemperatureE3());
          }
          if (other.hasCurrentTemperatureE3()) {
            setCurrentTemperatureE3(other.getCurrentTemperatureE3());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int targetTemperatureE3_ ;
        /**
         * <code>optional int32 target_temperature_e3 = 1;</code>
         */
        public boolean hasTargetTemperatureE3() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int32 target_temperature_e3 = 1;</code>
         */
        public int getTargetTemperatureE3() {
          return targetTemperatureE3_;
        }
        /**
         * <code>optional int32 target_temperature_e3 = 1;</code>
         */
        public Builder setTargetTemperatureE3(int value) {
          bitField0_ |= 0x00000001;
          targetTemperatureE3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 target_temperature_e3 = 1;</code>
         */
        public Builder clearTargetTemperatureE3() {
          bitField0_ = (bitField0_ & ~0x00000001);
          targetTemperatureE3_ = 0;
          onChanged();
          return this;
        }

        private int currentTemperatureE3_ ;
        /**
         * <code>optional int32 current_temperature_e3 = 2;</code>
         */
        public boolean hasCurrentTemperatureE3() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 current_temperature_e3 = 2;</code>
         */
        public int getCurrentTemperatureE3() {
          return currentTemperatureE3_;
        }
        /**
         * <code>optional int32 current_temperature_e3 = 2;</code>
         */
        public Builder setCurrentTemperatureE3(int value) {
          bitField0_ |= 0x00000002;
          currentTemperatureE3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 current_temperature_e3 = 2;</code>
         */
        public Builder clearCurrentTemperatureE3() {
          bitField0_ = (bitField0_ & ~0x00000002);
          currentTemperatureE3_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<HvacData>
          PARSER = new com.google.protobuf.AbstractParser<HvacData>() {
        @java.lang.Override
        public HvacData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new HvacData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<HvacData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HvacData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AccelerometerDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 acceleration_x_e3 = 1;</code>
       */
      boolean hasAccelerationXE3();
      /**
       * <code>optional int32 acceleration_x_e3 = 1;</code>
       */
      int getAccelerationXE3();

      /**
       * <code>optional int32 acceleration_y_e3 = 2;</code>
       */
      boolean hasAccelerationYE3();
      /**
       * <code>optional int32 acceleration_y_e3 = 2;</code>
       */
      int getAccelerationYE3();

      /**
       * <code>optional int32 acceleration_z_e3 = 3;</code>
       */
      boolean hasAccelerationZE3();
      /**
       * <code>optional int32 acceleration_z_e3 = 3;</code>
       */
      int getAccelerationZE3();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData}
     */
    public  static final class AccelerometerData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData)
        AccelerometerDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AccelerometerData.newBuilder() to construct.
      private AccelerometerData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AccelerometerData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AccelerometerData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AccelerometerData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                accelerationXE3_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                accelerationYE3_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                accelerationZE3_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_AccelerometerData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_AccelerometerData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.Builder.class);
      }

      private int bitField0_;
      public static final int ACCELERATION_X_E3_FIELD_NUMBER = 1;
      private int accelerationXE3_;
      /**
       * <code>optional int32 acceleration_x_e3 = 1;</code>
       */
      public boolean hasAccelerationXE3() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 acceleration_x_e3 = 1;</code>
       */
      public int getAccelerationXE3() {
        return accelerationXE3_;
      }

      public static final int ACCELERATION_Y_E3_FIELD_NUMBER = 2;
      private int accelerationYE3_;
      /**
       * <code>optional int32 acceleration_y_e3 = 2;</code>
       */
      public boolean hasAccelerationYE3() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 acceleration_y_e3 = 2;</code>
       */
      public int getAccelerationYE3() {
        return accelerationYE3_;
      }

      public static final int ACCELERATION_Z_E3_FIELD_NUMBER = 3;
      private int accelerationZE3_;
      /**
       * <code>optional int32 acceleration_z_e3 = 3;</code>
       */
      public boolean hasAccelerationZE3() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 acceleration_z_e3 = 3;</code>
       */
      public int getAccelerationZE3() {
        return accelerationZE3_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, accelerationXE3_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, accelerationYE3_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt32(3, accelerationZE3_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, accelerationXE3_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, accelerationYE3_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, accelerationZE3_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData) obj;

        if (hasAccelerationXE3() != other.hasAccelerationXE3()) return false;
        if (hasAccelerationXE3()) {
          if (getAccelerationXE3()
              != other.getAccelerationXE3()) return false;
        }
        if (hasAccelerationYE3() != other.hasAccelerationYE3()) return false;
        if (hasAccelerationYE3()) {
          if (getAccelerationYE3()
              != other.getAccelerationYE3()) return false;
        }
        if (hasAccelerationZE3() != other.hasAccelerationZE3()) return false;
        if (hasAccelerationZE3()) {
          if (getAccelerationZE3()
              != other.getAccelerationZE3()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasAccelerationXE3()) {
          hash = (37 * hash) + ACCELERATION_X_E3_FIELD_NUMBER;
          hash = (53 * hash) + getAccelerationXE3();
        }
        if (hasAccelerationYE3()) {
          hash = (37 * hash) + ACCELERATION_Y_E3_FIELD_NUMBER;
          hash = (53 * hash) + getAccelerationYE3();
        }
        if (hasAccelerationZE3()) {
          hash = (37 * hash) + ACCELERATION_Z_E3_FIELD_NUMBER;
          hash = (53 * hash) + getAccelerationZE3();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_AccelerometerData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_AccelerometerData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          accelerationXE3_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          accelerationYE3_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          accelerationZE3_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_AccelerometerData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.accelerationXE3_ = accelerationXE3_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.accelerationYE3_ = accelerationYE3_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.accelerationZE3_ = accelerationZE3_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.getDefaultInstance()) return this;
          if (other.hasAccelerationXE3()) {
            setAccelerationXE3(other.getAccelerationXE3());
          }
          if (other.hasAccelerationYE3()) {
            setAccelerationYE3(other.getAccelerationYE3());
          }
          if (other.hasAccelerationZE3()) {
            setAccelerationZE3(other.getAccelerationZE3());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int accelerationXE3_ ;
        /**
         * <code>optional int32 acceleration_x_e3 = 1;</code>
         */
        public boolean hasAccelerationXE3() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int32 acceleration_x_e3 = 1;</code>
         */
        public int getAccelerationXE3() {
          return accelerationXE3_;
        }
        /**
         * <code>optional int32 acceleration_x_e3 = 1;</code>
         */
        public Builder setAccelerationXE3(int value) {
          bitField0_ |= 0x00000001;
          accelerationXE3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 acceleration_x_e3 = 1;</code>
         */
        public Builder clearAccelerationXE3() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accelerationXE3_ = 0;
          onChanged();
          return this;
        }

        private int accelerationYE3_ ;
        /**
         * <code>optional int32 acceleration_y_e3 = 2;</code>
         */
        public boolean hasAccelerationYE3() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 acceleration_y_e3 = 2;</code>
         */
        public int getAccelerationYE3() {
          return accelerationYE3_;
        }
        /**
         * <code>optional int32 acceleration_y_e3 = 2;</code>
         */
        public Builder setAccelerationYE3(int value) {
          bitField0_ |= 0x00000002;
          accelerationYE3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 acceleration_y_e3 = 2;</code>
         */
        public Builder clearAccelerationYE3() {
          bitField0_ = (bitField0_ & ~0x00000002);
          accelerationYE3_ = 0;
          onChanged();
          return this;
        }

        private int accelerationZE3_ ;
        /**
         * <code>optional int32 acceleration_z_e3 = 3;</code>
         */
        public boolean hasAccelerationZE3() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional int32 acceleration_z_e3 = 3;</code>
         */
        public int getAccelerationZE3() {
          return accelerationZE3_;
        }
        /**
         * <code>optional int32 acceleration_z_e3 = 3;</code>
         */
        public Builder setAccelerationZE3(int value) {
          bitField0_ |= 0x00000004;
          accelerationZE3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 acceleration_z_e3 = 3;</code>
         */
        public Builder clearAccelerationZE3() {
          bitField0_ = (bitField0_ & ~0x00000004);
          accelerationZE3_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<AccelerometerData>
          PARSER = new com.google.protobuf.AbstractParser<AccelerometerData>() {
        @java.lang.Override
        public AccelerometerData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AccelerometerData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AccelerometerData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AccelerometerData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface GyroscopeDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 rotation_speed_x_e3 = 1;</code>
       */
      boolean hasRotationSpeedXE3();
      /**
       * <code>optional int32 rotation_speed_x_e3 = 1;</code>
       */
      int getRotationSpeedXE3();

      /**
       * <code>optional int32 rotation_speed_y_e3 = 2;</code>
       */
      boolean hasRotationSpeedYE3();
      /**
       * <code>optional int32 rotation_speed_y_e3 = 2;</code>
       */
      int getRotationSpeedYE3();

      /**
       * <code>optional int32 rotation_speed_z_e3 = 3;</code>
       */
      boolean hasRotationSpeedZE3();
      /**
       * <code>optional int32 rotation_speed_z_e3 = 3;</code>
       */
      int getRotationSpeedZE3();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData}
     */
    public  static final class GyroscopeData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData)
        GyroscopeDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use GyroscopeData.newBuilder() to construct.
      private GyroscopeData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private GyroscopeData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new GyroscopeData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private GyroscopeData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                rotationSpeedXE3_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                rotationSpeedYE3_ = input.readInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                rotationSpeedZE3_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GyroscopeData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GyroscopeData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.Builder.class);
      }

      private int bitField0_;
      public static final int ROTATION_SPEED_X_E3_FIELD_NUMBER = 1;
      private int rotationSpeedXE3_;
      /**
       * <code>optional int32 rotation_speed_x_e3 = 1;</code>
       */
      public boolean hasRotationSpeedXE3() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 rotation_speed_x_e3 = 1;</code>
       */
      public int getRotationSpeedXE3() {
        return rotationSpeedXE3_;
      }

      public static final int ROTATION_SPEED_Y_E3_FIELD_NUMBER = 2;
      private int rotationSpeedYE3_;
      /**
       * <code>optional int32 rotation_speed_y_e3 = 2;</code>
       */
      public boolean hasRotationSpeedYE3() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 rotation_speed_y_e3 = 2;</code>
       */
      public int getRotationSpeedYE3() {
        return rotationSpeedYE3_;
      }

      public static final int ROTATION_SPEED_Z_E3_FIELD_NUMBER = 3;
      private int rotationSpeedZE3_;
      /**
       * <code>optional int32 rotation_speed_z_e3 = 3;</code>
       */
      public boolean hasRotationSpeedZE3() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 rotation_speed_z_e3 = 3;</code>
       */
      public int getRotationSpeedZE3() {
        return rotationSpeedZE3_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, rotationSpeedXE3_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, rotationSpeedYE3_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt32(3, rotationSpeedZE3_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, rotationSpeedXE3_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, rotationSpeedYE3_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, rotationSpeedZE3_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData) obj;

        if (hasRotationSpeedXE3() != other.hasRotationSpeedXE3()) return false;
        if (hasRotationSpeedXE3()) {
          if (getRotationSpeedXE3()
              != other.getRotationSpeedXE3()) return false;
        }
        if (hasRotationSpeedYE3() != other.hasRotationSpeedYE3()) return false;
        if (hasRotationSpeedYE3()) {
          if (getRotationSpeedYE3()
              != other.getRotationSpeedYE3()) return false;
        }
        if (hasRotationSpeedZE3() != other.hasRotationSpeedZE3()) return false;
        if (hasRotationSpeedZE3()) {
          if (getRotationSpeedZE3()
              != other.getRotationSpeedZE3()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasRotationSpeedXE3()) {
          hash = (37 * hash) + ROTATION_SPEED_X_E3_FIELD_NUMBER;
          hash = (53 * hash) + getRotationSpeedXE3();
        }
        if (hasRotationSpeedYE3()) {
          hash = (37 * hash) + ROTATION_SPEED_Y_E3_FIELD_NUMBER;
          hash = (53 * hash) + getRotationSpeedYE3();
        }
        if (hasRotationSpeedZE3()) {
          hash = (37 * hash) + ROTATION_SPEED_Z_E3_FIELD_NUMBER;
          hash = (53 * hash) + getRotationSpeedZE3();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GyroscopeData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GyroscopeData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          rotationSpeedXE3_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          rotationSpeedYE3_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          rotationSpeedZE3_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GyroscopeData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.rotationSpeedXE3_ = rotationSpeedXE3_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.rotationSpeedYE3_ = rotationSpeedYE3_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.rotationSpeedZE3_ = rotationSpeedZE3_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.getDefaultInstance()) return this;
          if (other.hasRotationSpeedXE3()) {
            setRotationSpeedXE3(other.getRotationSpeedXE3());
          }
          if (other.hasRotationSpeedYE3()) {
            setRotationSpeedYE3(other.getRotationSpeedYE3());
          }
          if (other.hasRotationSpeedZE3()) {
            setRotationSpeedZE3(other.getRotationSpeedZE3());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int rotationSpeedXE3_ ;
        /**
         * <code>optional int32 rotation_speed_x_e3 = 1;</code>
         */
        public boolean hasRotationSpeedXE3() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int32 rotation_speed_x_e3 = 1;</code>
         */
        public int getRotationSpeedXE3() {
          return rotationSpeedXE3_;
        }
        /**
         * <code>optional int32 rotation_speed_x_e3 = 1;</code>
         */
        public Builder setRotationSpeedXE3(int value) {
          bitField0_ |= 0x00000001;
          rotationSpeedXE3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 rotation_speed_x_e3 = 1;</code>
         */
        public Builder clearRotationSpeedXE3() {
          bitField0_ = (bitField0_ & ~0x00000001);
          rotationSpeedXE3_ = 0;
          onChanged();
          return this;
        }

        private int rotationSpeedYE3_ ;
        /**
         * <code>optional int32 rotation_speed_y_e3 = 2;</code>
         */
        public boolean hasRotationSpeedYE3() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 rotation_speed_y_e3 = 2;</code>
         */
        public int getRotationSpeedYE3() {
          return rotationSpeedYE3_;
        }
        /**
         * <code>optional int32 rotation_speed_y_e3 = 2;</code>
         */
        public Builder setRotationSpeedYE3(int value) {
          bitField0_ |= 0x00000002;
          rotationSpeedYE3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 rotation_speed_y_e3 = 2;</code>
         */
        public Builder clearRotationSpeedYE3() {
          bitField0_ = (bitField0_ & ~0x00000002);
          rotationSpeedYE3_ = 0;
          onChanged();
          return this;
        }

        private int rotationSpeedZE3_ ;
        /**
         * <code>optional int32 rotation_speed_z_e3 = 3;</code>
         */
        public boolean hasRotationSpeedZE3() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional int32 rotation_speed_z_e3 = 3;</code>
         */
        public int getRotationSpeedZE3() {
          return rotationSpeedZE3_;
        }
        /**
         * <code>optional int32 rotation_speed_z_e3 = 3;</code>
         */
        public Builder setRotationSpeedZE3(int value) {
          bitField0_ |= 0x00000004;
          rotationSpeedZE3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 rotation_speed_z_e3 = 3;</code>
         */
        public Builder clearRotationSpeedZE3() {
          bitField0_ = (bitField0_ & ~0x00000004);
          rotationSpeedZE3_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<GyroscopeData>
          PARSER = new com.google.protobuf.AbstractParser<GyroscopeData>() {
        @java.lang.Override
        public GyroscopeData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new GyroscopeData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<GyroscopeData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<GyroscopeData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DoorDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required bool hood_open = 1;</code>
       */
      boolean hasHoodOpen();
      /**
       * <code>required bool hood_open = 1;</code>
       */
      boolean getHoodOpen();

      /**
       * <code>required bool boot_open = 2;</code>
       */
      boolean hasBootOpen();
      /**
       * <code>required bool boot_open = 2;</code>
       */
      boolean getBootOpen();

      /**
       * <code>repeated bool door_open = 3;</code>
       */
      java.util.List<java.lang.Boolean> getDoorOpenList();
      /**
       * <code>repeated bool door_open = 3;</code>
       */
      int getDoorOpenCount();
      /**
       * <code>repeated bool door_open = 3;</code>
       */
      boolean getDoorOpen(int index);
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData}
     */
    public  static final class DoorData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData)
        DoorDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DoorData.newBuilder() to construct.
      private DoorData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DoorData() {
        doorOpen_ = emptyBooleanList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new DoorData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DoorData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                hoodOpen_ = input.readBool();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                bootOpen_ = input.readBool();
                break;
              }
              case 24: {
                if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                  doorOpen_ = newBooleanList();
                  mutable_bitField0_ |= 0x00000004;
                }
                doorOpen_.addBoolean(input.readBool());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                  doorOpen_ = newBooleanList();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  doorOpen_.addBoolean(input.readBool());
                }
                input.popLimit(limit);
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) != 0)) {
            doorOpen_.makeImmutable(); // C
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DoorData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DoorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.Builder.class);
      }

      private int bitField0_;
      public static final int HOOD_OPEN_FIELD_NUMBER = 1;
      private boolean hoodOpen_;
      /**
       * <code>required bool hood_open = 1;</code>
       */
      public boolean hasHoodOpen() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required bool hood_open = 1;</code>
       */
      public boolean getHoodOpen() {
        return hoodOpen_;
      }

      public static final int BOOT_OPEN_FIELD_NUMBER = 2;
      private boolean bootOpen_;
      /**
       * <code>required bool boot_open = 2;</code>
       */
      public boolean hasBootOpen() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required bool boot_open = 2;</code>
       */
      public boolean getBootOpen() {
        return bootOpen_;
      }

      public static final int DOOR_OPEN_FIELD_NUMBER = 3;
      private com.google.protobuf.Internal.BooleanList doorOpen_;
      /**
       * <code>repeated bool door_open = 3;</code>
       */
      public java.util.List<java.lang.Boolean>
          getDoorOpenList() {
        return doorOpen_;
      }
      /**
       * <code>repeated bool door_open = 3;</code>
       */
      public int getDoorOpenCount() {
        return doorOpen_.size();
      }
      /**
       * <code>repeated bool door_open = 3;</code>
       */
      public boolean getDoorOpen(int index) {
        return doorOpen_.getBoolean(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasHoodOpen()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBootOpen()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeBool(1, hoodOpen_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeBool(2, bootOpen_);
        }
        for (int i = 0; i < doorOpen_.size(); i++) {
          output.writeBool(3, doorOpen_.getBoolean(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, hoodOpen_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, bootOpen_);
        }
        {
          int dataSize = 0;
          dataSize = 1 * getDoorOpenList().size();
          size += dataSize;
          size += 1 * getDoorOpenList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData) obj;

        if (hasHoodOpen() != other.hasHoodOpen()) return false;
        if (hasHoodOpen()) {
          if (getHoodOpen()
              != other.getHoodOpen()) return false;
        }
        if (hasBootOpen() != other.hasBootOpen()) return false;
        if (hasBootOpen()) {
          if (getBootOpen()
              != other.getBootOpen()) return false;
        }
        if (!getDoorOpenList()
            .equals(other.getDoorOpenList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasHoodOpen()) {
          hash = (37 * hash) + HOOD_OPEN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHoodOpen());
        }
        if (hasBootOpen()) {
          hash = (37 * hash) + BOOT_OPEN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getBootOpen());
        }
        if (getDoorOpenCount() > 0) {
          hash = (37 * hash) + DOOR_OPEN_FIELD_NUMBER;
          hash = (53 * hash) + getDoorOpenList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DoorData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DoorData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          hoodOpen_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          bootOpen_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          doorOpen_ = emptyBooleanList();
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DoorData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.hoodOpen_ = hoodOpen_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.bootOpen_ = bootOpen_;
            to_bitField0_ |= 0x00000002;
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            doorOpen_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.doorOpen_ = doorOpen_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.getDefaultInstance()) return this;
          if (other.hasHoodOpen()) {
            setHoodOpen(other.getHoodOpen());
          }
          if (other.hasBootOpen()) {
            setBootOpen(other.getBootOpen());
          }
          if (!other.doorOpen_.isEmpty()) {
            if (doorOpen_.isEmpty()) {
              doorOpen_ = other.doorOpen_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDoorOpenIsMutable();
              doorOpen_.addAll(other.doorOpen_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasHoodOpen()) {
            return false;
          }
          if (!hasBootOpen()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean hoodOpen_ ;
        /**
         * <code>required bool hood_open = 1;</code>
         */
        public boolean hasHoodOpen() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required bool hood_open = 1;</code>
         */
        public boolean getHoodOpen() {
          return hoodOpen_;
        }
        /**
         * <code>required bool hood_open = 1;</code>
         */
        public Builder setHoodOpen(boolean value) {
          bitField0_ |= 0x00000001;
          hoodOpen_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool hood_open = 1;</code>
         */
        public Builder clearHoodOpen() {
          bitField0_ = (bitField0_ & ~0x00000001);
          hoodOpen_ = false;
          onChanged();
          return this;
        }

        private boolean bootOpen_ ;
        /**
         * <code>required bool boot_open = 2;</code>
         */
        public boolean hasBootOpen() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>required bool boot_open = 2;</code>
         */
        public boolean getBootOpen() {
          return bootOpen_;
        }
        /**
         * <code>required bool boot_open = 2;</code>
         */
        public Builder setBootOpen(boolean value) {
          bitField0_ |= 0x00000002;
          bootOpen_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool boot_open = 2;</code>
         */
        public Builder clearBootOpen() {
          bitField0_ = (bitField0_ & ~0x00000002);
          bootOpen_ = false;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.BooleanList doorOpen_ = emptyBooleanList();
        private void ensureDoorOpenIsMutable() {
          if (!((bitField0_ & 0x00000004) != 0)) {
            doorOpen_ = mutableCopy(doorOpen_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated bool door_open = 3;</code>
         */
        public java.util.List<java.lang.Boolean>
            getDoorOpenList() {
          return ((bitField0_ & 0x00000004) != 0) ?
                   java.util.Collections.unmodifiableList(doorOpen_) : doorOpen_;
        }
        /**
         * <code>repeated bool door_open = 3;</code>
         */
        public int getDoorOpenCount() {
          return doorOpen_.size();
        }
        /**
         * <code>repeated bool door_open = 3;</code>
         */
        public boolean getDoorOpen(int index) {
          return doorOpen_.getBoolean(index);
        }
        /**
         * <code>repeated bool door_open = 3;</code>
         */
        public Builder setDoorOpen(
            int index, boolean value) {
          ensureDoorOpenIsMutable();
          doorOpen_.setBoolean(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool door_open = 3;</code>
         */
        public Builder addDoorOpen(boolean value) {
          ensureDoorOpenIsMutable();
          doorOpen_.addBoolean(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool door_open = 3;</code>
         */
        public Builder addAllDoorOpen(
            java.lang.Iterable<? extends java.lang.Boolean> values) {
          ensureDoorOpenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, doorOpen_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool door_open = 3;</code>
         */
        public Builder clearDoorOpen() {
          doorOpen_ = emptyBooleanList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DoorData>
          PARSER = new com.google.protobuf.AbstractParser<DoorData>() {
        @java.lang.Override
        public DoorData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DoorData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DoorData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DoorData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LightDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.HeadlightState headlight = 1;</code>
       */
      boolean hasHeadlight();
      /**
       * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.HeadlightState headlight = 1;</code>
       */
      info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.HeadlightState getHeadlight();

      /**
       * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.TurnIndicatorState turn_indicator = 2;</code>
       */
      boolean hasTurnIndicator();
      /**
       * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.TurnIndicatorState turn_indicator = 2;</code>
       */
      info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.TurnIndicatorState getTurnIndicator();

      /**
       * <code>optional bool hazard_light_on = 3;</code>
       */
      boolean hasHazardLightOn();
      /**
       * <code>optional bool hazard_light_on = 3;</code>
       */
      boolean getHazardLightOn();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData}
     */
    public  static final class LightData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData)
        LightDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use LightData.newBuilder() to construct.
      private LightData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LightData() {
        headlight_ = 0;
        turnIndicator_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new LightData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private LightData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int rawValue = input.readEnum();
                  @SuppressWarnings("deprecation")
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.HeadlightState value = info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.HeadlightState.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  headlight_ = rawValue;
                }
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                  @SuppressWarnings("deprecation")
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.TurnIndicatorState value = info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.TurnIndicatorState.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  turnIndicator_ = rawValue;
                }
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                hazardLightOn_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LightData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LightData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.Builder.class);
      }

      /**
       * Protobuf enum {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.HeadlightState}
       */
      public enum HeadlightState
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>HEADLIGHT_0 = 0;</code>
         */
        HEADLIGHT_0(0),
        /**
         * <code>HEADLIGHT_1 = 1;</code>
         */
        HEADLIGHT_1(1),
        /**
         * <code>HEADLIGHT_2 = 2;</code>
         */
        HEADLIGHT_2(2),
        /**
         * <code>HEADLIGHT_3 = 3;</code>
         */
        HEADLIGHT_3(3),
        ;

        /**
         * <code>HEADLIGHT_0 = 0;</code>
         */
        public static final int HEADLIGHT_0_VALUE = 0;
        /**
         * <code>HEADLIGHT_1 = 1;</code>
         */
        public static final int HEADLIGHT_1_VALUE = 1;
        /**
         * <code>HEADLIGHT_2 = 2;</code>
         */
        public static final int HEADLIGHT_2_VALUE = 2;
        /**
         * <code>HEADLIGHT_3 = 3;</code>
         */
        public static final int HEADLIGHT_3_VALUE = 3;


        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static HeadlightState valueOf(int value) {
          return forNumber(value);
        }

        public static HeadlightState forNumber(int value) {
          switch (value) {
            case 0: return HEADLIGHT_0;
            case 1: return HEADLIGHT_1;
            case 2: return HEADLIGHT_2;
            case 3: return HEADLIGHT_3;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<HeadlightState>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            HeadlightState> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<HeadlightState>() {
                public HeadlightState findValueByNumber(int number) {
                  return HeadlightState.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.getDescriptor().getEnumTypes().get(0);
        }

        private static final HeadlightState[] VALUES = values();

        public static HeadlightState valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private HeadlightState(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.HeadlightState)
      }

      /**
       * Protobuf enum {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.TurnIndicatorState}
       */
      public enum TurnIndicatorState
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>INDICATOR_0 = 0;</code>
         */
        INDICATOR_0(0),
        /**
         * <code>INDICATOR_1 = 1;</code>
         */
        INDICATOR_1(1),
        /**
         * <code>INDICATOR_2 = 2;</code>
         */
        INDICATOR_2(2),
        /**
         * <code>INDICATOR_3 = 3;</code>
         */
        INDICATOR_3(3),
        ;

        /**
         * <code>INDICATOR_0 = 0;</code>
         */
        public static final int INDICATOR_0_VALUE = 0;
        /**
         * <code>INDICATOR_1 = 1;</code>
         */
        public static final int INDICATOR_1_VALUE = 1;
        /**
         * <code>INDICATOR_2 = 2;</code>
         */
        public static final int INDICATOR_2_VALUE = 2;
        /**
         * <code>INDICATOR_3 = 3;</code>
         */
        public static final int INDICATOR_3_VALUE = 3;


        public final int getNumber() {
          return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static TurnIndicatorState valueOf(int value) {
          return forNumber(value);
        }

        public static TurnIndicatorState forNumber(int value) {
          switch (value) {
            case 0: return INDICATOR_0;
            case 1: return INDICATOR_1;
            case 2: return INDICATOR_2;
            case 3: return INDICATOR_3;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<TurnIndicatorState>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            TurnIndicatorState> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<TurnIndicatorState>() {
                public TurnIndicatorState findValueByNumber(int number) {
                  return TurnIndicatorState.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.getDescriptor().getEnumTypes().get(1);
        }

        private static final TurnIndicatorState[] VALUES = values();

        public static TurnIndicatorState valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private TurnIndicatorState(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.TurnIndicatorState)
      }

      private int bitField0_;
      public static final int HEADLIGHT_FIELD_NUMBER = 1;
      private int headlight_;
      /**
       * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.HeadlightState headlight = 1;</code>
       */
      public boolean hasHeadlight() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.HeadlightState headlight = 1;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.HeadlightState getHeadlight() {
        @SuppressWarnings("deprecation")
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.HeadlightState result = info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.HeadlightState.valueOf(headlight_);
        return result == null ? info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.HeadlightState.HEADLIGHT_0 : result;
      }

      public static final int TURN_INDICATOR_FIELD_NUMBER = 2;
      private int turnIndicator_;
      /**
       * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.TurnIndicatorState turn_indicator = 2;</code>
       */
      public boolean hasTurnIndicator() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.TurnIndicatorState turn_indicator = 2;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.TurnIndicatorState getTurnIndicator() {
        @SuppressWarnings("deprecation")
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.TurnIndicatorState result = info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.TurnIndicatorState.valueOf(turnIndicator_);
        return result == null ? info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.TurnIndicatorState.INDICATOR_0 : result;
      }

      public static final int HAZARD_LIGHT_ON_FIELD_NUMBER = 3;
      private boolean hazardLightOn_;
      /**
       * <code>optional bool hazard_light_on = 3;</code>
       */
      public boolean hasHazardLightOn() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bool hazard_light_on = 3;</code>
       */
      public boolean getHazardLightOn() {
        return hazardLightOn_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeEnum(1, headlight_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeEnum(2, turnIndicator_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeBool(3, hazardLightOn_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, headlight_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, turnIndicator_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, hazardLightOn_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData) obj;

        if (hasHeadlight() != other.hasHeadlight()) return false;
        if (hasHeadlight()) {
          if (headlight_ != other.headlight_) return false;
        }
        if (hasTurnIndicator() != other.hasTurnIndicator()) return false;
        if (hasTurnIndicator()) {
          if (turnIndicator_ != other.turnIndicator_) return false;
        }
        if (hasHazardLightOn() != other.hasHazardLightOn()) return false;
        if (hasHazardLightOn()) {
          if (getHazardLightOn()
              != other.getHazardLightOn()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasHeadlight()) {
          hash = (37 * hash) + HEADLIGHT_FIELD_NUMBER;
          hash = (53 * hash) + headlight_;
        }
        if (hasTurnIndicator()) {
          hash = (37 * hash) + TURN_INDICATOR_FIELD_NUMBER;
          hash = (53 * hash) + turnIndicator_;
        }
        if (hasHazardLightOn()) {
          hash = (37 * hash) + HAZARD_LIGHT_ON_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHazardLightOn());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LightData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LightData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          headlight_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          turnIndicator_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          hazardLightOn_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LightData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            to_bitField0_ |= 0x00000001;
          }
          result.headlight_ = headlight_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.turnIndicator_ = turnIndicator_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.hazardLightOn_ = hazardLightOn_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.getDefaultInstance()) return this;
          if (other.hasHeadlight()) {
            setHeadlight(other.getHeadlight());
          }
          if (other.hasTurnIndicator()) {
            setTurnIndicator(other.getTurnIndicator());
          }
          if (other.hasHazardLightOn()) {
            setHazardLightOn(other.getHazardLightOn());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int headlight_ = 0;
        /**
         * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.HeadlightState headlight = 1;</code>
         */
        public boolean hasHeadlight() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.HeadlightState headlight = 1;</code>
         */
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.HeadlightState getHeadlight() {
          @SuppressWarnings("deprecation")
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.HeadlightState result = info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.HeadlightState.valueOf(headlight_);
          return result == null ? info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.HeadlightState.HEADLIGHT_0 : result;
        }
        /**
         * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.HeadlightState headlight = 1;</code>
         */
        public Builder setHeadlight(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.HeadlightState value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          headlight_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.HeadlightState headlight = 1;</code>
         */
        public Builder clearHeadlight() {
          bitField0_ = (bitField0_ & ~0x00000001);
          headlight_ = 0;
          onChanged();
          return this;
        }

        private int turnIndicator_ = 0;
        /**
         * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.TurnIndicatorState turn_indicator = 2;</code>
         */
        public boolean hasTurnIndicator() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.TurnIndicatorState turn_indicator = 2;</code>
         */
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.TurnIndicatorState getTurnIndicator() {
          @SuppressWarnings("deprecation")
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.TurnIndicatorState result = info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.TurnIndicatorState.valueOf(turnIndicator_);
          return result == null ? info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.TurnIndicatorState.INDICATOR_0 : result;
        }
        /**
         * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.TurnIndicatorState turn_indicator = 2;</code>
         */
        public Builder setTurnIndicator(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.TurnIndicatorState value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          turnIndicator_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData.TurnIndicatorState turn_indicator = 2;</code>
         */
        public Builder clearTurnIndicator() {
          bitField0_ = (bitField0_ & ~0x00000002);
          turnIndicator_ = 0;
          onChanged();
          return this;
        }

        private boolean hazardLightOn_ ;
        /**
         * <code>optional bool hazard_light_on = 3;</code>
         */
        public boolean hasHazardLightOn() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional bool hazard_light_on = 3;</code>
         */
        public boolean getHazardLightOn() {
          return hazardLightOn_;
        }
        /**
         * <code>optional bool hazard_light_on = 3;</code>
         */
        public Builder setHazardLightOn(boolean value) {
          bitField0_ |= 0x00000004;
          hazardLightOn_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool hazard_light_on = 3;</code>
         */
        public Builder clearHazardLightOn() {
          bitField0_ = (bitField0_ & ~0x00000004);
          hazardLightOn_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<LightData>
          PARSER = new com.google.protobuf.AbstractParser<LightData>() {
        @java.lang.Override
        public LightData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LightData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<LightData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LightData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface PassengerDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional bool passenger_present = 1;</code>
       */
      boolean hasPassengerPresent();
      /**
       * <code>optional bool passenger_present = 1;</code>
       */
      boolean getPassengerPresent();
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData}
     */
    public  static final class PassengerData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData)
        PassengerDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PassengerData.newBuilder() to construct.
      private PassengerData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PassengerData() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PassengerData();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private PassengerData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                passengerPresent_ = input.readBool();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_PassengerData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_PassengerData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.Builder.class);
      }

      private int bitField0_;
      public static final int PASSENGER_PRESENT_FIELD_NUMBER = 1;
      private boolean passengerPresent_;
      /**
       * <code>optional bool passenger_present = 1;</code>
       */
      public boolean hasPassengerPresent() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional bool passenger_present = 1;</code>
       */
      public boolean getPassengerPresent() {
        return passengerPresent_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeBool(1, passengerPresent_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, passengerPresent_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData)) {
          return super.equals(obj);
        }
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData) obj;

        if (hasPassengerPresent() != other.hasPassengerPresent()) return false;
        if (hasPassengerPresent()) {
          if (getPassengerPresent()
              != other.getPassengerPresent()) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPassengerPresent()) {
          hash = (37 * hash) + PASSENGER_PRESENT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getPassengerPresent());
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData)
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_PassengerData_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_PassengerData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.Builder.class);
        }

        // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          passengerPresent_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_PassengerData_descriptor;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData getDefaultInstanceForType() {
          return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.getDefaultInstance();
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData build() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData buildPartial() {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.passengerPresent_ = passengerPresent_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData) {
            return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData other) {
          if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.getDefaultInstance()) return this;
          if (other.hasPassengerPresent()) {
            setPassengerPresent(other.getPassengerPresent());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean passengerPresent_ ;
        /**
         * <code>optional bool passenger_present = 1;</code>
         */
        public boolean hasPassengerPresent() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional bool passenger_present = 1;</code>
         */
        public boolean getPassengerPresent() {
          return passengerPresent_;
        }
        /**
         * <code>optional bool passenger_present = 1;</code>
         */
        public Builder setPassengerPresent(boolean value) {
          bitField0_ |= 0x00000001;
          passengerPresent_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool passenger_present = 1;</code>
         */
        public Builder clearPassengerPresent() {
          bitField0_ = (bitField0_ & ~0x00000001);
          passengerPresent_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData)
      }

      // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData)
      private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData();
      }

      public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<PassengerData>
          PARSER = new com.google.protobuf.AbstractParser<PassengerData>() {
        @java.lang.Override
        public PassengerData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PassengerData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<PassengerData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PassengerData> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int LOCATION_DATA_FIELD_NUMBER = 1;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData> locationData_;
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData> getLocationDataList() {
      return locationData_;
    }
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationDataOrBuilder> 
        getLocationDataOrBuilderList() {
      return locationData_;
    }
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
     */
    public int getLocationDataCount() {
      return locationData_.size();
    }
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData getLocationData(int index) {
      return locationData_.get(index);
    }
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationDataOrBuilder getLocationDataOrBuilder(
        int index) {
      return locationData_.get(index);
    }

    public static final int COMPASS_DATA_FIELD_NUMBER = 2;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData> compassData_;
    /**
     * <pre>
     * Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData> getCompassDataList() {
      return compassData_;
    }
    /**
     * <pre>
     * Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassDataOrBuilder> 
        getCompassDataOrBuilderList() {
      return compassData_;
    }
    /**
     * <pre>
     * Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
     */
    public int getCompassDataCount() {
      return compassData_.size();
    }
    /**
     * <pre>
     * Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData getCompassData(int index) {
      return compassData_.get(index);
    }
    /**
     * <pre>
     * Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassDataOrBuilder getCompassDataOrBuilder(
        int index) {
      return compassData_.get(index);
    }

    public static final int SPEED_DATA_FIELD_NUMBER = 3;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData> speedData_;
    /**
     * <pre>
     * Working - Aka data is received, but has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData> getSpeedDataList() {
      return speedData_;
    }
    /**
     * <pre>
     * Working - Aka data is received, but has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedDataOrBuilder> 
        getSpeedDataOrBuilderList() {
      return speedData_;
    }
    /**
     * <pre>
     * Working - Aka data is received, but has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
     */
    public int getSpeedDataCount() {
      return speedData_.size();
    }
    /**
     * <pre>
     * Working - Aka data is received, but has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData getSpeedData(int index) {
      return speedData_.get(index);
    }
    /**
     * <pre>
     * Working - Aka data is received, but has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedDataOrBuilder getSpeedDataOrBuilder(
        int index) {
      return speedData_.get(index);
    }

    public static final int RPM_FIELD_NUMBER = 4;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData> rpm_;
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData> getRpmList() {
      return rpm_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmDataOrBuilder> 
        getRpmOrBuilderList() {
      return rpm_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
     */
    public int getRpmCount() {
      return rpm_.size();
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData getRpm(int index) {
      return rpm_.get(index);
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmDataOrBuilder getRpmOrBuilder(
        int index) {
      return rpm_.get(index);
    }

    public static final int ODOMETER_DATA_FIELD_NUMBER = 5;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData> odometerData_;
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData> getOdometerDataList() {
      return odometerData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerDataOrBuilder> 
        getOdometerDataOrBuilderList() {
      return odometerData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
     */
    public int getOdometerDataCount() {
      return odometerData_.size();
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData getOdometerData(int index) {
      return odometerData_.get(index);
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerDataOrBuilder getOdometerDataOrBuilder(
        int index) {
      return odometerData_.get(index);
    }

    public static final int FUEL_DATA_FIELD_NUMBER = 6;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData> fuelData_;
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData> getFuelDataList() {
      return fuelData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelDataOrBuilder> 
        getFuelDataOrBuilderList() {
      return fuelData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
     */
    public int getFuelDataCount() {
      return fuelData_.size();
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData getFuelData(int index) {
      return fuelData_.get(index);
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelDataOrBuilder getFuelDataOrBuilder(
        int index) {
      return fuelData_.get(index);
    }

    public static final int PARKINGBRAKE_DATA_FIELD_NUMBER = 7;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData> parkingbrakeData_;
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData> getParkingbrakeDataList() {
      return parkingbrakeData_;
    }
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeDataOrBuilder> 
        getParkingbrakeDataOrBuilderList() {
      return parkingbrakeData_;
    }
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
     */
    public int getParkingbrakeDataCount() {
      return parkingbrakeData_.size();
    }
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData getParkingbrakeData(int index) {
      return parkingbrakeData_.get(index);
    }
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeDataOrBuilder getParkingbrakeDataOrBuilder(
        int index) {
      return parkingbrakeData_.get(index);
    }

    public static final int GEAR_DATA_FIELD_NUMBER = 8;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData> gearData_;
    /**
     * <pre>
     *Working but need to do the enum definition, and has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData> getGearDataList() {
      return gearData_;
    }
    /**
     * <pre>
     *Working but need to do the enum definition, and has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearDataOrBuilder> 
        getGearDataOrBuilderList() {
      return gearData_;
    }
    /**
     * <pre>
     *Working but need to do the enum definition, and has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
     */
    public int getGearDataCount() {
      return gearData_.size();
    }
    /**
     * <pre>
     *Working but need to do the enum definition, and has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData getGearData(int index) {
      return gearData_.get(index);
    }
    /**
     * <pre>
     *Working but need to do the enum definition, and has no effect
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearDataOrBuilder getGearDataOrBuilder(
        int index) {
      return gearData_.get(index);
    }

    public static final int DIAGNOSTICS_DATA_FIELD_NUMBER = 9;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData> diagnosticsData_;
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData> getDiagnosticsDataList() {
      return diagnosticsData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsDataOrBuilder> 
        getDiagnosticsDataOrBuilderList() {
      return diagnosticsData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
     */
    public int getDiagnosticsDataCount() {
      return diagnosticsData_.size();
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData getDiagnosticsData(int index) {
      return diagnosticsData_.get(index);
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsDataOrBuilder getDiagnosticsDataOrBuilder(
        int index) {
      return diagnosticsData_.get(index);
    }

    public static final int NIGHT_MODE_FIELD_NUMBER = 10;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData> nightMode_;
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData> getNightModeList() {
      return nightMode_;
    }
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightDataOrBuilder> 
        getNightModeOrBuilderList() {
      return nightMode_;
    }
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
     */
    public int getNightModeCount() {
      return nightMode_.size();
    }
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData getNightMode(int index) {
      return nightMode_.get(index);
    }
    /**
     * <pre>
     * Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightDataOrBuilder getNightModeOrBuilder(
        int index) {
      return nightMode_.get(index);
    }

    public static final int ENVIORMENT_DATA_FIELD_NUMBER = 11;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData> enviormentData_;
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData> getEnviormentDataList() {
      return enviormentData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentDataOrBuilder> 
        getEnviormentDataOrBuilderList() {
      return enviormentData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
     */
    public int getEnviormentDataCount() {
      return enviormentData_.size();
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData getEnviormentData(int index) {
      return enviormentData_.get(index);
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentDataOrBuilder getEnviormentDataOrBuilder(
        int index) {
      return enviormentData_.get(index);
    }

    public static final int HVAC_DATA_FIELD_NUMBER = 12;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData> hvacData_;
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData> getHvacDataList() {
      return hvacData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacDataOrBuilder> 
        getHvacDataOrBuilderList() {
      return hvacData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
     */
    public int getHvacDataCount() {
      return hvacData_.size();
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData getHvacData(int index) {
      return hvacData_.get(index);
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacDataOrBuilder getHvacDataOrBuilder(
        int index) {
      return hvacData_.get(index);
    }

    public static final int DRIVING_STATUS_FIELD_NUMBER = 13;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData> drivingStatus_;
    /**
     * <pre>
     *Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData> getDrivingStatusList() {
      return drivingStatus_;
    }
    /**
     * <pre>
     *Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusDataOrBuilder> 
        getDrivingStatusOrBuilderList() {
      return drivingStatus_;
    }
    /**
     * <pre>
     *Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
     */
    public int getDrivingStatusCount() {
      return drivingStatus_.size();
    }
    /**
     * <pre>
     *Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData getDrivingStatus(int index) {
      return drivingStatus_.get(index);
    }
    /**
     * <pre>
     *Working
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusDataOrBuilder getDrivingStatusOrBuilder(
        int index) {
      return drivingStatus_.get(index);
    }

    public static final int DEAD_RECKONING_FIELD_NUMBER = 14;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData> deadReckoning_;
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData> getDeadReckoningList() {
      return deadReckoning_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningDataOrBuilder> 
        getDeadReckoningOrBuilderList() {
      return deadReckoning_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
     */
    public int getDeadReckoningCount() {
      return deadReckoning_.size();
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData getDeadReckoning(int index) {
      return deadReckoning_.get(index);
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningDataOrBuilder getDeadReckoningOrBuilder(
        int index) {
      return deadReckoning_.get(index);
    }

    public static final int PASSENGER_DATA_FIELD_NUMBER = 15;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData> passengerData_;
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData> getPassengerDataList() {
      return passengerData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerDataOrBuilder> 
        getPassengerDataOrBuilderList() {
      return passengerData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
     */
    public int getPassengerDataCount() {
      return passengerData_.size();
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData getPassengerData(int index) {
      return passengerData_.get(index);
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerDataOrBuilder getPassengerDataOrBuilder(
        int index) {
      return passengerData_.get(index);
    }

    public static final int DOOR_DATA_FIELD_NUMBER = 16;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData> doorData_;
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData> getDoorDataList() {
      return doorData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorDataOrBuilder> 
        getDoorDataOrBuilderList() {
      return doorData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
     */
    public int getDoorDataCount() {
      return doorData_.size();
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData getDoorData(int index) {
      return doorData_.get(index);
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorDataOrBuilder getDoorDataOrBuilder(
        int index) {
      return doorData_.get(index);
    }

    public static final int LIGHT_DATA_FIELD_NUMBER = 17;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData> lightData_;
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData> getLightDataList() {
      return lightData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightDataOrBuilder> 
        getLightDataOrBuilderList() {
      return lightData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
     */
    public int getLightDataCount() {
      return lightData_.size();
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData getLightData(int index) {
      return lightData_.get(index);
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightDataOrBuilder getLightDataOrBuilder(
        int index) {
      return lightData_.get(index);
    }

    public static final int ACCEL_DATA_FIELD_NUMBER = 19;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData> accelData_;
    /**
     * <pre>
     *repeated TirePressureData Tire = 18;
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData> getAccelDataList() {
      return accelData_;
    }
    /**
     * <pre>
     *repeated TirePressureData Tire = 18;
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerDataOrBuilder> 
        getAccelDataOrBuilderList() {
      return accelData_;
    }
    /**
     * <pre>
     *repeated TirePressureData Tire = 18;
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
     */
    public int getAccelDataCount() {
      return accelData_.size();
    }
    /**
     * <pre>
     *repeated TirePressureData Tire = 18;
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData getAccelData(int index) {
      return accelData_.get(index);
    }
    /**
     * <pre>
     *repeated TirePressureData Tire = 18;
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerDataOrBuilder getAccelDataOrBuilder(
        int index) {
      return accelData_.get(index);
    }

    public static final int GYRO_DATA_FIELD_NUMBER = 20;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData> gyroData_;
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData> getGyroDataList() {
      return gyroData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeDataOrBuilder> 
        getGyroDataOrBuilderList() {
      return gyroData_;
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
     */
    public int getGyroDataCount() {
      return gyroData_.size();
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData getGyroData(int index) {
      return gyroData_.get(index);
    }
    /**
     * <pre>
     *Sensor not yet supported
     * </pre>
     *
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeDataOrBuilder getGyroDataOrBuilder(
        int index) {
      return gyroData_.get(index);
    }

    public static final int GPS_SATELLITE_DATA_FIELD_NUMBER = 21;
    private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData> gpsSatelliteData_;
    /**
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
     */
    public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData> getGpsSatelliteDataList() {
      return gpsSatelliteData_;
    }
    /**
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
     */
    public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteDataOrBuilder> 
        getGpsSatelliteDataOrBuilderList() {
      return gpsSatelliteData_;
    }
    /**
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
     */
    public int getGpsSatelliteDataCount() {
      return gpsSatelliteData_.size();
    }
    /**
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData getGpsSatelliteData(int index) {
      return gpsSatelliteData_.get(index);
    }
    /**
     * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteDataOrBuilder getGpsSatelliteDataOrBuilder(
        int index) {
      return gpsSatelliteData_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getLocationDataCount(); i++) {
        if (!getLocationData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCompassDataCount(); i++) {
        if (!getCompassData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getSpeedDataCount(); i++) {
        if (!getSpeedData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRpmCount(); i++) {
        if (!getRpm(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getFuelDataCount(); i++) {
        if (!getFuelData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getParkingbrakeDataCount(); i++) {
        if (!getParkingbrakeData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getGearDataCount(); i++) {
        if (!getGearData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDiagnosticsDataCount(); i++) {
        if (!getDiagnosticsData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getNightModeCount(); i++) {
        if (!getNightMode(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDrivingStatusCount(); i++) {
        if (!getDrivingStatus(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDoorDataCount(); i++) {
        if (!getDoorData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < locationData_.size(); i++) {
        output.writeMessage(1, locationData_.get(i));
      }
      for (int i = 0; i < compassData_.size(); i++) {
        output.writeMessage(2, compassData_.get(i));
      }
      for (int i = 0; i < speedData_.size(); i++) {
        output.writeMessage(3, speedData_.get(i));
      }
      for (int i = 0; i < rpm_.size(); i++) {
        output.writeMessage(4, rpm_.get(i));
      }
      for (int i = 0; i < odometerData_.size(); i++) {
        output.writeMessage(5, odometerData_.get(i));
      }
      for (int i = 0; i < fuelData_.size(); i++) {
        output.writeMessage(6, fuelData_.get(i));
      }
      for (int i = 0; i < parkingbrakeData_.size(); i++) {
        output.writeMessage(7, parkingbrakeData_.get(i));
      }
      for (int i = 0; i < gearData_.size(); i++) {
        output.writeMessage(8, gearData_.get(i));
      }
      for (int i = 0; i < diagnosticsData_.size(); i++) {
        output.writeMessage(9, diagnosticsData_.get(i));
      }
      for (int i = 0; i < nightMode_.size(); i++) {
        output.writeMessage(10, nightMode_.get(i));
      }
      for (int i = 0; i < enviormentData_.size(); i++) {
        output.writeMessage(11, enviormentData_.get(i));
      }
      for (int i = 0; i < hvacData_.size(); i++) {
        output.writeMessage(12, hvacData_.get(i));
      }
      for (int i = 0; i < drivingStatus_.size(); i++) {
        output.writeMessage(13, drivingStatus_.get(i));
      }
      for (int i = 0; i < deadReckoning_.size(); i++) {
        output.writeMessage(14, deadReckoning_.get(i));
      }
      for (int i = 0; i < passengerData_.size(); i++) {
        output.writeMessage(15, passengerData_.get(i));
      }
      for (int i = 0; i < doorData_.size(); i++) {
        output.writeMessage(16, doorData_.get(i));
      }
      for (int i = 0; i < lightData_.size(); i++) {
        output.writeMessage(17, lightData_.get(i));
      }
      for (int i = 0; i < accelData_.size(); i++) {
        output.writeMessage(19, accelData_.get(i));
      }
      for (int i = 0; i < gyroData_.size(); i++) {
        output.writeMessage(20, gyroData_.get(i));
      }
      for (int i = 0; i < gpsSatelliteData_.size(); i++) {
        output.writeMessage(21, gpsSatelliteData_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < locationData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, locationData_.get(i));
      }
      for (int i = 0; i < compassData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, compassData_.get(i));
      }
      for (int i = 0; i < speedData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, speedData_.get(i));
      }
      for (int i = 0; i < rpm_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, rpm_.get(i));
      }
      for (int i = 0; i < odometerData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, odometerData_.get(i));
      }
      for (int i = 0; i < fuelData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, fuelData_.get(i));
      }
      for (int i = 0; i < parkingbrakeData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, parkingbrakeData_.get(i));
      }
      for (int i = 0; i < gearData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, gearData_.get(i));
      }
      for (int i = 0; i < diagnosticsData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, diagnosticsData_.get(i));
      }
      for (int i = 0; i < nightMode_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, nightMode_.get(i));
      }
      for (int i = 0; i < enviormentData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, enviormentData_.get(i));
      }
      for (int i = 0; i < hvacData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, hvacData_.get(i));
      }
      for (int i = 0; i < drivingStatus_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, drivingStatus_.get(i));
      }
      for (int i = 0; i < deadReckoning_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, deadReckoning_.get(i));
      }
      for (int i = 0; i < passengerData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, passengerData_.get(i));
      }
      for (int i = 0; i < doorData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, doorData_.get(i));
      }
      for (int i = 0; i < lightData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, lightData_.get(i));
      }
      for (int i = 0; i < accelData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, accelData_.get(i));
      }
      for (int i = 0; i < gyroData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, gyroData_.get(i));
      }
      for (int i = 0; i < gpsSatelliteData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, gpsSatelliteData_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch)) {
        return super.equals(obj);
      }
      info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch) obj;

      if (!getLocationDataList()
          .equals(other.getLocationDataList())) return false;
      if (!getCompassDataList()
          .equals(other.getCompassDataList())) return false;
      if (!getSpeedDataList()
          .equals(other.getSpeedDataList())) return false;
      if (!getRpmList()
          .equals(other.getRpmList())) return false;
      if (!getOdometerDataList()
          .equals(other.getOdometerDataList())) return false;
      if (!getFuelDataList()
          .equals(other.getFuelDataList())) return false;
      if (!getParkingbrakeDataList()
          .equals(other.getParkingbrakeDataList())) return false;
      if (!getGearDataList()
          .equals(other.getGearDataList())) return false;
      if (!getDiagnosticsDataList()
          .equals(other.getDiagnosticsDataList())) return false;
      if (!getNightModeList()
          .equals(other.getNightModeList())) return false;
      if (!getEnviormentDataList()
          .equals(other.getEnviormentDataList())) return false;
      if (!getHvacDataList()
          .equals(other.getHvacDataList())) return false;
      if (!getDrivingStatusList()
          .equals(other.getDrivingStatusList())) return false;
      if (!getDeadReckoningList()
          .equals(other.getDeadReckoningList())) return false;
      if (!getPassengerDataList()
          .equals(other.getPassengerDataList())) return false;
      if (!getDoorDataList()
          .equals(other.getDoorDataList())) return false;
      if (!getLightDataList()
          .equals(other.getLightDataList())) return false;
      if (!getAccelDataList()
          .equals(other.getAccelDataList())) return false;
      if (!getGyroDataList()
          .equals(other.getGyroDataList())) return false;
      if (!getGpsSatelliteDataList()
          .equals(other.getGpsSatelliteDataList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLocationDataCount() > 0) {
        hash = (37 * hash) + LOCATION_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getLocationDataList().hashCode();
      }
      if (getCompassDataCount() > 0) {
        hash = (37 * hash) + COMPASS_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getCompassDataList().hashCode();
      }
      if (getSpeedDataCount() > 0) {
        hash = (37 * hash) + SPEED_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getSpeedDataList().hashCode();
      }
      if (getRpmCount() > 0) {
        hash = (37 * hash) + RPM_FIELD_NUMBER;
        hash = (53 * hash) + getRpmList().hashCode();
      }
      if (getOdometerDataCount() > 0) {
        hash = (37 * hash) + ODOMETER_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getOdometerDataList().hashCode();
      }
      if (getFuelDataCount() > 0) {
        hash = (37 * hash) + FUEL_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getFuelDataList().hashCode();
      }
      if (getParkingbrakeDataCount() > 0) {
        hash = (37 * hash) + PARKINGBRAKE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getParkingbrakeDataList().hashCode();
      }
      if (getGearDataCount() > 0) {
        hash = (37 * hash) + GEAR_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getGearDataList().hashCode();
      }
      if (getDiagnosticsDataCount() > 0) {
        hash = (37 * hash) + DIAGNOSTICS_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDiagnosticsDataList().hashCode();
      }
      if (getNightModeCount() > 0) {
        hash = (37 * hash) + NIGHT_MODE_FIELD_NUMBER;
        hash = (53 * hash) + getNightModeList().hashCode();
      }
      if (getEnviormentDataCount() > 0) {
        hash = (37 * hash) + ENVIORMENT_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getEnviormentDataList().hashCode();
      }
      if (getHvacDataCount() > 0) {
        hash = (37 * hash) + HVAC_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getHvacDataList().hashCode();
      }
      if (getDrivingStatusCount() > 0) {
        hash = (37 * hash) + DRIVING_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getDrivingStatusList().hashCode();
      }
      if (getDeadReckoningCount() > 0) {
        hash = (37 * hash) + DEAD_RECKONING_FIELD_NUMBER;
        hash = (53 * hash) + getDeadReckoningList().hashCode();
      }
      if (getPassengerDataCount() > 0) {
        hash = (37 * hash) + PASSENGER_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getPassengerDataList().hashCode();
      }
      if (getDoorDataCount() > 0) {
        hash = (37 * hash) + DOOR_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDoorDataList().hashCode();
      }
      if (getLightDataCount() > 0) {
        hash = (37 * hash) + LIGHT_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getLightDataList().hashCode();
      }
      if (getAccelDataCount() > 0) {
        hash = (37 * hash) + ACCEL_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getAccelDataList().hashCode();
      }
      if (getGyroDataCount() > 0) {
        hash = (37 * hash) + GYRO_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getGyroDataList().hashCode();
      }
      if (getGpsSatelliteDataCount() > 0) {
        hash = (37 * hash) + GPS_SATELLITE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getGpsSatelliteDataList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorBatch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorBatch)
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.Builder.class);
      }

      // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLocationDataFieldBuilder();
          getCompassDataFieldBuilder();
          getSpeedDataFieldBuilder();
          getRpmFieldBuilder();
          getOdometerDataFieldBuilder();
          getFuelDataFieldBuilder();
          getParkingbrakeDataFieldBuilder();
          getGearDataFieldBuilder();
          getDiagnosticsDataFieldBuilder();
          getNightModeFieldBuilder();
          getEnviormentDataFieldBuilder();
          getHvacDataFieldBuilder();
          getDrivingStatusFieldBuilder();
          getDeadReckoningFieldBuilder();
          getPassengerDataFieldBuilder();
          getDoorDataFieldBuilder();
          getLightDataFieldBuilder();
          getAccelDataFieldBuilder();
          getGyroDataFieldBuilder();
          getGpsSatelliteDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (locationDataBuilder_ == null) {
          locationData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          locationDataBuilder_.clear();
        }
        if (compassDataBuilder_ == null) {
          compassData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          compassDataBuilder_.clear();
        }
        if (speedDataBuilder_ == null) {
          speedData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          speedDataBuilder_.clear();
        }
        if (rpmBuilder_ == null) {
          rpm_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          rpmBuilder_.clear();
        }
        if (odometerDataBuilder_ == null) {
          odometerData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          odometerDataBuilder_.clear();
        }
        if (fuelDataBuilder_ == null) {
          fuelData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          fuelDataBuilder_.clear();
        }
        if (parkingbrakeDataBuilder_ == null) {
          parkingbrakeData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          parkingbrakeDataBuilder_.clear();
        }
        if (gearDataBuilder_ == null) {
          gearData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          gearDataBuilder_.clear();
        }
        if (diagnosticsDataBuilder_ == null) {
          diagnosticsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          diagnosticsDataBuilder_.clear();
        }
        if (nightModeBuilder_ == null) {
          nightMode_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          nightModeBuilder_.clear();
        }
        if (enviormentDataBuilder_ == null) {
          enviormentData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          enviormentDataBuilder_.clear();
        }
        if (hvacDataBuilder_ == null) {
          hvacData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          hvacDataBuilder_.clear();
        }
        if (drivingStatusBuilder_ == null) {
          drivingStatus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          drivingStatusBuilder_.clear();
        }
        if (deadReckoningBuilder_ == null) {
          deadReckoning_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          deadReckoningBuilder_.clear();
        }
        if (passengerDataBuilder_ == null) {
          passengerData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          passengerDataBuilder_.clear();
        }
        if (doorDataBuilder_ == null) {
          doorData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          doorDataBuilder_.clear();
        }
        if (lightDataBuilder_ == null) {
          lightData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          lightDataBuilder_.clear();
        }
        if (accelDataBuilder_ == null) {
          accelData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          accelDataBuilder_.clear();
        }
        if (gyroDataBuilder_ == null) {
          gyroData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
        } else {
          gyroDataBuilder_.clear();
        }
        if (gpsSatelliteDataBuilder_ == null) {
          gpsSatelliteData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
        } else {
          gpsSatelliteDataBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch getDefaultInstanceForType() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.getDefaultInstance();
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch build() {
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch buildPartial() {
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch(this);
        int from_bitField0_ = bitField0_;
        if (locationDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            locationData_ = java.util.Collections.unmodifiableList(locationData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.locationData_ = locationData_;
        } else {
          result.locationData_ = locationDataBuilder_.build();
        }
        if (compassDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            compassData_ = java.util.Collections.unmodifiableList(compassData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.compassData_ = compassData_;
        } else {
          result.compassData_ = compassDataBuilder_.build();
        }
        if (speedDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            speedData_ = java.util.Collections.unmodifiableList(speedData_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.speedData_ = speedData_;
        } else {
          result.speedData_ = speedDataBuilder_.build();
        }
        if (rpmBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            rpm_ = java.util.Collections.unmodifiableList(rpm_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.rpm_ = rpm_;
        } else {
          result.rpm_ = rpmBuilder_.build();
        }
        if (odometerDataBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            odometerData_ = java.util.Collections.unmodifiableList(odometerData_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.odometerData_ = odometerData_;
        } else {
          result.odometerData_ = odometerDataBuilder_.build();
        }
        if (fuelDataBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            fuelData_ = java.util.Collections.unmodifiableList(fuelData_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.fuelData_ = fuelData_;
        } else {
          result.fuelData_ = fuelDataBuilder_.build();
        }
        if (parkingbrakeDataBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            parkingbrakeData_ = java.util.Collections.unmodifiableList(parkingbrakeData_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.parkingbrakeData_ = parkingbrakeData_;
        } else {
          result.parkingbrakeData_ = parkingbrakeDataBuilder_.build();
        }
        if (gearDataBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)) {
            gearData_ = java.util.Collections.unmodifiableList(gearData_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.gearData_ = gearData_;
        } else {
          result.gearData_ = gearDataBuilder_.build();
        }
        if (diagnosticsDataBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0)) {
            diagnosticsData_ = java.util.Collections.unmodifiableList(diagnosticsData_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.diagnosticsData_ = diagnosticsData_;
        } else {
          result.diagnosticsData_ = diagnosticsDataBuilder_.build();
        }
        if (nightModeBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0)) {
            nightMode_ = java.util.Collections.unmodifiableList(nightMode_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.nightMode_ = nightMode_;
        } else {
          result.nightMode_ = nightModeBuilder_.build();
        }
        if (enviormentDataBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0)) {
            enviormentData_ = java.util.Collections.unmodifiableList(enviormentData_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.enviormentData_ = enviormentData_;
        } else {
          result.enviormentData_ = enviormentDataBuilder_.build();
        }
        if (hvacDataBuilder_ == null) {
          if (((bitField0_ & 0x00000800) != 0)) {
            hvacData_ = java.util.Collections.unmodifiableList(hvacData_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.hvacData_ = hvacData_;
        } else {
          result.hvacData_ = hvacDataBuilder_.build();
        }
        if (drivingStatusBuilder_ == null) {
          if (((bitField0_ & 0x00001000) != 0)) {
            drivingStatus_ = java.util.Collections.unmodifiableList(drivingStatus_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.drivingStatus_ = drivingStatus_;
        } else {
          result.drivingStatus_ = drivingStatusBuilder_.build();
        }
        if (deadReckoningBuilder_ == null) {
          if (((bitField0_ & 0x00002000) != 0)) {
            deadReckoning_ = java.util.Collections.unmodifiableList(deadReckoning_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.deadReckoning_ = deadReckoning_;
        } else {
          result.deadReckoning_ = deadReckoningBuilder_.build();
        }
        if (passengerDataBuilder_ == null) {
          if (((bitField0_ & 0x00004000) != 0)) {
            passengerData_ = java.util.Collections.unmodifiableList(passengerData_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.passengerData_ = passengerData_;
        } else {
          result.passengerData_ = passengerDataBuilder_.build();
        }
        if (doorDataBuilder_ == null) {
          if (((bitField0_ & 0x00008000) != 0)) {
            doorData_ = java.util.Collections.unmodifiableList(doorData_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.doorData_ = doorData_;
        } else {
          result.doorData_ = doorDataBuilder_.build();
        }
        if (lightDataBuilder_ == null) {
          if (((bitField0_ & 0x00010000) != 0)) {
            lightData_ = java.util.Collections.unmodifiableList(lightData_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.lightData_ = lightData_;
        } else {
          result.lightData_ = lightDataBuilder_.build();
        }
        if (accelDataBuilder_ == null) {
          if (((bitField0_ & 0x00020000) != 0)) {
            accelData_ = java.util.Collections.unmodifiableList(accelData_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.accelData_ = accelData_;
        } else {
          result.accelData_ = accelDataBuilder_.build();
        }
        if (gyroDataBuilder_ == null) {
          if (((bitField0_ & 0x00040000) != 0)) {
            gyroData_ = java.util.Collections.unmodifiableList(gyroData_);
            bitField0_ = (bitField0_ & ~0x00040000);
          }
          result.gyroData_ = gyroData_;
        } else {
          result.gyroData_ = gyroDataBuilder_.build();
        }
        if (gpsSatelliteDataBuilder_ == null) {
          if (((bitField0_ & 0x00080000) != 0)) {
            gpsSatelliteData_ = java.util.Collections.unmodifiableList(gpsSatelliteData_);
            bitField0_ = (bitField0_ & ~0x00080000);
          }
          result.gpsSatelliteData_ = gpsSatelliteData_;
        } else {
          result.gpsSatelliteData_ = gpsSatelliteDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch) {
          return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch other) {
        if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.getDefaultInstance()) return this;
        if (locationDataBuilder_ == null) {
          if (!other.locationData_.isEmpty()) {
            if (locationData_.isEmpty()) {
              locationData_ = other.locationData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLocationDataIsMutable();
              locationData_.addAll(other.locationData_);
            }
            onChanged();
          }
        } else {
          if (!other.locationData_.isEmpty()) {
            if (locationDataBuilder_.isEmpty()) {
              locationDataBuilder_.dispose();
              locationDataBuilder_ = null;
              locationData_ = other.locationData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              locationDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLocationDataFieldBuilder() : null;
            } else {
              locationDataBuilder_.addAllMessages(other.locationData_);
            }
          }
        }
        if (compassDataBuilder_ == null) {
          if (!other.compassData_.isEmpty()) {
            if (compassData_.isEmpty()) {
              compassData_ = other.compassData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCompassDataIsMutable();
              compassData_.addAll(other.compassData_);
            }
            onChanged();
          }
        } else {
          if (!other.compassData_.isEmpty()) {
            if (compassDataBuilder_.isEmpty()) {
              compassDataBuilder_.dispose();
              compassDataBuilder_ = null;
              compassData_ = other.compassData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              compassDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCompassDataFieldBuilder() : null;
            } else {
              compassDataBuilder_.addAllMessages(other.compassData_);
            }
          }
        }
        if (speedDataBuilder_ == null) {
          if (!other.speedData_.isEmpty()) {
            if (speedData_.isEmpty()) {
              speedData_ = other.speedData_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSpeedDataIsMutable();
              speedData_.addAll(other.speedData_);
            }
            onChanged();
          }
        } else {
          if (!other.speedData_.isEmpty()) {
            if (speedDataBuilder_.isEmpty()) {
              speedDataBuilder_.dispose();
              speedDataBuilder_ = null;
              speedData_ = other.speedData_;
              bitField0_ = (bitField0_ & ~0x00000004);
              speedDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSpeedDataFieldBuilder() : null;
            } else {
              speedDataBuilder_.addAllMessages(other.speedData_);
            }
          }
        }
        if (rpmBuilder_ == null) {
          if (!other.rpm_.isEmpty()) {
            if (rpm_.isEmpty()) {
              rpm_ = other.rpm_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRpmIsMutable();
              rpm_.addAll(other.rpm_);
            }
            onChanged();
          }
        } else {
          if (!other.rpm_.isEmpty()) {
            if (rpmBuilder_.isEmpty()) {
              rpmBuilder_.dispose();
              rpmBuilder_ = null;
              rpm_ = other.rpm_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rpmBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRpmFieldBuilder() : null;
            } else {
              rpmBuilder_.addAllMessages(other.rpm_);
            }
          }
        }
        if (odometerDataBuilder_ == null) {
          if (!other.odometerData_.isEmpty()) {
            if (odometerData_.isEmpty()) {
              odometerData_ = other.odometerData_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureOdometerDataIsMutable();
              odometerData_.addAll(other.odometerData_);
            }
            onChanged();
          }
        } else {
          if (!other.odometerData_.isEmpty()) {
            if (odometerDataBuilder_.isEmpty()) {
              odometerDataBuilder_.dispose();
              odometerDataBuilder_ = null;
              odometerData_ = other.odometerData_;
              bitField0_ = (bitField0_ & ~0x00000010);
              odometerDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOdometerDataFieldBuilder() : null;
            } else {
              odometerDataBuilder_.addAllMessages(other.odometerData_);
            }
          }
        }
        if (fuelDataBuilder_ == null) {
          if (!other.fuelData_.isEmpty()) {
            if (fuelData_.isEmpty()) {
              fuelData_ = other.fuelData_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureFuelDataIsMutable();
              fuelData_.addAll(other.fuelData_);
            }
            onChanged();
          }
        } else {
          if (!other.fuelData_.isEmpty()) {
            if (fuelDataBuilder_.isEmpty()) {
              fuelDataBuilder_.dispose();
              fuelDataBuilder_ = null;
              fuelData_ = other.fuelData_;
              bitField0_ = (bitField0_ & ~0x00000020);
              fuelDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFuelDataFieldBuilder() : null;
            } else {
              fuelDataBuilder_.addAllMessages(other.fuelData_);
            }
          }
        }
        if (parkingbrakeDataBuilder_ == null) {
          if (!other.parkingbrakeData_.isEmpty()) {
            if (parkingbrakeData_.isEmpty()) {
              parkingbrakeData_ = other.parkingbrakeData_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureParkingbrakeDataIsMutable();
              parkingbrakeData_.addAll(other.parkingbrakeData_);
            }
            onChanged();
          }
        } else {
          if (!other.parkingbrakeData_.isEmpty()) {
            if (parkingbrakeDataBuilder_.isEmpty()) {
              parkingbrakeDataBuilder_.dispose();
              parkingbrakeDataBuilder_ = null;
              parkingbrakeData_ = other.parkingbrakeData_;
              bitField0_ = (bitField0_ & ~0x00000040);
              parkingbrakeDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getParkingbrakeDataFieldBuilder() : null;
            } else {
              parkingbrakeDataBuilder_.addAllMessages(other.parkingbrakeData_);
            }
          }
        }
        if (gearDataBuilder_ == null) {
          if (!other.gearData_.isEmpty()) {
            if (gearData_.isEmpty()) {
              gearData_ = other.gearData_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureGearDataIsMutable();
              gearData_.addAll(other.gearData_);
            }
            onChanged();
          }
        } else {
          if (!other.gearData_.isEmpty()) {
            if (gearDataBuilder_.isEmpty()) {
              gearDataBuilder_.dispose();
              gearDataBuilder_ = null;
              gearData_ = other.gearData_;
              bitField0_ = (bitField0_ & ~0x00000080);
              gearDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGearDataFieldBuilder() : null;
            } else {
              gearDataBuilder_.addAllMessages(other.gearData_);
            }
          }
        }
        if (diagnosticsDataBuilder_ == null) {
          if (!other.diagnosticsData_.isEmpty()) {
            if (diagnosticsData_.isEmpty()) {
              diagnosticsData_ = other.diagnosticsData_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureDiagnosticsDataIsMutable();
              diagnosticsData_.addAll(other.diagnosticsData_);
            }
            onChanged();
          }
        } else {
          if (!other.diagnosticsData_.isEmpty()) {
            if (diagnosticsDataBuilder_.isEmpty()) {
              diagnosticsDataBuilder_.dispose();
              diagnosticsDataBuilder_ = null;
              diagnosticsData_ = other.diagnosticsData_;
              bitField0_ = (bitField0_ & ~0x00000100);
              diagnosticsDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDiagnosticsDataFieldBuilder() : null;
            } else {
              diagnosticsDataBuilder_.addAllMessages(other.diagnosticsData_);
            }
          }
        }
        if (nightModeBuilder_ == null) {
          if (!other.nightMode_.isEmpty()) {
            if (nightMode_.isEmpty()) {
              nightMode_ = other.nightMode_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureNightModeIsMutable();
              nightMode_.addAll(other.nightMode_);
            }
            onChanged();
          }
        } else {
          if (!other.nightMode_.isEmpty()) {
            if (nightModeBuilder_.isEmpty()) {
              nightModeBuilder_.dispose();
              nightModeBuilder_ = null;
              nightMode_ = other.nightMode_;
              bitField0_ = (bitField0_ & ~0x00000200);
              nightModeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNightModeFieldBuilder() : null;
            } else {
              nightModeBuilder_.addAllMessages(other.nightMode_);
            }
          }
        }
        if (enviormentDataBuilder_ == null) {
          if (!other.enviormentData_.isEmpty()) {
            if (enviormentData_.isEmpty()) {
              enviormentData_ = other.enviormentData_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureEnviormentDataIsMutable();
              enviormentData_.addAll(other.enviormentData_);
            }
            onChanged();
          }
        } else {
          if (!other.enviormentData_.isEmpty()) {
            if (enviormentDataBuilder_.isEmpty()) {
              enviormentDataBuilder_.dispose();
              enviormentDataBuilder_ = null;
              enviormentData_ = other.enviormentData_;
              bitField0_ = (bitField0_ & ~0x00000400);
              enviormentDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEnviormentDataFieldBuilder() : null;
            } else {
              enviormentDataBuilder_.addAllMessages(other.enviormentData_);
            }
          }
        }
        if (hvacDataBuilder_ == null) {
          if (!other.hvacData_.isEmpty()) {
            if (hvacData_.isEmpty()) {
              hvacData_ = other.hvacData_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureHvacDataIsMutable();
              hvacData_.addAll(other.hvacData_);
            }
            onChanged();
          }
        } else {
          if (!other.hvacData_.isEmpty()) {
            if (hvacDataBuilder_.isEmpty()) {
              hvacDataBuilder_.dispose();
              hvacDataBuilder_ = null;
              hvacData_ = other.hvacData_;
              bitField0_ = (bitField0_ & ~0x00000800);
              hvacDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHvacDataFieldBuilder() : null;
            } else {
              hvacDataBuilder_.addAllMessages(other.hvacData_);
            }
          }
        }
        if (drivingStatusBuilder_ == null) {
          if (!other.drivingStatus_.isEmpty()) {
            if (drivingStatus_.isEmpty()) {
              drivingStatus_ = other.drivingStatus_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureDrivingStatusIsMutable();
              drivingStatus_.addAll(other.drivingStatus_);
            }
            onChanged();
          }
        } else {
          if (!other.drivingStatus_.isEmpty()) {
            if (drivingStatusBuilder_.isEmpty()) {
              drivingStatusBuilder_.dispose();
              drivingStatusBuilder_ = null;
              drivingStatus_ = other.drivingStatus_;
              bitField0_ = (bitField0_ & ~0x00001000);
              drivingStatusBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDrivingStatusFieldBuilder() : null;
            } else {
              drivingStatusBuilder_.addAllMessages(other.drivingStatus_);
            }
          }
        }
        if (deadReckoningBuilder_ == null) {
          if (!other.deadReckoning_.isEmpty()) {
            if (deadReckoning_.isEmpty()) {
              deadReckoning_ = other.deadReckoning_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureDeadReckoningIsMutable();
              deadReckoning_.addAll(other.deadReckoning_);
            }
            onChanged();
          }
        } else {
          if (!other.deadReckoning_.isEmpty()) {
            if (deadReckoningBuilder_.isEmpty()) {
              deadReckoningBuilder_.dispose();
              deadReckoningBuilder_ = null;
              deadReckoning_ = other.deadReckoning_;
              bitField0_ = (bitField0_ & ~0x00002000);
              deadReckoningBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDeadReckoningFieldBuilder() : null;
            } else {
              deadReckoningBuilder_.addAllMessages(other.deadReckoning_);
            }
          }
        }
        if (passengerDataBuilder_ == null) {
          if (!other.passengerData_.isEmpty()) {
            if (passengerData_.isEmpty()) {
              passengerData_ = other.passengerData_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensurePassengerDataIsMutable();
              passengerData_.addAll(other.passengerData_);
            }
            onChanged();
          }
        } else {
          if (!other.passengerData_.isEmpty()) {
            if (passengerDataBuilder_.isEmpty()) {
              passengerDataBuilder_.dispose();
              passengerDataBuilder_ = null;
              passengerData_ = other.passengerData_;
              bitField0_ = (bitField0_ & ~0x00004000);
              passengerDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPassengerDataFieldBuilder() : null;
            } else {
              passengerDataBuilder_.addAllMessages(other.passengerData_);
            }
          }
        }
        if (doorDataBuilder_ == null) {
          if (!other.doorData_.isEmpty()) {
            if (doorData_.isEmpty()) {
              doorData_ = other.doorData_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureDoorDataIsMutable();
              doorData_.addAll(other.doorData_);
            }
            onChanged();
          }
        } else {
          if (!other.doorData_.isEmpty()) {
            if (doorDataBuilder_.isEmpty()) {
              doorDataBuilder_.dispose();
              doorDataBuilder_ = null;
              doorData_ = other.doorData_;
              bitField0_ = (bitField0_ & ~0x00008000);
              doorDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDoorDataFieldBuilder() : null;
            } else {
              doorDataBuilder_.addAllMessages(other.doorData_);
            }
          }
        }
        if (lightDataBuilder_ == null) {
          if (!other.lightData_.isEmpty()) {
            if (lightData_.isEmpty()) {
              lightData_ = other.lightData_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureLightDataIsMutable();
              lightData_.addAll(other.lightData_);
            }
            onChanged();
          }
        } else {
          if (!other.lightData_.isEmpty()) {
            if (lightDataBuilder_.isEmpty()) {
              lightDataBuilder_.dispose();
              lightDataBuilder_ = null;
              lightData_ = other.lightData_;
              bitField0_ = (bitField0_ & ~0x00010000);
              lightDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLightDataFieldBuilder() : null;
            } else {
              lightDataBuilder_.addAllMessages(other.lightData_);
            }
          }
        }
        if (accelDataBuilder_ == null) {
          if (!other.accelData_.isEmpty()) {
            if (accelData_.isEmpty()) {
              accelData_ = other.accelData_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensureAccelDataIsMutable();
              accelData_.addAll(other.accelData_);
            }
            onChanged();
          }
        } else {
          if (!other.accelData_.isEmpty()) {
            if (accelDataBuilder_.isEmpty()) {
              accelDataBuilder_.dispose();
              accelDataBuilder_ = null;
              accelData_ = other.accelData_;
              bitField0_ = (bitField0_ & ~0x00020000);
              accelDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAccelDataFieldBuilder() : null;
            } else {
              accelDataBuilder_.addAllMessages(other.accelData_);
            }
          }
        }
        if (gyroDataBuilder_ == null) {
          if (!other.gyroData_.isEmpty()) {
            if (gyroData_.isEmpty()) {
              gyroData_ = other.gyroData_;
              bitField0_ = (bitField0_ & ~0x00040000);
            } else {
              ensureGyroDataIsMutable();
              gyroData_.addAll(other.gyroData_);
            }
            onChanged();
          }
        } else {
          if (!other.gyroData_.isEmpty()) {
            if (gyroDataBuilder_.isEmpty()) {
              gyroDataBuilder_.dispose();
              gyroDataBuilder_ = null;
              gyroData_ = other.gyroData_;
              bitField0_ = (bitField0_ & ~0x00040000);
              gyroDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGyroDataFieldBuilder() : null;
            } else {
              gyroDataBuilder_.addAllMessages(other.gyroData_);
            }
          }
        }
        if (gpsSatelliteDataBuilder_ == null) {
          if (!other.gpsSatelliteData_.isEmpty()) {
            if (gpsSatelliteData_.isEmpty()) {
              gpsSatelliteData_ = other.gpsSatelliteData_;
              bitField0_ = (bitField0_ & ~0x00080000);
            } else {
              ensureGpsSatelliteDataIsMutable();
              gpsSatelliteData_.addAll(other.gpsSatelliteData_);
            }
            onChanged();
          }
        } else {
          if (!other.gpsSatelliteData_.isEmpty()) {
            if (gpsSatelliteDataBuilder_.isEmpty()) {
              gpsSatelliteDataBuilder_.dispose();
              gpsSatelliteDataBuilder_ = null;
              gpsSatelliteData_ = other.gpsSatelliteData_;
              bitField0_ = (bitField0_ & ~0x00080000);
              gpsSatelliteDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGpsSatelliteDataFieldBuilder() : null;
            } else {
              gpsSatelliteDataBuilder_.addAllMessages(other.gpsSatelliteData_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getLocationDataCount(); i++) {
          if (!getLocationData(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getCompassDataCount(); i++) {
          if (!getCompassData(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getSpeedDataCount(); i++) {
          if (!getSpeedData(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getRpmCount(); i++) {
          if (!getRpm(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getFuelDataCount(); i++) {
          if (!getFuelData(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getParkingbrakeDataCount(); i++) {
          if (!getParkingbrakeData(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getGearDataCount(); i++) {
          if (!getGearData(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getDiagnosticsDataCount(); i++) {
          if (!getDiagnosticsData(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getNightModeCount(); i++) {
          if (!getNightMode(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getDrivingStatusCount(); i++) {
          if (!getDrivingStatus(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getDoorDataCount(); i++) {
          if (!getDoorData(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData> locationData_ =
        java.util.Collections.emptyList();
      private void ensureLocationDataIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          locationData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData>(locationData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationDataOrBuilder> locationDataBuilder_;

      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData> getLocationDataList() {
        if (locationDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(locationData_);
        } else {
          return locationDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public int getLocationDataCount() {
        if (locationDataBuilder_ == null) {
          return locationData_.size();
        } else {
          return locationDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData getLocationData(int index) {
        if (locationDataBuilder_ == null) {
          return locationData_.get(index);
        } else {
          return locationDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public Builder setLocationData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData value) {
        if (locationDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationDataIsMutable();
          locationData_.set(index, value);
          onChanged();
        } else {
          locationDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public Builder setLocationData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.Builder builderForValue) {
        if (locationDataBuilder_ == null) {
          ensureLocationDataIsMutable();
          locationData_.set(index, builderForValue.build());
          onChanged();
        } else {
          locationDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public Builder addLocationData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData value) {
        if (locationDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationDataIsMutable();
          locationData_.add(value);
          onChanged();
        } else {
          locationDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public Builder addLocationData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData value) {
        if (locationDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationDataIsMutable();
          locationData_.add(index, value);
          onChanged();
        } else {
          locationDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public Builder addLocationData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.Builder builderForValue) {
        if (locationDataBuilder_ == null) {
          ensureLocationDataIsMutable();
          locationData_.add(builderForValue.build());
          onChanged();
        } else {
          locationDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public Builder addLocationData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.Builder builderForValue) {
        if (locationDataBuilder_ == null) {
          ensureLocationDataIsMutable();
          locationData_.add(index, builderForValue.build());
          onChanged();
        } else {
          locationDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public Builder addAllLocationData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData> values) {
        if (locationDataBuilder_ == null) {
          ensureLocationDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, locationData_);
          onChanged();
        } else {
          locationDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public Builder clearLocationData() {
        if (locationDataBuilder_ == null) {
          locationData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          locationDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public Builder removeLocationData(int index) {
        if (locationDataBuilder_ == null) {
          ensureLocationDataIsMutable();
          locationData_.remove(index);
          onChanged();
        } else {
          locationDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.Builder getLocationDataBuilder(
          int index) {
        return getLocationDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationDataOrBuilder getLocationDataOrBuilder(
          int index) {
        if (locationDataBuilder_ == null) {
          return locationData_.get(index);  } else {
          return locationDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationDataOrBuilder> 
           getLocationDataOrBuilderList() {
        if (locationDataBuilder_ != null) {
          return locationDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(locationData_);
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.Builder addLocationDataBuilder() {
        return getLocationDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.getDefaultInstance());
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.Builder addLocationDataBuilder(
          int index) {
        return getLocationDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.getDefaultInstance());
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LocationData location_data = 1;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.Builder> 
           getLocationDataBuilderList() {
        return getLocationDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationDataOrBuilder> 
          getLocationDataFieldBuilder() {
        if (locationDataBuilder_ == null) {
          locationDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LocationDataOrBuilder>(
                  locationData_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          locationData_ = null;
        }
        return locationDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData> compassData_ =
        java.util.Collections.emptyList();
      private void ensureCompassDataIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          compassData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData>(compassData_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassDataOrBuilder> compassDataBuilder_;

      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData> getCompassDataList() {
        if (compassDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(compassData_);
        } else {
          return compassDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public int getCompassDataCount() {
        if (compassDataBuilder_ == null) {
          return compassData_.size();
        } else {
          return compassDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData getCompassData(int index) {
        if (compassDataBuilder_ == null) {
          return compassData_.get(index);
        } else {
          return compassDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public Builder setCompassData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData value) {
        if (compassDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompassDataIsMutable();
          compassData_.set(index, value);
          onChanged();
        } else {
          compassDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public Builder setCompassData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.Builder builderForValue) {
        if (compassDataBuilder_ == null) {
          ensureCompassDataIsMutable();
          compassData_.set(index, builderForValue.build());
          onChanged();
        } else {
          compassDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public Builder addCompassData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData value) {
        if (compassDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompassDataIsMutable();
          compassData_.add(value);
          onChanged();
        } else {
          compassDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public Builder addCompassData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData value) {
        if (compassDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCompassDataIsMutable();
          compassData_.add(index, value);
          onChanged();
        } else {
          compassDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public Builder addCompassData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.Builder builderForValue) {
        if (compassDataBuilder_ == null) {
          ensureCompassDataIsMutable();
          compassData_.add(builderForValue.build());
          onChanged();
        } else {
          compassDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public Builder addCompassData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.Builder builderForValue) {
        if (compassDataBuilder_ == null) {
          ensureCompassDataIsMutable();
          compassData_.add(index, builderForValue.build());
          onChanged();
        } else {
          compassDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public Builder addAllCompassData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData> values) {
        if (compassDataBuilder_ == null) {
          ensureCompassDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, compassData_);
          onChanged();
        } else {
          compassDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public Builder clearCompassData() {
        if (compassDataBuilder_ == null) {
          compassData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          compassDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public Builder removeCompassData(int index) {
        if (compassDataBuilder_ == null) {
          ensureCompassDataIsMutable();
          compassData_.remove(index);
          onChanged();
        } else {
          compassDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.Builder getCompassDataBuilder(
          int index) {
        return getCompassDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassDataOrBuilder getCompassDataOrBuilder(
          int index) {
        if (compassDataBuilder_ == null) {
          return compassData_.get(index);  } else {
          return compassDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassDataOrBuilder> 
           getCompassDataOrBuilderList() {
        if (compassDataBuilder_ != null) {
          return compassDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(compassData_);
        }
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.Builder addCompassDataBuilder() {
        return getCompassDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.getDefaultInstance());
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.Builder addCompassDataBuilder(
          int index) {
        return getCompassDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.getDefaultInstance());
      }
      /**
       * <pre>
       * Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.CompassData compass_data = 2;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.Builder> 
           getCompassDataBuilderList() {
        return getCompassDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassDataOrBuilder> 
          getCompassDataFieldBuilder() {
        if (compassDataBuilder_ == null) {
          compassDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.CompassDataOrBuilder>(
                  compassData_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          compassData_ = null;
        }
        return compassDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData> speedData_ =
        java.util.Collections.emptyList();
      private void ensureSpeedDataIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          speedData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData>(speedData_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedDataOrBuilder> speedDataBuilder_;

      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData> getSpeedDataList() {
        if (speedDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(speedData_);
        } else {
          return speedDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public int getSpeedDataCount() {
        if (speedDataBuilder_ == null) {
          return speedData_.size();
        } else {
          return speedDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData getSpeedData(int index) {
        if (speedDataBuilder_ == null) {
          return speedData_.get(index);
        } else {
          return speedDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public Builder setSpeedData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData value) {
        if (speedDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedDataIsMutable();
          speedData_.set(index, value);
          onChanged();
        } else {
          speedDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public Builder setSpeedData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.Builder builderForValue) {
        if (speedDataBuilder_ == null) {
          ensureSpeedDataIsMutable();
          speedData_.set(index, builderForValue.build());
          onChanged();
        } else {
          speedDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public Builder addSpeedData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData value) {
        if (speedDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedDataIsMutable();
          speedData_.add(value);
          onChanged();
        } else {
          speedDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public Builder addSpeedData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData value) {
        if (speedDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedDataIsMutable();
          speedData_.add(index, value);
          onChanged();
        } else {
          speedDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public Builder addSpeedData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.Builder builderForValue) {
        if (speedDataBuilder_ == null) {
          ensureSpeedDataIsMutable();
          speedData_.add(builderForValue.build());
          onChanged();
        } else {
          speedDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public Builder addSpeedData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.Builder builderForValue) {
        if (speedDataBuilder_ == null) {
          ensureSpeedDataIsMutable();
          speedData_.add(index, builderForValue.build());
          onChanged();
        } else {
          speedDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public Builder addAllSpeedData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData> values) {
        if (speedDataBuilder_ == null) {
          ensureSpeedDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, speedData_);
          onChanged();
        } else {
          speedDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public Builder clearSpeedData() {
        if (speedDataBuilder_ == null) {
          speedData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          speedDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public Builder removeSpeedData(int index) {
        if (speedDataBuilder_ == null) {
          ensureSpeedDataIsMutable();
          speedData_.remove(index);
          onChanged();
        } else {
          speedDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.Builder getSpeedDataBuilder(
          int index) {
        return getSpeedDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedDataOrBuilder getSpeedDataOrBuilder(
          int index) {
        if (speedDataBuilder_ == null) {
          return speedData_.get(index);  } else {
          return speedDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedDataOrBuilder> 
           getSpeedDataOrBuilderList() {
        if (speedDataBuilder_ != null) {
          return speedDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(speedData_);
        }
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.Builder addSpeedDataBuilder() {
        return getSpeedDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.getDefaultInstance());
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.Builder addSpeedDataBuilder(
          int index) {
        return getSpeedDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.getDefaultInstance());
      }
      /**
       * <pre>
       * Working - Aka data is received, but has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.SpeedData speed_data = 3;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.Builder> 
           getSpeedDataBuilderList() {
        return getSpeedDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedDataOrBuilder> 
          getSpeedDataFieldBuilder() {
        if (speedDataBuilder_ == null) {
          speedDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.SpeedDataOrBuilder>(
                  speedData_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          speedData_ = null;
        }
        return speedDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData> rpm_ =
        java.util.Collections.emptyList();
      private void ensureRpmIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          rpm_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData>(rpm_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmDataOrBuilder> rpmBuilder_;

      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData> getRpmList() {
        if (rpmBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rpm_);
        } else {
          return rpmBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public int getRpmCount() {
        if (rpmBuilder_ == null) {
          return rpm_.size();
        } else {
          return rpmBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData getRpm(int index) {
        if (rpmBuilder_ == null) {
          return rpm_.get(index);
        } else {
          return rpmBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public Builder setRpm(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData value) {
        if (rpmBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRpmIsMutable();
          rpm_.set(index, value);
          onChanged();
        } else {
          rpmBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public Builder setRpm(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.Builder builderForValue) {
        if (rpmBuilder_ == null) {
          ensureRpmIsMutable();
          rpm_.set(index, builderForValue.build());
          onChanged();
        } else {
          rpmBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public Builder addRpm(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData value) {
        if (rpmBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRpmIsMutable();
          rpm_.add(value);
          onChanged();
        } else {
          rpmBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public Builder addRpm(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData value) {
        if (rpmBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRpmIsMutable();
          rpm_.add(index, value);
          onChanged();
        } else {
          rpmBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public Builder addRpm(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.Builder builderForValue) {
        if (rpmBuilder_ == null) {
          ensureRpmIsMutable();
          rpm_.add(builderForValue.build());
          onChanged();
        } else {
          rpmBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public Builder addRpm(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.Builder builderForValue) {
        if (rpmBuilder_ == null) {
          ensureRpmIsMutable();
          rpm_.add(index, builderForValue.build());
          onChanged();
        } else {
          rpmBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public Builder addAllRpm(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData> values) {
        if (rpmBuilder_ == null) {
          ensureRpmIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rpm_);
          onChanged();
        } else {
          rpmBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public Builder clearRpm() {
        if (rpmBuilder_ == null) {
          rpm_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rpmBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public Builder removeRpm(int index) {
        if (rpmBuilder_ == null) {
          ensureRpmIsMutable();
          rpm_.remove(index);
          onChanged();
        } else {
          rpmBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.Builder getRpmBuilder(
          int index) {
        return getRpmFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmDataOrBuilder getRpmOrBuilder(
          int index) {
        if (rpmBuilder_ == null) {
          return rpm_.get(index);  } else {
          return rpmBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmDataOrBuilder> 
           getRpmOrBuilderList() {
        if (rpmBuilder_ != null) {
          return rpmBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rpm_);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.Builder addRpmBuilder() {
        return getRpmFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.Builder addRpmBuilder(
          int index) {
        return getRpmFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.RpmData rpm = 4;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.Builder> 
           getRpmBuilderList() {
        return getRpmFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmDataOrBuilder> 
          getRpmFieldBuilder() {
        if (rpmBuilder_ == null) {
          rpmBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.RpmDataOrBuilder>(
                  rpm_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          rpm_ = null;
        }
        return rpmBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData> odometerData_ =
        java.util.Collections.emptyList();
      private void ensureOdometerDataIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          odometerData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData>(odometerData_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerDataOrBuilder> odometerDataBuilder_;

      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData> getOdometerDataList() {
        if (odometerDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(odometerData_);
        } else {
          return odometerDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public int getOdometerDataCount() {
        if (odometerDataBuilder_ == null) {
          return odometerData_.size();
        } else {
          return odometerDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData getOdometerData(int index) {
        if (odometerDataBuilder_ == null) {
          return odometerData_.get(index);
        } else {
          return odometerDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public Builder setOdometerData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData value) {
        if (odometerDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOdometerDataIsMutable();
          odometerData_.set(index, value);
          onChanged();
        } else {
          odometerDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public Builder setOdometerData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.Builder builderForValue) {
        if (odometerDataBuilder_ == null) {
          ensureOdometerDataIsMutable();
          odometerData_.set(index, builderForValue.build());
          onChanged();
        } else {
          odometerDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public Builder addOdometerData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData value) {
        if (odometerDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOdometerDataIsMutable();
          odometerData_.add(value);
          onChanged();
        } else {
          odometerDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public Builder addOdometerData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData value) {
        if (odometerDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOdometerDataIsMutable();
          odometerData_.add(index, value);
          onChanged();
        } else {
          odometerDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public Builder addOdometerData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.Builder builderForValue) {
        if (odometerDataBuilder_ == null) {
          ensureOdometerDataIsMutable();
          odometerData_.add(builderForValue.build());
          onChanged();
        } else {
          odometerDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public Builder addOdometerData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.Builder builderForValue) {
        if (odometerDataBuilder_ == null) {
          ensureOdometerDataIsMutable();
          odometerData_.add(index, builderForValue.build());
          onChanged();
        } else {
          odometerDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public Builder addAllOdometerData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData> values) {
        if (odometerDataBuilder_ == null) {
          ensureOdometerDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, odometerData_);
          onChanged();
        } else {
          odometerDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public Builder clearOdometerData() {
        if (odometerDataBuilder_ == null) {
          odometerData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          odometerDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public Builder removeOdometerData(int index) {
        if (odometerDataBuilder_ == null) {
          ensureOdometerDataIsMutable();
          odometerData_.remove(index);
          onChanged();
        } else {
          odometerDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.Builder getOdometerDataBuilder(
          int index) {
        return getOdometerDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerDataOrBuilder getOdometerDataOrBuilder(
          int index) {
        if (odometerDataBuilder_ == null) {
          return odometerData_.get(index);  } else {
          return odometerDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerDataOrBuilder> 
           getOdometerDataOrBuilderList() {
        if (odometerDataBuilder_ != null) {
          return odometerDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(odometerData_);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.Builder addOdometerDataBuilder() {
        return getOdometerDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.Builder addOdometerDataBuilder(
          int index) {
        return getOdometerDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.OdometerData odometer_data = 5;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.Builder> 
           getOdometerDataBuilderList() {
        return getOdometerDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerDataOrBuilder> 
          getOdometerDataFieldBuilder() {
        if (odometerDataBuilder_ == null) {
          odometerDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.OdometerDataOrBuilder>(
                  odometerData_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          odometerData_ = null;
        }
        return odometerDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData> fuelData_ =
        java.util.Collections.emptyList();
      private void ensureFuelDataIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          fuelData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData>(fuelData_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelDataOrBuilder> fuelDataBuilder_;

      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData> getFuelDataList() {
        if (fuelDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fuelData_);
        } else {
          return fuelDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public int getFuelDataCount() {
        if (fuelDataBuilder_ == null) {
          return fuelData_.size();
        } else {
          return fuelDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData getFuelData(int index) {
        if (fuelDataBuilder_ == null) {
          return fuelData_.get(index);
        } else {
          return fuelDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public Builder setFuelData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData value) {
        if (fuelDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFuelDataIsMutable();
          fuelData_.set(index, value);
          onChanged();
        } else {
          fuelDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public Builder setFuelData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.Builder builderForValue) {
        if (fuelDataBuilder_ == null) {
          ensureFuelDataIsMutable();
          fuelData_.set(index, builderForValue.build());
          onChanged();
        } else {
          fuelDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public Builder addFuelData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData value) {
        if (fuelDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFuelDataIsMutable();
          fuelData_.add(value);
          onChanged();
        } else {
          fuelDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public Builder addFuelData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData value) {
        if (fuelDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFuelDataIsMutable();
          fuelData_.add(index, value);
          onChanged();
        } else {
          fuelDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public Builder addFuelData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.Builder builderForValue) {
        if (fuelDataBuilder_ == null) {
          ensureFuelDataIsMutable();
          fuelData_.add(builderForValue.build());
          onChanged();
        } else {
          fuelDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public Builder addFuelData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.Builder builderForValue) {
        if (fuelDataBuilder_ == null) {
          ensureFuelDataIsMutable();
          fuelData_.add(index, builderForValue.build());
          onChanged();
        } else {
          fuelDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public Builder addAllFuelData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData> values) {
        if (fuelDataBuilder_ == null) {
          ensureFuelDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fuelData_);
          onChanged();
        } else {
          fuelDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public Builder clearFuelData() {
        if (fuelDataBuilder_ == null) {
          fuelData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          fuelDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public Builder removeFuelData(int index) {
        if (fuelDataBuilder_ == null) {
          ensureFuelDataIsMutable();
          fuelData_.remove(index);
          onChanged();
        } else {
          fuelDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.Builder getFuelDataBuilder(
          int index) {
        return getFuelDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelDataOrBuilder getFuelDataOrBuilder(
          int index) {
        if (fuelDataBuilder_ == null) {
          return fuelData_.get(index);  } else {
          return fuelDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelDataOrBuilder> 
           getFuelDataOrBuilderList() {
        if (fuelDataBuilder_ != null) {
          return fuelDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fuelData_);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.Builder addFuelDataBuilder() {
        return getFuelDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.Builder addFuelDataBuilder(
          int index) {
        return getFuelDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.FuelData fuel_data = 6;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.Builder> 
           getFuelDataBuilderList() {
        return getFuelDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelDataOrBuilder> 
          getFuelDataFieldBuilder() {
        if (fuelDataBuilder_ == null) {
          fuelDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.FuelDataOrBuilder>(
                  fuelData_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          fuelData_ = null;
        }
        return fuelDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData> parkingbrakeData_ =
        java.util.Collections.emptyList();
      private void ensureParkingbrakeDataIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          parkingbrakeData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData>(parkingbrakeData_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeDataOrBuilder> parkingbrakeDataBuilder_;

      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData> getParkingbrakeDataList() {
        if (parkingbrakeDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parkingbrakeData_);
        } else {
          return parkingbrakeDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public int getParkingbrakeDataCount() {
        if (parkingbrakeDataBuilder_ == null) {
          return parkingbrakeData_.size();
        } else {
          return parkingbrakeDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData getParkingbrakeData(int index) {
        if (parkingbrakeDataBuilder_ == null) {
          return parkingbrakeData_.get(index);
        } else {
          return parkingbrakeDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public Builder setParkingbrakeData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData value) {
        if (parkingbrakeDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParkingbrakeDataIsMutable();
          parkingbrakeData_.set(index, value);
          onChanged();
        } else {
          parkingbrakeDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public Builder setParkingbrakeData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.Builder builderForValue) {
        if (parkingbrakeDataBuilder_ == null) {
          ensureParkingbrakeDataIsMutable();
          parkingbrakeData_.set(index, builderForValue.build());
          onChanged();
        } else {
          parkingbrakeDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public Builder addParkingbrakeData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData value) {
        if (parkingbrakeDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParkingbrakeDataIsMutable();
          parkingbrakeData_.add(value);
          onChanged();
        } else {
          parkingbrakeDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public Builder addParkingbrakeData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData value) {
        if (parkingbrakeDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParkingbrakeDataIsMutable();
          parkingbrakeData_.add(index, value);
          onChanged();
        } else {
          parkingbrakeDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public Builder addParkingbrakeData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.Builder builderForValue) {
        if (parkingbrakeDataBuilder_ == null) {
          ensureParkingbrakeDataIsMutable();
          parkingbrakeData_.add(builderForValue.build());
          onChanged();
        } else {
          parkingbrakeDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public Builder addParkingbrakeData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.Builder builderForValue) {
        if (parkingbrakeDataBuilder_ == null) {
          ensureParkingbrakeDataIsMutable();
          parkingbrakeData_.add(index, builderForValue.build());
          onChanged();
        } else {
          parkingbrakeDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public Builder addAllParkingbrakeData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData> values) {
        if (parkingbrakeDataBuilder_ == null) {
          ensureParkingbrakeDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, parkingbrakeData_);
          onChanged();
        } else {
          parkingbrakeDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public Builder clearParkingbrakeData() {
        if (parkingbrakeDataBuilder_ == null) {
          parkingbrakeData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          parkingbrakeDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public Builder removeParkingbrakeData(int index) {
        if (parkingbrakeDataBuilder_ == null) {
          ensureParkingbrakeDataIsMutable();
          parkingbrakeData_.remove(index);
          onChanged();
        } else {
          parkingbrakeDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.Builder getParkingbrakeDataBuilder(
          int index) {
        return getParkingbrakeDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeDataOrBuilder getParkingbrakeDataOrBuilder(
          int index) {
        if (parkingbrakeDataBuilder_ == null) {
          return parkingbrakeData_.get(index);  } else {
          return parkingbrakeDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeDataOrBuilder> 
           getParkingbrakeDataOrBuilderList() {
        if (parkingbrakeDataBuilder_ != null) {
          return parkingbrakeDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parkingbrakeData_);
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.Builder addParkingbrakeDataBuilder() {
        return getParkingbrakeDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.getDefaultInstance());
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.Builder addParkingbrakeDataBuilder(
          int index) {
        return getParkingbrakeDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.getDefaultInstance());
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.ParkingBrakeData parkingbrake_data = 7;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.Builder> 
           getParkingbrakeDataBuilderList() {
        return getParkingbrakeDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeDataOrBuilder> 
          getParkingbrakeDataFieldBuilder() {
        if (parkingbrakeDataBuilder_ == null) {
          parkingbrakeDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.ParkingBrakeDataOrBuilder>(
                  parkingbrakeData_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          parkingbrakeData_ = null;
        }
        return parkingbrakeDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData> gearData_ =
        java.util.Collections.emptyList();
      private void ensureGearDataIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          gearData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData>(gearData_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearDataOrBuilder> gearDataBuilder_;

      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData> getGearDataList() {
        if (gearDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gearData_);
        } else {
          return gearDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public int getGearDataCount() {
        if (gearDataBuilder_ == null) {
          return gearData_.size();
        } else {
          return gearDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData getGearData(int index) {
        if (gearDataBuilder_ == null) {
          return gearData_.get(index);
        } else {
          return gearDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public Builder setGearData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData value) {
        if (gearDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGearDataIsMutable();
          gearData_.set(index, value);
          onChanged();
        } else {
          gearDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public Builder setGearData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.Builder builderForValue) {
        if (gearDataBuilder_ == null) {
          ensureGearDataIsMutable();
          gearData_.set(index, builderForValue.build());
          onChanged();
        } else {
          gearDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public Builder addGearData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData value) {
        if (gearDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGearDataIsMutable();
          gearData_.add(value);
          onChanged();
        } else {
          gearDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public Builder addGearData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData value) {
        if (gearDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGearDataIsMutable();
          gearData_.add(index, value);
          onChanged();
        } else {
          gearDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public Builder addGearData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.Builder builderForValue) {
        if (gearDataBuilder_ == null) {
          ensureGearDataIsMutable();
          gearData_.add(builderForValue.build());
          onChanged();
        } else {
          gearDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public Builder addGearData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.Builder builderForValue) {
        if (gearDataBuilder_ == null) {
          ensureGearDataIsMutable();
          gearData_.add(index, builderForValue.build());
          onChanged();
        } else {
          gearDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public Builder addAllGearData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData> values) {
        if (gearDataBuilder_ == null) {
          ensureGearDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, gearData_);
          onChanged();
        } else {
          gearDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public Builder clearGearData() {
        if (gearDataBuilder_ == null) {
          gearData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          gearDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public Builder removeGearData(int index) {
        if (gearDataBuilder_ == null) {
          ensureGearDataIsMutable();
          gearData_.remove(index);
          onChanged();
        } else {
          gearDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.Builder getGearDataBuilder(
          int index) {
        return getGearDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearDataOrBuilder getGearDataOrBuilder(
          int index) {
        if (gearDataBuilder_ == null) {
          return gearData_.get(index);  } else {
          return gearDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearDataOrBuilder> 
           getGearDataOrBuilderList() {
        if (gearDataBuilder_ != null) {
          return gearDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gearData_);
        }
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.Builder addGearDataBuilder() {
        return getGearDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.getDefaultInstance());
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.Builder addGearDataBuilder(
          int index) {
        return getGearDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.getDefaultInstance());
      }
      /**
       * <pre>
       *Working but need to do the enum definition, and has no effect
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GearData gear_data = 8;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.Builder> 
           getGearDataBuilderList() {
        return getGearDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearDataOrBuilder> 
          getGearDataFieldBuilder() {
        if (gearDataBuilder_ == null) {
          gearDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GearDataOrBuilder>(
                  gearData_,
                  ((bitField0_ & 0x00000080) != 0),
                  getParentForChildren(),
                  isClean());
          gearData_ = null;
        }
        return gearDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData> diagnosticsData_ =
        java.util.Collections.emptyList();
      private void ensureDiagnosticsDataIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          diagnosticsData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData>(diagnosticsData_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsDataOrBuilder> diagnosticsDataBuilder_;

      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData> getDiagnosticsDataList() {
        if (diagnosticsDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(diagnosticsData_);
        } else {
          return diagnosticsDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public int getDiagnosticsDataCount() {
        if (diagnosticsDataBuilder_ == null) {
          return diagnosticsData_.size();
        } else {
          return diagnosticsDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData getDiagnosticsData(int index) {
        if (diagnosticsDataBuilder_ == null) {
          return diagnosticsData_.get(index);
        } else {
          return diagnosticsDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public Builder setDiagnosticsData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData value) {
        if (diagnosticsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiagnosticsDataIsMutable();
          diagnosticsData_.set(index, value);
          onChanged();
        } else {
          diagnosticsDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public Builder setDiagnosticsData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.Builder builderForValue) {
        if (diagnosticsDataBuilder_ == null) {
          ensureDiagnosticsDataIsMutable();
          diagnosticsData_.set(index, builderForValue.build());
          onChanged();
        } else {
          diagnosticsDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public Builder addDiagnosticsData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData value) {
        if (diagnosticsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiagnosticsDataIsMutable();
          diagnosticsData_.add(value);
          onChanged();
        } else {
          diagnosticsDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public Builder addDiagnosticsData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData value) {
        if (diagnosticsDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiagnosticsDataIsMutable();
          diagnosticsData_.add(index, value);
          onChanged();
        } else {
          diagnosticsDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public Builder addDiagnosticsData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.Builder builderForValue) {
        if (diagnosticsDataBuilder_ == null) {
          ensureDiagnosticsDataIsMutable();
          diagnosticsData_.add(builderForValue.build());
          onChanged();
        } else {
          diagnosticsDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public Builder addDiagnosticsData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.Builder builderForValue) {
        if (diagnosticsDataBuilder_ == null) {
          ensureDiagnosticsDataIsMutable();
          diagnosticsData_.add(index, builderForValue.build());
          onChanged();
        } else {
          diagnosticsDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public Builder addAllDiagnosticsData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData> values) {
        if (diagnosticsDataBuilder_ == null) {
          ensureDiagnosticsDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, diagnosticsData_);
          onChanged();
        } else {
          diagnosticsDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public Builder clearDiagnosticsData() {
        if (diagnosticsDataBuilder_ == null) {
          diagnosticsData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          diagnosticsDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public Builder removeDiagnosticsData(int index) {
        if (diagnosticsDataBuilder_ == null) {
          ensureDiagnosticsDataIsMutable();
          diagnosticsData_.remove(index);
          onChanged();
        } else {
          diagnosticsDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.Builder getDiagnosticsDataBuilder(
          int index) {
        return getDiagnosticsDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsDataOrBuilder getDiagnosticsDataOrBuilder(
          int index) {
        if (diagnosticsDataBuilder_ == null) {
          return diagnosticsData_.get(index);  } else {
          return diagnosticsDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsDataOrBuilder> 
           getDiagnosticsDataOrBuilderList() {
        if (diagnosticsDataBuilder_ != null) {
          return diagnosticsDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(diagnosticsData_);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.Builder addDiagnosticsDataBuilder() {
        return getDiagnosticsDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.Builder addDiagnosticsDataBuilder(
          int index) {
        return getDiagnosticsDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DiagnosticsData diagnostics_data = 9;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.Builder> 
           getDiagnosticsDataBuilderList() {
        return getDiagnosticsDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsDataOrBuilder> 
          getDiagnosticsDataFieldBuilder() {
        if (diagnosticsDataBuilder_ == null) {
          diagnosticsDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DiagnosticsDataOrBuilder>(
                  diagnosticsData_,
                  ((bitField0_ & 0x00000100) != 0),
                  getParentForChildren(),
                  isClean());
          diagnosticsData_ = null;
        }
        return diagnosticsDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData> nightMode_ =
        java.util.Collections.emptyList();
      private void ensureNightModeIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          nightMode_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData>(nightMode_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightDataOrBuilder> nightModeBuilder_;

      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData> getNightModeList() {
        if (nightModeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nightMode_);
        } else {
          return nightModeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public int getNightModeCount() {
        if (nightModeBuilder_ == null) {
          return nightMode_.size();
        } else {
          return nightModeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData getNightMode(int index) {
        if (nightModeBuilder_ == null) {
          return nightMode_.get(index);
        } else {
          return nightModeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public Builder setNightMode(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData value) {
        if (nightModeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNightModeIsMutable();
          nightMode_.set(index, value);
          onChanged();
        } else {
          nightModeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public Builder setNightMode(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.Builder builderForValue) {
        if (nightModeBuilder_ == null) {
          ensureNightModeIsMutable();
          nightMode_.set(index, builderForValue.build());
          onChanged();
        } else {
          nightModeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public Builder addNightMode(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData value) {
        if (nightModeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNightModeIsMutable();
          nightMode_.add(value);
          onChanged();
        } else {
          nightModeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public Builder addNightMode(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData value) {
        if (nightModeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNightModeIsMutable();
          nightMode_.add(index, value);
          onChanged();
        } else {
          nightModeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public Builder addNightMode(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.Builder builderForValue) {
        if (nightModeBuilder_ == null) {
          ensureNightModeIsMutable();
          nightMode_.add(builderForValue.build());
          onChanged();
        } else {
          nightModeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public Builder addNightMode(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.Builder builderForValue) {
        if (nightModeBuilder_ == null) {
          ensureNightModeIsMutable();
          nightMode_.add(index, builderForValue.build());
          onChanged();
        } else {
          nightModeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public Builder addAllNightMode(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData> values) {
        if (nightModeBuilder_ == null) {
          ensureNightModeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nightMode_);
          onChanged();
        } else {
          nightModeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public Builder clearNightMode() {
        if (nightModeBuilder_ == null) {
          nightMode_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          nightModeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public Builder removeNightMode(int index) {
        if (nightModeBuilder_ == null) {
          ensureNightModeIsMutable();
          nightMode_.remove(index);
          onChanged();
        } else {
          nightModeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.Builder getNightModeBuilder(
          int index) {
        return getNightModeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightDataOrBuilder getNightModeOrBuilder(
          int index) {
        if (nightModeBuilder_ == null) {
          return nightMode_.get(index);  } else {
          return nightModeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightDataOrBuilder> 
           getNightModeOrBuilderList() {
        if (nightModeBuilder_ != null) {
          return nightModeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nightMode_);
        }
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.Builder addNightModeBuilder() {
        return getNightModeFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.getDefaultInstance());
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.Builder addNightModeBuilder(
          int index) {
        return getNightModeFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.getDefaultInstance());
      }
      /**
       * <pre>
       * Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.NightData night_mode = 10;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.Builder> 
           getNightModeBuilderList() {
        return getNightModeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightDataOrBuilder> 
          getNightModeFieldBuilder() {
        if (nightModeBuilder_ == null) {
          nightModeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.NightDataOrBuilder>(
                  nightMode_,
                  ((bitField0_ & 0x00000200) != 0),
                  getParentForChildren(),
                  isClean());
          nightMode_ = null;
        }
        return nightModeBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData> enviormentData_ =
        java.util.Collections.emptyList();
      private void ensureEnviormentDataIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          enviormentData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData>(enviormentData_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentDataOrBuilder> enviormentDataBuilder_;

      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData> getEnviormentDataList() {
        if (enviormentDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(enviormentData_);
        } else {
          return enviormentDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public int getEnviormentDataCount() {
        if (enviormentDataBuilder_ == null) {
          return enviormentData_.size();
        } else {
          return enviormentDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData getEnviormentData(int index) {
        if (enviormentDataBuilder_ == null) {
          return enviormentData_.get(index);
        } else {
          return enviormentDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public Builder setEnviormentData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData value) {
        if (enviormentDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnviormentDataIsMutable();
          enviormentData_.set(index, value);
          onChanged();
        } else {
          enviormentDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public Builder setEnviormentData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.Builder builderForValue) {
        if (enviormentDataBuilder_ == null) {
          ensureEnviormentDataIsMutable();
          enviormentData_.set(index, builderForValue.build());
          onChanged();
        } else {
          enviormentDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public Builder addEnviormentData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData value) {
        if (enviormentDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnviormentDataIsMutable();
          enviormentData_.add(value);
          onChanged();
        } else {
          enviormentDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public Builder addEnviormentData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData value) {
        if (enviormentDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEnviormentDataIsMutable();
          enviormentData_.add(index, value);
          onChanged();
        } else {
          enviormentDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public Builder addEnviormentData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.Builder builderForValue) {
        if (enviormentDataBuilder_ == null) {
          ensureEnviormentDataIsMutable();
          enviormentData_.add(builderForValue.build());
          onChanged();
        } else {
          enviormentDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public Builder addEnviormentData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.Builder builderForValue) {
        if (enviormentDataBuilder_ == null) {
          ensureEnviormentDataIsMutable();
          enviormentData_.add(index, builderForValue.build());
          onChanged();
        } else {
          enviormentDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public Builder addAllEnviormentData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData> values) {
        if (enviormentDataBuilder_ == null) {
          ensureEnviormentDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, enviormentData_);
          onChanged();
        } else {
          enviormentDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public Builder clearEnviormentData() {
        if (enviormentDataBuilder_ == null) {
          enviormentData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          enviormentDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public Builder removeEnviormentData(int index) {
        if (enviormentDataBuilder_ == null) {
          ensureEnviormentDataIsMutable();
          enviormentData_.remove(index);
          onChanged();
        } else {
          enviormentDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.Builder getEnviormentDataBuilder(
          int index) {
        return getEnviormentDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentDataOrBuilder getEnviormentDataOrBuilder(
          int index) {
        if (enviormentDataBuilder_ == null) {
          return enviormentData_.get(index);  } else {
          return enviormentDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentDataOrBuilder> 
           getEnviormentDataOrBuilderList() {
        if (enviormentDataBuilder_ != null) {
          return enviormentDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(enviormentData_);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.Builder addEnviormentDataBuilder() {
        return getEnviormentDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.Builder addEnviormentDataBuilder(
          int index) {
        return getEnviormentDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.EnvironmentData enviorment_data = 11;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.Builder> 
           getEnviormentDataBuilderList() {
        return getEnviormentDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentDataOrBuilder> 
          getEnviormentDataFieldBuilder() {
        if (enviormentDataBuilder_ == null) {
          enviormentDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.EnvironmentDataOrBuilder>(
                  enviormentData_,
                  ((bitField0_ & 0x00000400) != 0),
                  getParentForChildren(),
                  isClean());
          enviormentData_ = null;
        }
        return enviormentDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData> hvacData_ =
        java.util.Collections.emptyList();
      private void ensureHvacDataIsMutable() {
        if (!((bitField0_ & 0x00000800) != 0)) {
          hvacData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData>(hvacData_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacDataOrBuilder> hvacDataBuilder_;

      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData> getHvacDataList() {
        if (hvacDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hvacData_);
        } else {
          return hvacDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public int getHvacDataCount() {
        if (hvacDataBuilder_ == null) {
          return hvacData_.size();
        } else {
          return hvacDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData getHvacData(int index) {
        if (hvacDataBuilder_ == null) {
          return hvacData_.get(index);
        } else {
          return hvacDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public Builder setHvacData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData value) {
        if (hvacDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHvacDataIsMutable();
          hvacData_.set(index, value);
          onChanged();
        } else {
          hvacDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public Builder setHvacData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.Builder builderForValue) {
        if (hvacDataBuilder_ == null) {
          ensureHvacDataIsMutable();
          hvacData_.set(index, builderForValue.build());
          onChanged();
        } else {
          hvacDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public Builder addHvacData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData value) {
        if (hvacDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHvacDataIsMutable();
          hvacData_.add(value);
          onChanged();
        } else {
          hvacDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public Builder addHvacData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData value) {
        if (hvacDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHvacDataIsMutable();
          hvacData_.add(index, value);
          onChanged();
        } else {
          hvacDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public Builder addHvacData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.Builder builderForValue) {
        if (hvacDataBuilder_ == null) {
          ensureHvacDataIsMutable();
          hvacData_.add(builderForValue.build());
          onChanged();
        } else {
          hvacDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public Builder addHvacData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.Builder builderForValue) {
        if (hvacDataBuilder_ == null) {
          ensureHvacDataIsMutable();
          hvacData_.add(index, builderForValue.build());
          onChanged();
        } else {
          hvacDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public Builder addAllHvacData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData> values) {
        if (hvacDataBuilder_ == null) {
          ensureHvacDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hvacData_);
          onChanged();
        } else {
          hvacDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public Builder clearHvacData() {
        if (hvacDataBuilder_ == null) {
          hvacData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          hvacDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public Builder removeHvacData(int index) {
        if (hvacDataBuilder_ == null) {
          ensureHvacDataIsMutable();
          hvacData_.remove(index);
          onChanged();
        } else {
          hvacDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.Builder getHvacDataBuilder(
          int index) {
        return getHvacDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacDataOrBuilder getHvacDataOrBuilder(
          int index) {
        if (hvacDataBuilder_ == null) {
          return hvacData_.get(index);  } else {
          return hvacDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacDataOrBuilder> 
           getHvacDataOrBuilderList() {
        if (hvacDataBuilder_ != null) {
          return hvacDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hvacData_);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.Builder addHvacDataBuilder() {
        return getHvacDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.Builder addHvacDataBuilder(
          int index) {
        return getHvacDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.HvacData hvac_data = 12;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.Builder> 
           getHvacDataBuilderList() {
        return getHvacDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacDataOrBuilder> 
          getHvacDataFieldBuilder() {
        if (hvacDataBuilder_ == null) {
          hvacDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.HvacDataOrBuilder>(
                  hvacData_,
                  ((bitField0_ & 0x00000800) != 0),
                  getParentForChildren(),
                  isClean());
          hvacData_ = null;
        }
        return hvacDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData> drivingStatus_ =
        java.util.Collections.emptyList();
      private void ensureDrivingStatusIsMutable() {
        if (!((bitField0_ & 0x00001000) != 0)) {
          drivingStatus_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData>(drivingStatus_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusDataOrBuilder> drivingStatusBuilder_;

      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData> getDrivingStatusList() {
        if (drivingStatusBuilder_ == null) {
          return java.util.Collections.unmodifiableList(drivingStatus_);
        } else {
          return drivingStatusBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public int getDrivingStatusCount() {
        if (drivingStatusBuilder_ == null) {
          return drivingStatus_.size();
        } else {
          return drivingStatusBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData getDrivingStatus(int index) {
        if (drivingStatusBuilder_ == null) {
          return drivingStatus_.get(index);
        } else {
          return drivingStatusBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public Builder setDrivingStatus(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData value) {
        if (drivingStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrivingStatusIsMutable();
          drivingStatus_.set(index, value);
          onChanged();
        } else {
          drivingStatusBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public Builder setDrivingStatus(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.Builder builderForValue) {
        if (drivingStatusBuilder_ == null) {
          ensureDrivingStatusIsMutable();
          drivingStatus_.set(index, builderForValue.build());
          onChanged();
        } else {
          drivingStatusBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public Builder addDrivingStatus(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData value) {
        if (drivingStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrivingStatusIsMutable();
          drivingStatus_.add(value);
          onChanged();
        } else {
          drivingStatusBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public Builder addDrivingStatus(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData value) {
        if (drivingStatusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDrivingStatusIsMutable();
          drivingStatus_.add(index, value);
          onChanged();
        } else {
          drivingStatusBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public Builder addDrivingStatus(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.Builder builderForValue) {
        if (drivingStatusBuilder_ == null) {
          ensureDrivingStatusIsMutable();
          drivingStatus_.add(builderForValue.build());
          onChanged();
        } else {
          drivingStatusBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public Builder addDrivingStatus(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.Builder builderForValue) {
        if (drivingStatusBuilder_ == null) {
          ensureDrivingStatusIsMutable();
          drivingStatus_.add(index, builderForValue.build());
          onChanged();
        } else {
          drivingStatusBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public Builder addAllDrivingStatus(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData> values) {
        if (drivingStatusBuilder_ == null) {
          ensureDrivingStatusIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, drivingStatus_);
          onChanged();
        } else {
          drivingStatusBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public Builder clearDrivingStatus() {
        if (drivingStatusBuilder_ == null) {
          drivingStatus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          drivingStatusBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public Builder removeDrivingStatus(int index) {
        if (drivingStatusBuilder_ == null) {
          ensureDrivingStatusIsMutable();
          drivingStatus_.remove(index);
          onChanged();
        } else {
          drivingStatusBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.Builder getDrivingStatusBuilder(
          int index) {
        return getDrivingStatusFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusDataOrBuilder getDrivingStatusOrBuilder(
          int index) {
        if (drivingStatusBuilder_ == null) {
          return drivingStatus_.get(index);  } else {
          return drivingStatusBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusDataOrBuilder> 
           getDrivingStatusOrBuilderList() {
        if (drivingStatusBuilder_ != null) {
          return drivingStatusBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(drivingStatus_);
        }
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.Builder addDrivingStatusBuilder() {
        return getDrivingStatusFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.getDefaultInstance());
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.Builder addDrivingStatusBuilder(
          int index) {
        return getDrivingStatusFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.getDefaultInstance());
      }
      /**
       * <pre>
       *Working
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DrivingStatusData driving_status = 13;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.Builder> 
           getDrivingStatusBuilderList() {
        return getDrivingStatusFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusDataOrBuilder> 
          getDrivingStatusFieldBuilder() {
        if (drivingStatusBuilder_ == null) {
          drivingStatusBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DrivingStatusDataOrBuilder>(
                  drivingStatus_,
                  ((bitField0_ & 0x00001000) != 0),
                  getParentForChildren(),
                  isClean());
          drivingStatus_ = null;
        }
        return drivingStatusBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData> deadReckoning_ =
        java.util.Collections.emptyList();
      private void ensureDeadReckoningIsMutable() {
        if (!((bitField0_ & 0x00002000) != 0)) {
          deadReckoning_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData>(deadReckoning_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningDataOrBuilder> deadReckoningBuilder_;

      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData> getDeadReckoningList() {
        if (deadReckoningBuilder_ == null) {
          return java.util.Collections.unmodifiableList(deadReckoning_);
        } else {
          return deadReckoningBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public int getDeadReckoningCount() {
        if (deadReckoningBuilder_ == null) {
          return deadReckoning_.size();
        } else {
          return deadReckoningBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData getDeadReckoning(int index) {
        if (deadReckoningBuilder_ == null) {
          return deadReckoning_.get(index);
        } else {
          return deadReckoningBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public Builder setDeadReckoning(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData value) {
        if (deadReckoningBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeadReckoningIsMutable();
          deadReckoning_.set(index, value);
          onChanged();
        } else {
          deadReckoningBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public Builder setDeadReckoning(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.Builder builderForValue) {
        if (deadReckoningBuilder_ == null) {
          ensureDeadReckoningIsMutable();
          deadReckoning_.set(index, builderForValue.build());
          onChanged();
        } else {
          deadReckoningBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public Builder addDeadReckoning(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData value) {
        if (deadReckoningBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeadReckoningIsMutable();
          deadReckoning_.add(value);
          onChanged();
        } else {
          deadReckoningBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public Builder addDeadReckoning(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData value) {
        if (deadReckoningBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeadReckoningIsMutable();
          deadReckoning_.add(index, value);
          onChanged();
        } else {
          deadReckoningBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public Builder addDeadReckoning(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.Builder builderForValue) {
        if (deadReckoningBuilder_ == null) {
          ensureDeadReckoningIsMutable();
          deadReckoning_.add(builderForValue.build());
          onChanged();
        } else {
          deadReckoningBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public Builder addDeadReckoning(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.Builder builderForValue) {
        if (deadReckoningBuilder_ == null) {
          ensureDeadReckoningIsMutable();
          deadReckoning_.add(index, builderForValue.build());
          onChanged();
        } else {
          deadReckoningBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public Builder addAllDeadReckoning(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData> values) {
        if (deadReckoningBuilder_ == null) {
          ensureDeadReckoningIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, deadReckoning_);
          onChanged();
        } else {
          deadReckoningBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public Builder clearDeadReckoning() {
        if (deadReckoningBuilder_ == null) {
          deadReckoning_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          deadReckoningBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public Builder removeDeadReckoning(int index) {
        if (deadReckoningBuilder_ == null) {
          ensureDeadReckoningIsMutable();
          deadReckoning_.remove(index);
          onChanged();
        } else {
          deadReckoningBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.Builder getDeadReckoningBuilder(
          int index) {
        return getDeadReckoningFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningDataOrBuilder getDeadReckoningOrBuilder(
          int index) {
        if (deadReckoningBuilder_ == null) {
          return deadReckoning_.get(index);  } else {
          return deadReckoningBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningDataOrBuilder> 
           getDeadReckoningOrBuilderList() {
        if (deadReckoningBuilder_ != null) {
          return deadReckoningBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(deadReckoning_);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.Builder addDeadReckoningBuilder() {
        return getDeadReckoningFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.Builder addDeadReckoningBuilder(
          int index) {
        return getDeadReckoningFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DeadReckoningData dead_reckoning = 14;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.Builder> 
           getDeadReckoningBuilderList() {
        return getDeadReckoningFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningDataOrBuilder> 
          getDeadReckoningFieldBuilder() {
        if (deadReckoningBuilder_ == null) {
          deadReckoningBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DeadReckoningDataOrBuilder>(
                  deadReckoning_,
                  ((bitField0_ & 0x00002000) != 0),
                  getParentForChildren(),
                  isClean());
          deadReckoning_ = null;
        }
        return deadReckoningBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData> passengerData_ =
        java.util.Collections.emptyList();
      private void ensurePassengerDataIsMutable() {
        if (!((bitField0_ & 0x00004000) != 0)) {
          passengerData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData>(passengerData_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerDataOrBuilder> passengerDataBuilder_;

      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData> getPassengerDataList() {
        if (passengerDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(passengerData_);
        } else {
          return passengerDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public int getPassengerDataCount() {
        if (passengerDataBuilder_ == null) {
          return passengerData_.size();
        } else {
          return passengerDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData getPassengerData(int index) {
        if (passengerDataBuilder_ == null) {
          return passengerData_.get(index);
        } else {
          return passengerDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public Builder setPassengerData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData value) {
        if (passengerDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassengerDataIsMutable();
          passengerData_.set(index, value);
          onChanged();
        } else {
          passengerDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public Builder setPassengerData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.Builder builderForValue) {
        if (passengerDataBuilder_ == null) {
          ensurePassengerDataIsMutable();
          passengerData_.set(index, builderForValue.build());
          onChanged();
        } else {
          passengerDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public Builder addPassengerData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData value) {
        if (passengerDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassengerDataIsMutable();
          passengerData_.add(value);
          onChanged();
        } else {
          passengerDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public Builder addPassengerData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData value) {
        if (passengerDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePassengerDataIsMutable();
          passengerData_.add(index, value);
          onChanged();
        } else {
          passengerDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public Builder addPassengerData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.Builder builderForValue) {
        if (passengerDataBuilder_ == null) {
          ensurePassengerDataIsMutable();
          passengerData_.add(builderForValue.build());
          onChanged();
        } else {
          passengerDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public Builder addPassengerData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.Builder builderForValue) {
        if (passengerDataBuilder_ == null) {
          ensurePassengerDataIsMutable();
          passengerData_.add(index, builderForValue.build());
          onChanged();
        } else {
          passengerDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public Builder addAllPassengerData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData> values) {
        if (passengerDataBuilder_ == null) {
          ensurePassengerDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, passengerData_);
          onChanged();
        } else {
          passengerDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public Builder clearPassengerData() {
        if (passengerDataBuilder_ == null) {
          passengerData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          passengerDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public Builder removePassengerData(int index) {
        if (passengerDataBuilder_ == null) {
          ensurePassengerDataIsMutable();
          passengerData_.remove(index);
          onChanged();
        } else {
          passengerDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.Builder getPassengerDataBuilder(
          int index) {
        return getPassengerDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerDataOrBuilder getPassengerDataOrBuilder(
          int index) {
        if (passengerDataBuilder_ == null) {
          return passengerData_.get(index);  } else {
          return passengerDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerDataOrBuilder> 
           getPassengerDataOrBuilderList() {
        if (passengerDataBuilder_ != null) {
          return passengerDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(passengerData_);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.Builder addPassengerDataBuilder() {
        return getPassengerDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.Builder addPassengerDataBuilder(
          int index) {
        return getPassengerDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.PassengerData passenger_data = 15;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.Builder> 
           getPassengerDataBuilderList() {
        return getPassengerDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerDataOrBuilder> 
          getPassengerDataFieldBuilder() {
        if (passengerDataBuilder_ == null) {
          passengerDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.PassengerDataOrBuilder>(
                  passengerData_,
                  ((bitField0_ & 0x00004000) != 0),
                  getParentForChildren(),
                  isClean());
          passengerData_ = null;
        }
        return passengerDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData> doorData_ =
        java.util.Collections.emptyList();
      private void ensureDoorDataIsMutable() {
        if (!((bitField0_ & 0x00008000) != 0)) {
          doorData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData>(doorData_);
          bitField0_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorDataOrBuilder> doorDataBuilder_;

      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData> getDoorDataList() {
        if (doorDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(doorData_);
        } else {
          return doorDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public int getDoorDataCount() {
        if (doorDataBuilder_ == null) {
          return doorData_.size();
        } else {
          return doorDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData getDoorData(int index) {
        if (doorDataBuilder_ == null) {
          return doorData_.get(index);
        } else {
          return doorDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public Builder setDoorData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData value) {
        if (doorDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDoorDataIsMutable();
          doorData_.set(index, value);
          onChanged();
        } else {
          doorDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public Builder setDoorData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.Builder builderForValue) {
        if (doorDataBuilder_ == null) {
          ensureDoorDataIsMutable();
          doorData_.set(index, builderForValue.build());
          onChanged();
        } else {
          doorDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public Builder addDoorData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData value) {
        if (doorDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDoorDataIsMutable();
          doorData_.add(value);
          onChanged();
        } else {
          doorDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public Builder addDoorData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData value) {
        if (doorDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDoorDataIsMutable();
          doorData_.add(index, value);
          onChanged();
        } else {
          doorDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public Builder addDoorData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.Builder builderForValue) {
        if (doorDataBuilder_ == null) {
          ensureDoorDataIsMutable();
          doorData_.add(builderForValue.build());
          onChanged();
        } else {
          doorDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public Builder addDoorData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.Builder builderForValue) {
        if (doorDataBuilder_ == null) {
          ensureDoorDataIsMutable();
          doorData_.add(index, builderForValue.build());
          onChanged();
        } else {
          doorDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public Builder addAllDoorData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData> values) {
        if (doorDataBuilder_ == null) {
          ensureDoorDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, doorData_);
          onChanged();
        } else {
          doorDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public Builder clearDoorData() {
        if (doorDataBuilder_ == null) {
          doorData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          doorDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public Builder removeDoorData(int index) {
        if (doorDataBuilder_ == null) {
          ensureDoorDataIsMutable();
          doorData_.remove(index);
          onChanged();
        } else {
          doorDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.Builder getDoorDataBuilder(
          int index) {
        return getDoorDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorDataOrBuilder getDoorDataOrBuilder(
          int index) {
        if (doorDataBuilder_ == null) {
          return doorData_.get(index);  } else {
          return doorDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorDataOrBuilder> 
           getDoorDataOrBuilderList() {
        if (doorDataBuilder_ != null) {
          return doorDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(doorData_);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.Builder addDoorDataBuilder() {
        return getDoorDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.Builder addDoorDataBuilder(
          int index) {
        return getDoorDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.DoorData door_data = 16;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.Builder> 
           getDoorDataBuilderList() {
        return getDoorDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorDataOrBuilder> 
          getDoorDataFieldBuilder() {
        if (doorDataBuilder_ == null) {
          doorDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.DoorDataOrBuilder>(
                  doorData_,
                  ((bitField0_ & 0x00008000) != 0),
                  getParentForChildren(),
                  isClean());
          doorData_ = null;
        }
        return doorDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData> lightData_ =
        java.util.Collections.emptyList();
      private void ensureLightDataIsMutable() {
        if (!((bitField0_ & 0x00010000) != 0)) {
          lightData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData>(lightData_);
          bitField0_ |= 0x00010000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightDataOrBuilder> lightDataBuilder_;

      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData> getLightDataList() {
        if (lightDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(lightData_);
        } else {
          return lightDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public int getLightDataCount() {
        if (lightDataBuilder_ == null) {
          return lightData_.size();
        } else {
          return lightDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData getLightData(int index) {
        if (lightDataBuilder_ == null) {
          return lightData_.get(index);
        } else {
          return lightDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public Builder setLightData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData value) {
        if (lightDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLightDataIsMutable();
          lightData_.set(index, value);
          onChanged();
        } else {
          lightDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public Builder setLightData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.Builder builderForValue) {
        if (lightDataBuilder_ == null) {
          ensureLightDataIsMutable();
          lightData_.set(index, builderForValue.build());
          onChanged();
        } else {
          lightDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public Builder addLightData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData value) {
        if (lightDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLightDataIsMutable();
          lightData_.add(value);
          onChanged();
        } else {
          lightDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public Builder addLightData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData value) {
        if (lightDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLightDataIsMutable();
          lightData_.add(index, value);
          onChanged();
        } else {
          lightDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public Builder addLightData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.Builder builderForValue) {
        if (lightDataBuilder_ == null) {
          ensureLightDataIsMutable();
          lightData_.add(builderForValue.build());
          onChanged();
        } else {
          lightDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public Builder addLightData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.Builder builderForValue) {
        if (lightDataBuilder_ == null) {
          ensureLightDataIsMutable();
          lightData_.add(index, builderForValue.build());
          onChanged();
        } else {
          lightDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public Builder addAllLightData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData> values) {
        if (lightDataBuilder_ == null) {
          ensureLightDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lightData_);
          onChanged();
        } else {
          lightDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public Builder clearLightData() {
        if (lightDataBuilder_ == null) {
          lightData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          lightDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public Builder removeLightData(int index) {
        if (lightDataBuilder_ == null) {
          ensureLightDataIsMutable();
          lightData_.remove(index);
          onChanged();
        } else {
          lightDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.Builder getLightDataBuilder(
          int index) {
        return getLightDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightDataOrBuilder getLightDataOrBuilder(
          int index) {
        if (lightDataBuilder_ == null) {
          return lightData_.get(index);  } else {
          return lightDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightDataOrBuilder> 
           getLightDataOrBuilderList() {
        if (lightDataBuilder_ != null) {
          return lightDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(lightData_);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.Builder addLightDataBuilder() {
        return getLightDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.Builder addLightDataBuilder(
          int index) {
        return getLightDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.LightData light_data = 17;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.Builder> 
           getLightDataBuilderList() {
        return getLightDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightDataOrBuilder> 
          getLightDataFieldBuilder() {
        if (lightDataBuilder_ == null) {
          lightDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.LightDataOrBuilder>(
                  lightData_,
                  ((bitField0_ & 0x00010000) != 0),
                  getParentForChildren(),
                  isClean());
          lightData_ = null;
        }
        return lightDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData> accelData_ =
        java.util.Collections.emptyList();
      private void ensureAccelDataIsMutable() {
        if (!((bitField0_ & 0x00020000) != 0)) {
          accelData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData>(accelData_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerDataOrBuilder> accelDataBuilder_;

      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData> getAccelDataList() {
        if (accelDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(accelData_);
        } else {
          return accelDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public int getAccelDataCount() {
        if (accelDataBuilder_ == null) {
          return accelData_.size();
        } else {
          return accelDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData getAccelData(int index) {
        if (accelDataBuilder_ == null) {
          return accelData_.get(index);
        } else {
          return accelDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public Builder setAccelData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData value) {
        if (accelDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccelDataIsMutable();
          accelData_.set(index, value);
          onChanged();
        } else {
          accelDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public Builder setAccelData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.Builder builderForValue) {
        if (accelDataBuilder_ == null) {
          ensureAccelDataIsMutable();
          accelData_.set(index, builderForValue.build());
          onChanged();
        } else {
          accelDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public Builder addAccelData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData value) {
        if (accelDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccelDataIsMutable();
          accelData_.add(value);
          onChanged();
        } else {
          accelDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public Builder addAccelData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData value) {
        if (accelDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccelDataIsMutable();
          accelData_.add(index, value);
          onChanged();
        } else {
          accelDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public Builder addAccelData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.Builder builderForValue) {
        if (accelDataBuilder_ == null) {
          ensureAccelDataIsMutable();
          accelData_.add(builderForValue.build());
          onChanged();
        } else {
          accelDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public Builder addAccelData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.Builder builderForValue) {
        if (accelDataBuilder_ == null) {
          ensureAccelDataIsMutable();
          accelData_.add(index, builderForValue.build());
          onChanged();
        } else {
          accelDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public Builder addAllAccelData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData> values) {
        if (accelDataBuilder_ == null) {
          ensureAccelDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, accelData_);
          onChanged();
        } else {
          accelDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public Builder clearAccelData() {
        if (accelDataBuilder_ == null) {
          accelData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          accelDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public Builder removeAccelData(int index) {
        if (accelDataBuilder_ == null) {
          ensureAccelDataIsMutable();
          accelData_.remove(index);
          onChanged();
        } else {
          accelDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.Builder getAccelDataBuilder(
          int index) {
        return getAccelDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerDataOrBuilder getAccelDataOrBuilder(
          int index) {
        if (accelDataBuilder_ == null) {
          return accelData_.get(index);  } else {
          return accelDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerDataOrBuilder> 
           getAccelDataOrBuilderList() {
        if (accelDataBuilder_ != null) {
          return accelDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(accelData_);
        }
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.Builder addAccelDataBuilder() {
        return getAccelDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.getDefaultInstance());
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.Builder addAccelDataBuilder(
          int index) {
        return getAccelDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.getDefaultInstance());
      }
      /**
       * <pre>
       *repeated TirePressureData Tire = 18;
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.AccelerometerData accel_data = 19;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.Builder> 
           getAccelDataBuilderList() {
        return getAccelDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerDataOrBuilder> 
          getAccelDataFieldBuilder() {
        if (accelDataBuilder_ == null) {
          accelDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.AccelerometerDataOrBuilder>(
                  accelData_,
                  ((bitField0_ & 0x00020000) != 0),
                  getParentForChildren(),
                  isClean());
          accelData_ = null;
        }
        return accelDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData> gyroData_ =
        java.util.Collections.emptyList();
      private void ensureGyroDataIsMutable() {
        if (!((bitField0_ & 0x00040000) != 0)) {
          gyroData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData>(gyroData_);
          bitField0_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeDataOrBuilder> gyroDataBuilder_;

      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData> getGyroDataList() {
        if (gyroDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gyroData_);
        } else {
          return gyroDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public int getGyroDataCount() {
        if (gyroDataBuilder_ == null) {
          return gyroData_.size();
        } else {
          return gyroDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData getGyroData(int index) {
        if (gyroDataBuilder_ == null) {
          return gyroData_.get(index);
        } else {
          return gyroDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public Builder setGyroData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData value) {
        if (gyroDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGyroDataIsMutable();
          gyroData_.set(index, value);
          onChanged();
        } else {
          gyroDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public Builder setGyroData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.Builder builderForValue) {
        if (gyroDataBuilder_ == null) {
          ensureGyroDataIsMutable();
          gyroData_.set(index, builderForValue.build());
          onChanged();
        } else {
          gyroDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public Builder addGyroData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData value) {
        if (gyroDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGyroDataIsMutable();
          gyroData_.add(value);
          onChanged();
        } else {
          gyroDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public Builder addGyroData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData value) {
        if (gyroDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGyroDataIsMutable();
          gyroData_.add(index, value);
          onChanged();
        } else {
          gyroDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public Builder addGyroData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.Builder builderForValue) {
        if (gyroDataBuilder_ == null) {
          ensureGyroDataIsMutable();
          gyroData_.add(builderForValue.build());
          onChanged();
        } else {
          gyroDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public Builder addGyroData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.Builder builderForValue) {
        if (gyroDataBuilder_ == null) {
          ensureGyroDataIsMutable();
          gyroData_.add(index, builderForValue.build());
          onChanged();
        } else {
          gyroDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public Builder addAllGyroData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData> values) {
        if (gyroDataBuilder_ == null) {
          ensureGyroDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, gyroData_);
          onChanged();
        } else {
          gyroDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public Builder clearGyroData() {
        if (gyroDataBuilder_ == null) {
          gyroData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          onChanged();
        } else {
          gyroDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public Builder removeGyroData(int index) {
        if (gyroDataBuilder_ == null) {
          ensureGyroDataIsMutable();
          gyroData_.remove(index);
          onChanged();
        } else {
          gyroDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.Builder getGyroDataBuilder(
          int index) {
        return getGyroDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeDataOrBuilder getGyroDataOrBuilder(
          int index) {
        if (gyroDataBuilder_ == null) {
          return gyroData_.get(index);  } else {
          return gyroDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeDataOrBuilder> 
           getGyroDataOrBuilderList() {
        if (gyroDataBuilder_ != null) {
          return gyroDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gyroData_);
        }
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.Builder addGyroDataBuilder() {
        return getGyroDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.Builder addGyroDataBuilder(
          int index) {
        return getGyroDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.getDefaultInstance());
      }
      /**
       * <pre>
       *Sensor not yet supported
       * </pre>
       *
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GyroscopeData gyro_data = 20;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.Builder> 
           getGyroDataBuilderList() {
        return getGyroDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeDataOrBuilder> 
          getGyroDataFieldBuilder() {
        if (gyroDataBuilder_ == null) {
          gyroDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GyroscopeDataOrBuilder>(
                  gyroData_,
                  ((bitField0_ & 0x00040000) != 0),
                  getParentForChildren(),
                  isClean());
          gyroData_ = null;
        }
        return gyroDataBuilder_;
      }

      private java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData> gpsSatelliteData_ =
        java.util.Collections.emptyList();
      private void ensureGpsSatelliteDataIsMutable() {
        if (!((bitField0_ & 0x00080000) != 0)) {
          gpsSatelliteData_ = new java.util.ArrayList<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData>(gpsSatelliteData_);
          bitField0_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteDataOrBuilder> gpsSatelliteDataBuilder_;

      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData> getGpsSatelliteDataList() {
        if (gpsSatelliteDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gpsSatelliteData_);
        } else {
          return gpsSatelliteDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public int getGpsSatelliteDataCount() {
        if (gpsSatelliteDataBuilder_ == null) {
          return gpsSatelliteData_.size();
        } else {
          return gpsSatelliteDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData getGpsSatelliteData(int index) {
        if (gpsSatelliteDataBuilder_ == null) {
          return gpsSatelliteData_.get(index);
        } else {
          return gpsSatelliteDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public Builder setGpsSatelliteData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData value) {
        if (gpsSatelliteDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGpsSatelliteDataIsMutable();
          gpsSatelliteData_.set(index, value);
          onChanged();
        } else {
          gpsSatelliteDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public Builder setGpsSatelliteData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.Builder builderForValue) {
        if (gpsSatelliteDataBuilder_ == null) {
          ensureGpsSatelliteDataIsMutable();
          gpsSatelliteData_.set(index, builderForValue.build());
          onChanged();
        } else {
          gpsSatelliteDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public Builder addGpsSatelliteData(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData value) {
        if (gpsSatelliteDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGpsSatelliteDataIsMutable();
          gpsSatelliteData_.add(value);
          onChanged();
        } else {
          gpsSatelliteDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public Builder addGpsSatelliteData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData value) {
        if (gpsSatelliteDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGpsSatelliteDataIsMutable();
          gpsSatelliteData_.add(index, value);
          onChanged();
        } else {
          gpsSatelliteDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public Builder addGpsSatelliteData(
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.Builder builderForValue) {
        if (gpsSatelliteDataBuilder_ == null) {
          ensureGpsSatelliteDataIsMutable();
          gpsSatelliteData_.add(builderForValue.build());
          onChanged();
        } else {
          gpsSatelliteDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public Builder addGpsSatelliteData(
          int index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.Builder builderForValue) {
        if (gpsSatelliteDataBuilder_ == null) {
          ensureGpsSatelliteDataIsMutable();
          gpsSatelliteData_.add(index, builderForValue.build());
          onChanged();
        } else {
          gpsSatelliteDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public Builder addAllGpsSatelliteData(
          java.lang.Iterable<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData> values) {
        if (gpsSatelliteDataBuilder_ == null) {
          ensureGpsSatelliteDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, gpsSatelliteData_);
          onChanged();
        } else {
          gpsSatelliteDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public Builder clearGpsSatelliteData() {
        if (gpsSatelliteDataBuilder_ == null) {
          gpsSatelliteData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
          onChanged();
        } else {
          gpsSatelliteDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public Builder removeGpsSatelliteData(int index) {
        if (gpsSatelliteDataBuilder_ == null) {
          ensureGpsSatelliteDataIsMutable();
          gpsSatelliteData_.remove(index);
          onChanged();
        } else {
          gpsSatelliteDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.Builder getGpsSatelliteDataBuilder(
          int index) {
        return getGpsSatelliteDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteDataOrBuilder getGpsSatelliteDataOrBuilder(
          int index) {
        if (gpsSatelliteDataBuilder_ == null) {
          return gpsSatelliteData_.get(index);  } else {
          return gpsSatelliteDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public java.util.List<? extends info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteDataOrBuilder> 
           getGpsSatelliteDataOrBuilderList() {
        if (gpsSatelliteDataBuilder_ != null) {
          return gpsSatelliteDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gpsSatelliteData_);
        }
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.Builder addGpsSatelliteDataBuilder() {
        return getGpsSatelliteDataFieldBuilder().addBuilder(
            info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.getDefaultInstance());
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.Builder addGpsSatelliteDataBuilder(
          int index) {
        return getGpsSatelliteDataFieldBuilder().addBuilder(
            index, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.getDefaultInstance());
      }
      /**
       * <code>repeated .info.anodsplace.headunit.aap.protocol.proto.SensorBatch.GpsSatelliteData gps_satellite_data = 21;</code>
       */
      public java.util.List<info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.Builder> 
           getGpsSatelliteDataBuilderList() {
        return getGpsSatelliteDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteDataOrBuilder> 
          getGpsSatelliteDataFieldBuilder() {
        if (gpsSatelliteDataBuilder_ == null) {
          gpsSatelliteDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteData.Builder, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch.GpsSatelliteDataOrBuilder>(
                  gpsSatelliteData_,
                  ((bitField0_ & 0x00080000) != 0),
                  getParentForChildren(),
                  isClean());
          gpsSatelliteData_ = null;
        }
        return gpsSatelliteDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch)
    }

    // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorBatch)
    private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch();
    }

    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SensorBatch>
        PARSER = new com.google.protobuf.AbstractParser<SensorBatch>() {
      @java.lang.Override
      public SensorBatch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorBatch(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SensorBatch> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SensorBatch> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorBatch getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SensorRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorType type = 1;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorType getType();

    /**
     * <code>required int64 min_update_period = 2;</code>
     */
    boolean hasMinUpdatePeriod();
    /**
     * <code>required int64 min_update_period = 2;</code>
     */
    long getMinUpdatePeriod();
  }
  /**
   * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorRequest}
   */
  public  static final class SensorRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorRequest)
      SensorRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SensorRequest.newBuilder() to construct.
    private SensorRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SensorRequest() {
      type_ = 1;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SensorRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SensorRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorType value = info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = rawValue;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              minUpdatePeriod_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorType type = 1;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorType getType() {
      @SuppressWarnings("deprecation")
      info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorType result = info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorType.valueOf(type_);
      return result == null ? info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorType.LOCATION : result;
    }

    public static final int MIN_UPDATE_PERIOD_FIELD_NUMBER = 2;
    private long minUpdatePeriod_;
    /**
     * <code>required int64 min_update_period = 2;</code>
     */
    public boolean hasMinUpdatePeriod() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required int64 min_update_period = 2;</code>
     */
    public long getMinUpdatePeriod() {
      return minUpdatePeriod_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinUpdatePeriod()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt64(2, minUpdatePeriod_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, minUpdatePeriod_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest)) {
        return super.equals(obj);
      }
      info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest) obj;

      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (type_ != other.type_) return false;
      }
      if (hasMinUpdatePeriod() != other.hasMinUpdatePeriod()) return false;
      if (hasMinUpdatePeriod()) {
        if (getMinUpdatePeriod()
            != other.getMinUpdatePeriod()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      if (hasMinUpdatePeriod()) {
        hash = (37 * hash) + MIN_UPDATE_PERIOD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getMinUpdatePeriod());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorRequest)
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest.Builder.class);
      }

      // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        minUpdatePeriod_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorRequest_descriptor;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest getDefaultInstanceForType() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest.getDefaultInstance();
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest build() {
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest buildPartial() {
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.minUpdatePeriod_ = minUpdatePeriod_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest) {
          return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest other) {
        if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasMinUpdatePeriod()) {
          setMinUpdatePeriod(other.getMinUpdatePeriod());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasType()) {
          return false;
        }
        if (!hasMinUpdatePeriod()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 1;
      /**
       * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorType type = 1;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorType getType() {
        @SuppressWarnings("deprecation")
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorType result = info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorType.valueOf(type_);
        return result == null ? info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorType.LOCATION : result;
      }
      /**
       * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorType type = 1;</code>
       */
      public Builder setType(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .info.anodsplace.headunit.aap.protocol.proto.SensorType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 1;
        onChanged();
        return this;
      }

      private long minUpdatePeriod_ ;
      /**
       * <code>required int64 min_update_period = 2;</code>
       */
      public boolean hasMinUpdatePeriod() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required int64 min_update_period = 2;</code>
       */
      public long getMinUpdatePeriod() {
        return minUpdatePeriod_;
      }
      /**
       * <code>required int64 min_update_period = 2;</code>
       */
      public Builder setMinUpdatePeriod(long value) {
        bitField0_ |= 0x00000002;
        minUpdatePeriod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 min_update_period = 2;</code>
       */
      public Builder clearMinUpdatePeriod() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minUpdatePeriod_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorRequest)
    }

    // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorRequest)
    private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest();
    }

    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SensorRequest>
        PARSER = new com.google.protobuf.AbstractParser<SensorRequest>() {
      @java.lang.Override
      public SensorRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SensorRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SensorRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SensorResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:info.anodsplace.headunit.aap.protocol.proto.SensorResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .info.anodsplace.headunit.aap.protocol.proto.MessageStatus status = 1;</code>
     */
    boolean hasStatus();
    /**
     * <code>required .info.anodsplace.headunit.aap.protocol.proto.MessageStatus status = 1;</code>
     */
    info.anodsplace.headunit.aap.protocol.proto.Common.MessageStatus getStatus();
  }
  /**
   * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorResponse}
   */
  public  static final class SensorResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:info.anodsplace.headunit.aap.protocol.proto.SensorResponse)
      SensorResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SensorResponse.newBuilder() to construct.
    private SensorResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SensorResponse() {
      status_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SensorResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SensorResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              info.anodsplace.headunit.aap.protocol.proto.Common.MessageStatus value = info.anodsplace.headunit.aap.protocol.proto.Common.MessageStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse.Builder.class);
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <code>required .info.anodsplace.headunit.aap.protocol.proto.MessageStatus status = 1;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .info.anodsplace.headunit.aap.protocol.proto.MessageStatus status = 1;</code>
     */
    public info.anodsplace.headunit.aap.protocol.proto.Common.MessageStatus getStatus() {
      @SuppressWarnings("deprecation")
      info.anodsplace.headunit.aap.protocol.proto.Common.MessageStatus result = info.anodsplace.headunit.aap.protocol.proto.Common.MessageStatus.valueOf(status_);
      return result == null ? info.anodsplace.headunit.aap.protocol.proto.Common.MessageStatus.STATUS_OK : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, status_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse)) {
        return super.equals(obj);
      }
      info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse other = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse) obj;

      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (status_ != other.status_) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + status_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code info.anodsplace.headunit.aap.protocol.proto.SensorResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:info.anodsplace.headunit.aap.protocol.proto.SensorResponse)
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse.class, info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse.Builder.class);
      }

      // Construct using info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorResponse_descriptor;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse getDefaultInstanceForType() {
        return info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse.getDefaultInstance();
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse build() {
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse buildPartial() {
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse result = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse) {
          return mergeFrom((info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse other) {
        if (other == info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasStatus()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int status_ = 0;
      /**
       * <code>required .info.anodsplace.headunit.aap.protocol.proto.MessageStatus status = 1;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .info.anodsplace.headunit.aap.protocol.proto.MessageStatus status = 1;</code>
       */
      public info.anodsplace.headunit.aap.protocol.proto.Common.MessageStatus getStatus() {
        @SuppressWarnings("deprecation")
        info.anodsplace.headunit.aap.protocol.proto.Common.MessageStatus result = info.anodsplace.headunit.aap.protocol.proto.Common.MessageStatus.valueOf(status_);
        return result == null ? info.anodsplace.headunit.aap.protocol.proto.Common.MessageStatus.STATUS_OK : result;
      }
      /**
       * <code>required .info.anodsplace.headunit.aap.protocol.proto.MessageStatus status = 1;</code>
       */
      public Builder setStatus(info.anodsplace.headunit.aap.protocol.proto.Common.MessageStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .info.anodsplace.headunit.aap.protocol.proto.MessageStatus status = 1;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:info.anodsplace.headunit.aap.protocol.proto.SensorResponse)
    }

    // @@protoc_insertion_point(class_scope:info.anodsplace.headunit.aap.protocol.proto.SensorResponse)
    private static final info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse();
    }

    public static info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SensorResponse>
        PARSER = new com.google.protobuf.AbstractParser<SensorResponse>() {
      @java.lang.Override
      public SensorResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SensorResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SensorResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public info.anodsplace.headunit.aap.protocol.proto.Sensors.SensorResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LocationData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LocationData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_RpmData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_RpmData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_FuelData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_FuelData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DeadReckoningData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DeadReckoningData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_NightData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_NightData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_ParkingBrakeData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_ParkingBrakeData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DrivingStatusData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DrivingStatusData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_GpsSatellite_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_GpsSatellite_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GearData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GearData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_CompassData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_CompassData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_SpeedData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_SpeedData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_OdometerData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_OdometerData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DiagnosticsData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DiagnosticsData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_EnvironmentData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_EnvironmentData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_HvacData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_HvacData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_AccelerometerData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_AccelerometerData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GyroscopeData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GyroscopeData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DoorData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DoorData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LightData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LightData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_PassengerData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_PassengerData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rsensors.proto\022+info.anodsplace.headuni" +
      "t.aap.protocol.proto\032\014common.proto\"\234 \n\013S" +
      "ensorBatch\022\\\n\rlocation_data\030\001 \003(\0132E.info" +
      ".anodsplace.headunit.aap.protocol.proto." +
      "SensorBatch.LocationData\022Z\n\014compass_data" +
      "\030\002 \003(\0132D.info.anodsplace.headunit.aap.pr" +
      "otocol.proto.SensorBatch.CompassData\022V\n\n" +
      "speed_data\030\003 \003(\0132B.info.anodsplace.headu" +
      "nit.aap.protocol.proto.SensorBatch.Speed" +
      "Data\022M\n\003rpm\030\004 \003(\0132@.info.anodsplace.head" +
      "unit.aap.protocol.proto.SensorBatch.RpmD" +
      "ata\022\\\n\rodometer_data\030\005 \003(\0132E.info.anodsp" +
      "lace.headunit.aap.protocol.proto.SensorB" +
      "atch.OdometerData\022T\n\tfuel_data\030\006 \003(\0132A.i" +
      "nfo.anodsplace.headunit.aap.protocol.pro" +
      "to.SensorBatch.FuelData\022d\n\021parkingbrake_" +
      "data\030\007 \003(\0132I.info.anodsplace.headunit.aa" +
      "p.protocol.proto.SensorBatch.ParkingBrak" +
      "eData\022T\n\tgear_data\030\010 \003(\0132A.info.anodspla" +
      "ce.headunit.aap.protocol.proto.SensorBat" +
      "ch.GearData\022b\n\020diagnostics_data\030\t \003(\0132H." +
      "info.anodsplace.headunit.aap.protocol.pr" +
      "oto.SensorBatch.DiagnosticsData\022V\n\nnight" +
      "_mode\030\n \003(\0132B.info.anodsplace.headunit.a" +
      "ap.protocol.proto.SensorBatch.NightData\022" +
      "a\n\017enviorment_data\030\013 \003(\0132H.info.anodspla" +
      "ce.headunit.aap.protocol.proto.SensorBat" +
      "ch.EnvironmentData\022T\n\thvac_data\030\014 \003(\0132A." +
      "info.anodsplace.headunit.aap.protocol.pr" +
      "oto.SensorBatch.HvacData\022b\n\016driving_stat" +
      "us\030\r \003(\0132J.info.anodsplace.headunit.aap." +
      "protocol.proto.SensorBatch.DrivingStatus" +
      "Data\022b\n\016dead_reckoning\030\016 \003(\0132J.info.anod" +
      "splace.headunit.aap.protocol.proto.Senso" +
      "rBatch.DeadReckoningData\022^\n\016passenger_da" +
      "ta\030\017 \003(\0132F.info.anodsplace.headunit.aap." +
      "protocol.proto.SensorBatch.PassengerData" +
      "\022T\n\tdoor_data\030\020 \003(\0132A.info.anodsplace.he" +
      "adunit.aap.protocol.proto.SensorBatch.Do" +
      "orData\022V\n\nlight_data\030\021 \003(\0132B.info.anodsp" +
      "lace.headunit.aap.protocol.proto.SensorB" +
      "atch.LightData\022^\n\naccel_data\030\023 \003(\0132J.inf" +
      "o.anodsplace.headunit.aap.protocol.proto" +
      ".SensorBatch.AccelerometerData\022Y\n\tgyro_d" +
      "ata\030\024 \003(\0132F.info.anodsplace.headunit.aap" +
      ".protocol.proto.SensorBatch.GyroscopeDat" +
      "a\022e\n\022gps_satellite_data\030\025 \003(\0132I.info.ano" +
      "dsplace.headunit.aap.protocol.proto.Sens" +
      "orBatch.GpsSatelliteData\032\212\001\n\014LocationDat" +
      "a\022\021\n\ttimestamp\030\001 \002(\004\022\020\n\010latitude\030\002 \002(\005\022\021" +
      "\n\tlongitude\030\003 \002(\005\022\020\n\010accuracy\030\004 \002(\r\022\020\n\010a" +
      "ltitude\030\005 \001(\005\022\r\n\005speed\030\006 \001(\005\022\017\n\007bearing\030" +
      "\007 \001(\005\032\026\n\007RpmData\022\013\n\003rpm\030\001 \002(\005\032=\n\010FuelDat" +
      "a\022\021\n\tfuellevel\030\001 \002(\005\022\r\n\005range\030\002 \001(\005\022\017\n\007l" +
      "owfuel\030\003 \001(\010\032@\n\021DeadReckoningData\022\026\n\016ste" +
      "ering_angel\030\001 \001(\005\022\023\n\013wheel_speed\030\002 \001(\005\032\"" +
      "\n\tNightData\022\025\n\ris_night_mode\030\001 \002(\010\032&\n\020Pa" +
      "rkingBrakeData\022\022\n\nis_engaged\030\001 \002(\010\032\265\001\n\021D" +
      "rivingStatusData\022\016\n\006status\030\001 \002(\005\"\217\001\n\006Sta" +
      "tus\022\020\n\014UNRESTRICTED\020\000\022\014\n\010NO_VIDEO\020\001\022\025\n\021N" +
      "O_KEYBOARD_INPUT\020\002\022\022\n\016NO_VOICE_INPUT\020\004\022\r" +
      "\n\tNO_CONFIG\020\010\022\025\n\021LIMIT_MESSAGE_LEN\020\020\022\024\n\020" +
      "FULLY_RESTRICTED\020\037\032\231\002\n\020GpsSatelliteData\022" +
      "\025\n\rnumber_in_use\030\001 \001(\005\022\026\n\016number_in_view" +
      "\030\002 \001(\005\022j\n\nsatellites\030\003 \003(\0132V.info.anodsp" +
      "lace.headunit.aap.protocol.proto.SensorB" +
      "atch.GpsSatelliteData.GpsSatellite\032j\n\014Gp" +
      "sSatellite\022\013\n\003prn\030\001 \001(\005\022\016\n\006snr_e3\030\002 \001(\005\022" +
      "\023\n\013used_in_fix\030\003 \001(\010\022\022\n\nazimuth_e3\030\004 \001(\005" +
      "\022\024\n\014elevation_e3\030\005 \001(\005\032\213\002\n\010GearData\022T\n\004g" +
      "ear\030\001 \002(\0162F.info.anodsplace.headunit.aap" +
      ".protocol.proto.SensorBatch.GearData.GEA" +
      "R\"\250\001\n\004GEAR\022\t\n\005DRIVE\020d\022\n\n\006EIGHTH\020\010\022\t\n\005FIF" +
      "TH\020\005\022\t\n\005FIRST\020\001\022\n\n\006FOURTH\020\004\022\013\n\007NEUTRAL\020\000" +
      "\022\t\n\005NINTH\020\t\022\010\n\004PARK\020e\022\013\n\007REVERSE\020f\022\n\n\006SE" +
      "COND\020\002\022\013\n\007SEVENTH\020\007\022\t\n\005SIXTH\020\006\022\t\n\005TENTH\020" +
      "\n\022\t\n\005THIRD\020\003\032D\n\013CompassData\022\022\n\nbearing_e" +
      "6\030\001 \002(\005\022\020\n\010pitch_e6\030\002 \002(\005\022\017\n\007roll_e6\030\003 \002" +
      "(\005\032O\n\tSpeedData\022\020\n\010speed_e6\030\001 \002(\005\022\026\n\016cru" +
      "ise_engaged\030\002 \001(\010\022\030\n\020cruise_set_speed\030\003 " +
      "\001(\010\0323\n\014OdometerData\022\016\n\006kms_el\030\001 \001(\005\022\023\n\013t" +
      "rip_kms_el\030\002 \001(\005\032+\n\017DiagnosticsData\022\030\n\020d" +
      "iagnostics_byte\030\001 \002(\014\032L\n\017EnvironmentData" +
      "\022\026\n\016temperature_e3\030\001 \001(\005\022\023\n\013pressure_e3\030" +
      "\002 \001(\005\022\014\n\004rain\030\003 \001(\005\032I\n\010HvacData\022\035\n\025targe" +
      "t_temperature_e3\030\001 \001(\005\022\036\n\026current_temper" +
      "ature_e3\030\002 \001(\005\032d\n\021AccelerometerData\022\031\n\021a" +
      "cceleration_x_e3\030\001 \001(\005\022\031\n\021acceleration_y" +
      "_e3\030\002 \001(\005\022\031\n\021acceleration_z_e3\030\003 \001(\005\032f\n\r" +
      "GyroscopeData\022\033\n\023rotation_speed_x_e3\030\001 \001" +
      "(\005\022\033\n\023rotation_speed_y_e3\030\002 \001(\005\022\033\n\023rotat" +
      "ion_speed_z_e3\030\003 \001(\005\032C\n\010DoorData\022\021\n\thood" +
      "_open\030\001 \002(\010\022\021\n\tboot_open\030\002 \002(\010\022\021\n\tdoor_o" +
      "pen\030\003 \003(\010\032\251\003\n\tLightData\022d\n\theadlight\030\001 \001" +
      "(\0162Q.info.anodsplace.headunit.aap.protoc" +
      "ol.proto.SensorBatch.LightData.Headlight" +
      "State\022m\n\016turn_indicator\030\002 \001(\0162U.info.ano" +
      "dsplace.headunit.aap.protocol.proto.Sens" +
      "orBatch.LightData.TurnIndicatorState\022\027\n\017" +
      "hazard_light_on\030\003 \001(\010\"T\n\016HeadlightState\022" +
      "\017\n\013HEADLIGHT_0\020\000\022\017\n\013HEADLIGHT_1\020\001\022\017\n\013HEA" +
      "DLIGHT_2\020\002\022\017\n\013HEADLIGHT_3\020\003\"X\n\022TurnIndic" +
      "atorState\022\017\n\013INDICATOR_0\020\000\022\017\n\013INDICATOR_" +
      "1\020\001\022\017\n\013INDICATOR_2\020\002\022\017\n\013INDICATOR_3\020\003\032*\n" +
      "\rPassengerData\022\031\n\021passenger_present\030\001 \001(" +
      "\010\"q\n\rSensorRequest\022E\n\004type\030\001 \002(\01627.info." +
      "anodsplace.headunit.aap.protocol.proto.S" +
      "ensorType\022\031\n\021min_update_period\030\002 \002(\003\"\\\n\016" +
      "SensorResponse\022J\n\006status\030\001 \002(\0162:.info.an" +
      "odsplace.headunit.aap.protocol.proto.Mes" +
      "sageStatus*[\n\016SensorsMsgType\022\031\n\023SENSOR_S" +
      "TARTREQUEST\020\201\200\002\022\032\n\024SENSOR_STARTRESPONSE\020" +
      "\202\200\002\022\022\n\014SENSOR_EVENT\020\203\200\002*\244\002\n\nSensorType\022\014" +
      "\n\010LOCATION\020\001\022\013\n\007COMPASS\020\002\022\r\n\tCAR_SPEED\020\003" +
      "\022\007\n\003RPM\020\004\022\014\n\010ODOMETER\020\005\022\016\n\nFUEL_LEVEL\020\006\022" +
      "\021\n\rPARKING_BRAKE\020\007\022\010\n\004GEAR\020\010\022\017\n\013DIAGNOST" +
      "ICS\020\t\022\t\n\005NIGHT\020\n\022\017\n\013ENVIRONMENT\020\013\022\010\n\004HVA" +
      "C\020\014\022\022\n\016DRIVING_STATUS\020\r\022\021\n\rDEAD_RECONING" +
      "\020\016\022\r\n\tPASSENGER\020\017\022\010\n\004DOOR\020\020\022\t\n\005LIGHT\020\021\022\010" +
      "\n\004TIRE\020\022\022\t\n\005ACCEL\020\023\022\010\n\004GYRO\020\024\022\007\n\003GPS\020\025B\t" +
      "B\007Sensors"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          info.anodsplace.headunit.aap.protocol.proto.Common.getDescriptor(),
        });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor,
        new java.lang.String[] { "LocationData", "CompassData", "SpeedData", "Rpm", "OdometerData", "FuelData", "ParkingbrakeData", "GearData", "DiagnosticsData", "NightMode", "EnviormentData", "HvacData", "DrivingStatus", "DeadReckoning", "PassengerData", "DoorData", "LightData", "AccelData", "GyroData", "GpsSatelliteData", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LocationData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(0);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LocationData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LocationData_descriptor,
        new java.lang.String[] { "Timestamp", "Latitude", "Longitude", "Accuracy", "Altitude", "Speed", "Bearing", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_RpmData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(1);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_RpmData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_RpmData_descriptor,
        new java.lang.String[] { "Rpm", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_FuelData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(2);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_FuelData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_FuelData_descriptor,
        new java.lang.String[] { "Fuellevel", "Range", "Lowfuel", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DeadReckoningData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(3);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DeadReckoningData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DeadReckoningData_descriptor,
        new java.lang.String[] { "SteeringAngel", "WheelSpeed", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_NightData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(4);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_NightData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_NightData_descriptor,
        new java.lang.String[] { "IsNightMode", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_ParkingBrakeData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(5);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_ParkingBrakeData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_ParkingBrakeData_descriptor,
        new java.lang.String[] { "IsEngaged", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DrivingStatusData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(6);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DrivingStatusData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DrivingStatusData_descriptor,
        new java.lang.String[] { "Status", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(7);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_descriptor,
        new java.lang.String[] { "NumberInUse", "NumberInView", "Satellites", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_GpsSatellite_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_descriptor.getNestedTypes().get(0);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_GpsSatellite_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GpsSatelliteData_GpsSatellite_descriptor,
        new java.lang.String[] { "Prn", "SnrE3", "UsedInFix", "AzimuthE3", "ElevationE3", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GearData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(8);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GearData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GearData_descriptor,
        new java.lang.String[] { "Gear", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_CompassData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(9);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_CompassData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_CompassData_descriptor,
        new java.lang.String[] { "BearingE6", "PitchE6", "RollE6", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_SpeedData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(10);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_SpeedData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_SpeedData_descriptor,
        new java.lang.String[] { "SpeedE6", "CruiseEngaged", "CruiseSetSpeed", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_OdometerData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(11);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_OdometerData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_OdometerData_descriptor,
        new java.lang.String[] { "KmsEl", "TripKmsEl", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DiagnosticsData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(12);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DiagnosticsData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DiagnosticsData_descriptor,
        new java.lang.String[] { "DiagnosticsByte", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_EnvironmentData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(13);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_EnvironmentData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_EnvironmentData_descriptor,
        new java.lang.String[] { "TemperatureE3", "PressureE3", "Rain", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_HvacData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(14);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_HvacData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_HvacData_descriptor,
        new java.lang.String[] { "TargetTemperatureE3", "CurrentTemperatureE3", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_AccelerometerData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(15);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_AccelerometerData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_AccelerometerData_descriptor,
        new java.lang.String[] { "AccelerationXE3", "AccelerationYE3", "AccelerationZE3", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GyroscopeData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(16);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GyroscopeData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_GyroscopeData_descriptor,
        new java.lang.String[] { "RotationSpeedXE3", "RotationSpeedYE3", "RotationSpeedZE3", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DoorData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(17);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DoorData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_DoorData_descriptor,
        new java.lang.String[] { "HoodOpen", "BootOpen", "DoorOpen", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LightData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(18);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LightData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_LightData_descriptor,
        new java.lang.String[] { "Headlight", "TurnIndicator", "HazardLightOn", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_PassengerData_descriptor =
      internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_descriptor.getNestedTypes().get(19);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_PassengerData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorBatch_PassengerData_descriptor,
        new java.lang.String[] { "PassengerPresent", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorRequest_descriptor,
        new java.lang.String[] { "Type", "MinUpdatePeriod", });
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_info_anodsplace_headunit_aap_protocol_proto_SensorResponse_descriptor,
        new java.lang.String[] { "Status", });
    info.anodsplace.headunit.aap.protocol.proto.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
