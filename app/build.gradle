apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.protobuf'

dependencies {
    implementation 'com.google.protobuf:protobuf-lite:3.0.1'

    implementation 'androidx.activity:activity:1.1.0-alpha03'
    implementation 'androidx.fragment:fragment:1.2.0-alpha04'
    implementation 'androidx.media:media:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta04'

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-alpha05'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.2.0-alpha05'

    // KTX
    implementation 'androidx.core:core:1.2.0-alpha04'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.activity:activity-ktx:1.1.0-alpha03'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0'

    testImplementation 'junit:junit:4.13-beta-3'
    testImplementation 'org.mockito:mockito-core:3.0.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.0"
    }

    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                javalite { }
            }
        }
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "info.anodsplace.headunit"
        minSdkVersion 18
        targetSdkVersion 28

        versionCode 22
        versionName "1.0"

        ndk {
            moduleName "hu_jni"
        }

        externalNativeBuild {
            cmake {
                version "3.10.2"
                cppFlags ""
                arguments "-DANDROID_TOOLCHAIN=clang"
                abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
            }
        }
    }

    externalNativeBuild {
        cmake{
            path "CMakeLists.txt"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            debuggable true
            jniDebuggable true
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs = ["-XXLanguage:+InlineClasses", "-progressive"]
    }
}
repositories {
    mavenCentral()
}
