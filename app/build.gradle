buildscript {
    ext.kotlin_version = '1.3.41'
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
allprojects {
    repositories {
        jcenter()
        google()
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

dependencies {
    implementation 'com.google.protobuf.nano:protobuf-javanano:3.1.0'

    implementation 'androidx.activity:activity:1.1.0-alpha02'
    implementation 'androidx.fragment:fragment:1.2.0-alpha02'
    implementation 'androidx.media:media:1.1.0-rc01'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta02'

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-alpha03'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.2.0-alpha03'

    // KTX
    implementation 'androidx.core:core:1.2.0-alpha03'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.activity:activity-ktx:1.1.0-alpha02'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'

    testImplementation 'junit:junit:4.13-beta-3'
    testImplementation 'org.mockito:mockito-core:3.0.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    implementation project(path: ':contract')
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "info.anodsplace.headunit"
        minSdkVersion 16
        targetSdkVersion 28

        versionCode 22
        versionName "1.0"

        ndk {
            moduleName "hu_jni"
        }

        externalNativeBuild {
            cmake {
                version "3.10.2"
                cppFlags ""
                arguments "-DANDROID_TOOLCHAIN=clang"
                abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
            }
        }
    }

    externalNativeBuild {
        cmake{
            path "CMakeLists.txt"
        }
    }

    signingConfigs {
        debug {
            storeFile file(HEADUNIT_KEYSTORE_FILE)
            storePassword HEADUNIT_KEYSTORE_PASSWORD
            keyAlias HEADUNIT_KEY_ALIAS
            keyPassword HEADUNIT_KEY_PASSWORD
        }

        release {
            storeFile file(HEADUNIT_KEYSTORE_FILE)
            storePassword HEADUNIT_KEYSTORE_PASSWORD
            keyAlias HEADUNIT_KEY_ALIAS
            keyPassword HEADUNIT_KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            jniDebuggable true
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        abortOnError false
    }

    task genSource(type: Exec) {
        println "Executing " + HEADUNIT_SCRIPT_FILE
        commandLine HEADUNIT_SCRIPT_FILE
    }

    preBuild.dependsOn genSource

    // workaround for otlin tests
    task copyTestClasses(type: Copy) {
        from "build/tmp/kotlin-classes/debugUnitTest"
        into "build/intermediates/classes/debug"
    }
    task copySdkClasses(type: Copy) {
        from "build/tmp/kotlin-classes/debug"
        into "build/intermediates/classes/debug"
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}
repositories {
    mavenCentral()
}

