// Generated by the protocol buffer compiler.  DO NOT EDIT!

package ca.yyx.hu.aap.protocol.nano;

@SuppressWarnings("hiding")
public interface Sensors {

  // enum SensorsMsgType
  public static final int MSG_SENSORS_STARTREQUEST = 32769;
  public static final int MSG_SENSORS_STARTRESPONSE = 32770;
  public static final int MSG_SENSORS_EVENT = 32771;

  // enum SensorType
  public static final int SENSOR_TYPE_LOCATION = 1;
  public static final int SENSOR_TYPE_COMPASS = 2;
  public static final int SENSOR_TYPE_CAR_SPEED = 3;
  public static final int SENSOR_TYPE_RPM = 4;
  public static final int SENSOR_TYPE_ODOMETER = 5;
  public static final int SENSOR_TYPE_FUEL_LEVEL = 6;
  public static final int SENSOR_TYPE_PARKING_BRAKE = 7;
  public static final int SENSOR_TYPE_GEAR = 8;
  public static final int SENSOR_TYPE_NIGHT = 10;
  public static final int SENSOR_TYPE_ENVIRONMENT = 11;
  public static final int SENSOR_TYPE_DRIVING_STATUS = 13;

  public static final class SensorBatch extends
      com.google.protobuf.nano.MessageNano {

    public static final class LocationData extends
        com.google.protobuf.nano.MessageNano {

      private static volatile LocationData[] _emptyArray;
      public static LocationData[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new LocationData[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional uint64 timestamp = 1;
      public long timestamp;

      // optional int32 latitude = 2;
      public int latitude;

      // optional int32 longitude = 3;
      public int longitude;

      // optional uint32 accuracy = 4;
      public int accuracy;

      // optional int32 altitude = 5;
      public int altitude;

      // optional int32 speed = 6;
      public int speed;

      // optional int32 bearing = 7;
      public int bearing;

      public LocationData() {
        clear();
      }

      public LocationData clear() {
        timestamp = 0L;
        latitude = 0;
        longitude = 0;
        accuracy = 0;
        altitude = 0;
        speed = 0;
        bearing = 0;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.timestamp != 0L) {
          output.writeUInt64(1, this.timestamp);
        }
        if (this.latitude != 0) {
          output.writeInt32(2, this.latitude);
        }
        if (this.longitude != 0) {
          output.writeInt32(3, this.longitude);
        }
        if (this.accuracy != 0) {
          output.writeUInt32(4, this.accuracy);
        }
        if (this.altitude != 0) {
          output.writeInt32(5, this.altitude);
        }
        if (this.speed != 0) {
          output.writeInt32(6, this.speed);
        }
        if (this.bearing != 0) {
          output.writeInt32(7, this.bearing);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.timestamp != 0L) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64Size(1, this.timestamp);
        }
        if (this.latitude != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(2, this.latitude);
        }
        if (this.longitude != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(3, this.longitude);
        }
        if (this.accuracy != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32Size(4, this.accuracy);
        }
        if (this.altitude != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(5, this.altitude);
        }
        if (this.speed != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(6, this.speed);
        }
        if (this.bearing != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(7, this.bearing);
        }
        return size;
      }

      @Override
      public LocationData mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.timestamp = input.readUInt64();
              break;
            }
            case 16: {
              this.latitude = input.readInt32();
              break;
            }
            case 24: {
              this.longitude = input.readInt32();
              break;
            }
            case 32: {
              this.accuracy = input.readUInt32();
              break;
            }
            case 40: {
              this.altitude = input.readInt32();
              break;
            }
            case 48: {
              this.speed = input.readInt32();
              break;
            }
            case 56: {
              this.bearing = input.readInt32();
              break;
            }
          }
        }
      }

      public static LocationData parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new LocationData(), data);
      }

      public static LocationData parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new LocationData().mergeFrom(input);
      }
    }

    public static final class RPM extends
        com.google.protobuf.nano.MessageNano {

      private static volatile RPM[] _emptyArray;
      public static RPM[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new RPM[0];
            }
          }
        }
        return _emptyArray;
      }

      // required int32 rpm = 1;
      public int rpm;

      public RPM() {
        clear();
      }

      public RPM clear() {
        rpm = 0;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeInt32(1, this.rpm);
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.rpm);
        return size;
      }

      @Override
      public RPM mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.rpm = input.readInt32();
              break;
            }
          }
        }
      }

      public static RPM parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new RPM(), data);
      }

      public static RPM parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new RPM().mergeFrom(input);
      }
    }

    public static final class FuelLevel extends
        com.google.protobuf.nano.MessageNano {

      private static volatile FuelLevel[] _emptyArray;
      public static FuelLevel[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new FuelLevel[0];
            }
          }
        }
        return _emptyArray;
      }

      // required int32 fuellevel = 1;
      public int fuellevel;

      // optional int32 range = 2;
      public int range;

      // optional bool lowfuel = 3;
      public boolean lowfuel;

      public FuelLevel() {
        clear();
      }

      public FuelLevel clear() {
        fuellevel = 0;
        range = 0;
        lowfuel = false;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeInt32(1, this.fuellevel);
        if (this.range != 0) {
          output.writeInt32(2, this.range);
        }
        if (this.lowfuel != false) {
          output.writeBool(3, this.lowfuel);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.fuellevel);
        if (this.range != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(2, this.range);
        }
        if (this.lowfuel != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(3, this.lowfuel);
        }
        return size;
      }

      @Override
      public FuelLevel mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.fuellevel = input.readInt32();
              break;
            }
            case 16: {
              this.range = input.readInt32();
              break;
            }
            case 24: {
              this.lowfuel = input.readBool();
              break;
            }
          }
        }
      }

      public static FuelLevel parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new FuelLevel(), data);
      }

      public static FuelLevel parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new FuelLevel().mergeFrom(input);
      }
    }

    public static final class DeadReckoning extends
        com.google.protobuf.nano.MessageNano {

      private static volatile DeadReckoning[] _emptyArray;
      public static DeadReckoning[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new DeadReckoning[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional int32 steering_angel = 1;
      public int steeringAngel;

      // optional int32 wheel_speed = 2;
      public int wheelSpeed;

      public DeadReckoning() {
        clear();
      }

      public DeadReckoning clear() {
        steeringAngel = 0;
        wheelSpeed = 0;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.steeringAngel != 0) {
          output.writeInt32(1, this.steeringAngel);
        }
        if (this.wheelSpeed != 0) {
          output.writeInt32(2, this.wheelSpeed);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.steeringAngel != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(1, this.steeringAngel);
        }
        if (this.wheelSpeed != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(2, this.wheelSpeed);
        }
        return size;
      }

      @Override
      public DeadReckoning mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.steeringAngel = input.readInt32();
              break;
            }
            case 16: {
              this.wheelSpeed = input.readInt32();
              break;
            }
          }
        }
      }

      public static DeadReckoning parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new DeadReckoning(), data);
      }

      public static DeadReckoning parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new DeadReckoning().mergeFrom(input);
      }
    }

    public static final class NightModeData extends
        com.google.protobuf.nano.MessageNano {

      private static volatile NightModeData[] _emptyArray;
      public static NightModeData[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new NightModeData[0];
            }
          }
        }
        return _emptyArray;
      }

      // required bool is_night = 1;
      public boolean isNight;

      public NightModeData() {
        clear();
      }

      public NightModeData clear() {
        isNight = false;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeBool(1, this.isNight);
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(1, this.isNight);
        return size;
      }

      @Override
      public NightModeData mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.isNight = input.readBool();
              break;
            }
          }
        }
      }

      public static NightModeData parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new NightModeData(), data);
      }

      public static NightModeData parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new NightModeData().mergeFrom(input);
      }
    }

    public static final class ParkingBrakeData extends
        com.google.protobuf.nano.MessageNano {

      private static volatile ParkingBrakeData[] _emptyArray;
      public static ParkingBrakeData[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new ParkingBrakeData[0];
            }
          }
        }
        return _emptyArray;
      }

      // required bool parking_brake = 1;
      public boolean parkingBrake;

      public ParkingBrakeData() {
        clear();
      }

      public ParkingBrakeData clear() {
        parkingBrake = false;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeBool(1, this.parkingBrake);
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(1, this.parkingBrake);
        return size;
      }

      @Override
      public ParkingBrakeData mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.parkingBrake = input.readBool();
              break;
            }
          }
        }
      }

      public static ParkingBrakeData parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new ParkingBrakeData(), data);
      }

      public static ParkingBrakeData parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new ParkingBrakeData().mergeFrom(input);
      }
    }

    public static final class DrivingStatusData extends
        com.google.protobuf.nano.MessageNano {

      // enum Status
      public static final int DRIVING_STATUS_PARKED = 0;
      public static final int DRIVING_STATUS_MOOVING = 1;

      private static volatile DrivingStatusData[] _emptyArray;
      public static DrivingStatusData[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new DrivingStatusData[0];
            }
          }
        }
        return _emptyArray;
      }

      // required int32 status = 1;
      public int status;

      public DrivingStatusData() {
        clear();
      }

      public DrivingStatusData clear() {
        status = 0;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeInt32(1, this.status);
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.status);
        return size;
      }

      @Override
      public DrivingStatusData mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.status = input.readInt32();
              break;
            }
          }
        }
      }

      public static DrivingStatusData parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new DrivingStatusData(), data);
      }

      public static DrivingStatusData parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new DrivingStatusData().mergeFrom(input);
      }
    }

    public static final class GpsSatelliteData extends
        com.google.protobuf.nano.MessageNano {

      public static final class GpsSatellite extends
          com.google.protobuf.nano.MessageNano {

        private static volatile GpsSatellite[] _emptyArray;
        public static GpsSatellite[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new GpsSatellite[0];
              }
            }
          }
          return _emptyArray;
        }

        // optional int32 prn = 1;
        public int prn;

        // optional int32 snr_e3 = 2;
        public int snrE3;

        // optional bool used_in_fix = 3;
        public boolean usedInFix;

        // optional int32 azimuth_e3 = 4;
        public int azimuthE3;

        // optional int32 elevation_e3 = 5;
        public int elevationE3;

        public GpsSatellite() {
          clear();
        }

        public GpsSatellite clear() {
          prn = 0;
          snrE3 = 0;
          usedInFix = false;
          azimuthE3 = 0;
          elevationE3 = 0;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (this.prn != 0) {
            output.writeInt32(1, this.prn);
          }
          if (this.snrE3 != 0) {
            output.writeInt32(2, this.snrE3);
          }
          if (this.usedInFix != false) {
            output.writeBool(3, this.usedInFix);
          }
          if (this.azimuthE3 != 0) {
            output.writeInt32(4, this.azimuthE3);
          }
          if (this.elevationE3 != 0) {
            output.writeInt32(5, this.elevationE3);
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (this.prn != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(1, this.prn);
          }
          if (this.snrE3 != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(2, this.snrE3);
          }
          if (this.usedInFix != false) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeBoolSize(3, this.usedInFix);
          }
          if (this.azimuthE3 != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(4, this.azimuthE3);
          }
          if (this.elevationE3 != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(5, this.elevationE3);
          }
          return size;
        }

        @Override
        public GpsSatellite mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                this.prn = input.readInt32();
                break;
              }
              case 16: {
                this.snrE3 = input.readInt32();
                break;
              }
              case 24: {
                this.usedInFix = input.readBool();
                break;
              }
              case 32: {
                this.azimuthE3 = input.readInt32();
                break;
              }
              case 40: {
                this.elevationE3 = input.readInt32();
                break;
              }
            }
          }
        }

        public static GpsSatellite parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new GpsSatellite(), data);
        }

        public static GpsSatellite parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new GpsSatellite().mergeFrom(input);
        }
      }

      private static volatile GpsSatelliteData[] _emptyArray;
      public static GpsSatelliteData[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new GpsSatelliteData[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional int32 number_in_use = 1;
      public int numberInUse;

      // optional int32 number_in_view = 2;
      public int numberInView;

      // repeated .ca.yyx.hu.aap.protocol.SensorBatch.GpsSatelliteData.GpsSatellite satellites = 3;
      public ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite[] satellites;

      public GpsSatelliteData() {
        clear();
      }

      public GpsSatelliteData clear() {
        numberInUse = 0;
        numberInView = 0;
        satellites = ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite.emptyArray();
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.numberInUse != 0) {
          output.writeInt32(1, this.numberInUse);
        }
        if (this.numberInView != 0) {
          output.writeInt32(2, this.numberInView);
        }
        if (this.satellites != null && this.satellites.length > 0) {
          for (int i = 0; i < this.satellites.length; i++) {
            ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite element = this.satellites[i];
            if (element != null) {
              output.writeMessage(3, element);
            }
          }
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.numberInUse != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(1, this.numberInUse);
        }
        if (this.numberInView != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(2, this.numberInView);
        }
        if (this.satellites != null && this.satellites.length > 0) {
          for (int i = 0; i < this.satellites.length; i++) {
            ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite element = this.satellites[i];
            if (element != null) {
              size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeMessageSize(3, element);
            }
          }
        }
        return size;
      }

      @Override
      public GpsSatelliteData mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.numberInUse = input.readInt32();
              break;
            }
            case 16: {
              this.numberInView = input.readInt32();
              break;
            }
            case 26: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 26);
              int i = this.satellites == null ? 0 : this.satellites.length;
              ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite[] newArray =
                  new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite[i + arrayLength];
              if (i != 0) {
                java.lang.System.arraycopy(this.satellites, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite();
                input.readMessage(newArray[i]);
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData.GpsSatellite();
              input.readMessage(newArray[i]);
              this.satellites = newArray;
              break;
            }
          }
        }
      }

      public static GpsSatelliteData parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new GpsSatelliteData(), data);
      }

      public static GpsSatelliteData parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new GpsSatelliteData().mergeFrom(input);
      }
    }

    private static volatile SensorBatch[] _emptyArray;
    public static SensorBatch[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SensorBatch[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .ca.yyx.hu.aap.protocol.SensorBatch.LocationData location_data = 1;
    public ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.LocationData[] locationData;

    // repeated .ca.yyx.hu.aap.protocol.SensorBatch.ParkingBrakeData parking_break_data = 7;
    public ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.ParkingBrakeData[] parkingBreakData;

    // repeated .ca.yyx.hu.aap.protocol.SensorBatch.NightModeData night_mode = 10;
    public ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.NightModeData[] nightMode;

    // repeated .ca.yyx.hu.aap.protocol.SensorBatch.DrivingStatusData driving_status = 13;
    public ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.DrivingStatusData[] drivingStatus;

    // repeated .ca.yyx.hu.aap.protocol.SensorBatch.GpsSatelliteData gps_satellite_data = 21;
    public ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData[] gpsSatelliteData;

    public SensorBatch() {
      clear();
    }

    public SensorBatch clear() {
      locationData = ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.LocationData.emptyArray();
      parkingBreakData = ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.ParkingBrakeData.emptyArray();
      nightMode = ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.NightModeData.emptyArray();
      drivingStatus = ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.DrivingStatusData.emptyArray();
      gpsSatelliteData = ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.locationData != null && this.locationData.length > 0) {
        for (int i = 0; i < this.locationData.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.LocationData element = this.locationData[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.parkingBreakData != null && this.parkingBreakData.length > 0) {
        for (int i = 0; i < this.parkingBreakData.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.ParkingBrakeData element = this.parkingBreakData[i];
          if (element != null) {
            output.writeMessage(7, element);
          }
        }
      }
      if (this.nightMode != null && this.nightMode.length > 0) {
        for (int i = 0; i < this.nightMode.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.NightModeData element = this.nightMode[i];
          if (element != null) {
            output.writeMessage(10, element);
          }
        }
      }
      if (this.drivingStatus != null && this.drivingStatus.length > 0) {
        for (int i = 0; i < this.drivingStatus.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.DrivingStatusData element = this.drivingStatus[i];
          if (element != null) {
            output.writeMessage(13, element);
          }
        }
      }
      if (this.gpsSatelliteData != null && this.gpsSatelliteData.length > 0) {
        for (int i = 0; i < this.gpsSatelliteData.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData element = this.gpsSatelliteData[i];
          if (element != null) {
            output.writeMessage(21, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.locationData != null && this.locationData.length > 0) {
        for (int i = 0; i < this.locationData.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.LocationData element = this.locationData[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.parkingBreakData != null && this.parkingBreakData.length > 0) {
        for (int i = 0; i < this.parkingBreakData.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.ParkingBrakeData element = this.parkingBreakData[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(7, element);
          }
        }
      }
      if (this.nightMode != null && this.nightMode.length > 0) {
        for (int i = 0; i < this.nightMode.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.NightModeData element = this.nightMode[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(10, element);
          }
        }
      }
      if (this.drivingStatus != null && this.drivingStatus.length > 0) {
        for (int i = 0; i < this.drivingStatus.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.DrivingStatusData element = this.drivingStatus[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(13, element);
          }
        }
      }
      if (this.gpsSatelliteData != null && this.gpsSatelliteData.length > 0) {
        for (int i = 0; i < this.gpsSatelliteData.length; i++) {
          ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData element = this.gpsSatelliteData[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(21, element);
          }
        }
      }
      return size;
    }

    @Override
    public SensorBatch mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.locationData == null ? 0 : this.locationData.length;
            ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.LocationData[] newArray =
                new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.LocationData[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.locationData, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.LocationData();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.LocationData();
            input.readMessage(newArray[i]);
            this.locationData = newArray;
            break;
          }
          case 58: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 58);
            int i = this.parkingBreakData == null ? 0 : this.parkingBreakData.length;
            ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.ParkingBrakeData[] newArray =
                new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.ParkingBrakeData[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.parkingBreakData, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.ParkingBrakeData();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.ParkingBrakeData();
            input.readMessage(newArray[i]);
            this.parkingBreakData = newArray;
            break;
          }
          case 82: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 82);
            int i = this.nightMode == null ? 0 : this.nightMode.length;
            ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.NightModeData[] newArray =
                new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.NightModeData[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.nightMode, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.NightModeData();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.NightModeData();
            input.readMessage(newArray[i]);
            this.nightMode = newArray;
            break;
          }
          case 106: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 106);
            int i = this.drivingStatus == null ? 0 : this.drivingStatus.length;
            ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.DrivingStatusData[] newArray =
                new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.DrivingStatusData[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.drivingStatus, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.DrivingStatusData();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.DrivingStatusData();
            input.readMessage(newArray[i]);
            this.drivingStatus = newArray;
            break;
          }
          case 170: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 170);
            int i = this.gpsSatelliteData == null ? 0 : this.gpsSatelliteData.length;
            ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData[] newArray =
                new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.gpsSatelliteData, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new ca.yyx.hu.aap.protocol.nano.Sensors.SensorBatch.GpsSatelliteData();
            input.readMessage(newArray[i]);
            this.gpsSatelliteData = newArray;
            break;
          }
        }
      }
    }

    public static SensorBatch parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SensorBatch(), data);
    }

    public static SensorBatch parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SensorBatch().mergeFrom(input);
    }
  }

  public static final class SensorRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile SensorRequest[] _emptyArray;
    public static SensorRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SensorRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .ca.yyx.hu.aap.protocol.SensorType type = 1;
    public int type;

    // optional int64 min_update_period = 2;
    public long minUpdatePeriod;

    public SensorRequest() {
      clear();
    }

    public SensorRequest clear() {
      type = ca.yyx.hu.aap.protocol.nano.Sensors.SENSOR_TYPE_LOCATION;
      minUpdatePeriod = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.type != ca.yyx.hu.aap.protocol.nano.Sensors.SENSOR_TYPE_LOCATION) {
        output.writeInt32(1, this.type);
      }
      if (this.minUpdatePeriod != 0L) {
        output.writeInt64(2, this.minUpdatePeriod);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.type != ca.yyx.hu.aap.protocol.nano.Sensors.SENSOR_TYPE_LOCATION) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.type);
      }
      if (this.minUpdatePeriod != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.minUpdatePeriod);
      }
      return size;
    }

    @Override
    public SensorRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Sensors.SENSOR_TYPE_LOCATION:
              case ca.yyx.hu.aap.protocol.nano.Sensors.SENSOR_TYPE_COMPASS:
              case ca.yyx.hu.aap.protocol.nano.Sensors.SENSOR_TYPE_CAR_SPEED:
              case ca.yyx.hu.aap.protocol.nano.Sensors.SENSOR_TYPE_RPM:
              case ca.yyx.hu.aap.protocol.nano.Sensors.SENSOR_TYPE_ODOMETER:
              case ca.yyx.hu.aap.protocol.nano.Sensors.SENSOR_TYPE_FUEL_LEVEL:
              case ca.yyx.hu.aap.protocol.nano.Sensors.SENSOR_TYPE_PARKING_BRAKE:
              case ca.yyx.hu.aap.protocol.nano.Sensors.SENSOR_TYPE_GEAR:
              case ca.yyx.hu.aap.protocol.nano.Sensors.SENSOR_TYPE_NIGHT:
              case ca.yyx.hu.aap.protocol.nano.Sensors.SENSOR_TYPE_ENVIRONMENT:
              case ca.yyx.hu.aap.protocol.nano.Sensors.SENSOR_TYPE_DRIVING_STATUS:
                this.type = value;
                break;
            }
            break;
          }
          case 16: {
            this.minUpdatePeriod = input.readInt64();
            break;
          }
        }
      }
    }

    public static SensorRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SensorRequest(), data);
    }

    public static SensorRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SensorRequest().mergeFrom(input);
    }
  }

  public static final class SensorResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile SensorResponse[] _emptyArray;
    public static SensorResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SensorResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // required .ca.yyx.hu.aap.protocol.MessageStatus status = 1;
    public int status;

    public SensorResponse() {
      clear();
    }

    public SensorResponse clear() {
      status = ca.yyx.hu.aap.protocol.nano.Common.STATUS_OK;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.status);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(1, this.status);
      return size;
    }

    @Override
    public SensorResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.Common.STATUS_OK:
                this.status = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static SensorResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SensorResponse(), data);
    }

    public static SensorResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SensorResponse().mergeFrom(input);
    }
  }
}
