// Generated by the protocol buffer compiler.  DO NOT EDIT!

package ca.yyx.hu.aap.protocol.nano;

@SuppressWarnings("hiding")
public interface NavigationStatus {

  // enum MsgType
  public static final int MSG_NEXTTURNDETAILS = 32772;
  public static final int MSG_NEXTTURNDISTANCEANDTIME = 32773;

  public static final class NextTurnDetail extends
      com.google.protobuf.nano.MessageNano {

    // enum Side
    public static final int SIDE_LEFT = 1;
    public static final int SIDE_RIGHT = 2;
    public static final int SIDE_UNSPECIFIED = 3;

    // enum NextEvent
    public static final int EVENT_UNKNOWN = 0;
    public static final int EVENT_DEPARTE = 1;
    public static final int EVENT_NAME_CHANGE = 2;
    public static final int EVENT_SLIGHT_TURN = 3;
    public static final int EVENT_TURN = 4;
    public static final int EVENT_SHARP_TURN = 5;
    public static final int EVENT_UTURN = 6;
    public static final int EVENT_ONRAMPE = 7;
    public static final int EVENT_OFFRAMP = 8;
    public static final int EVENT_FORME = 9;
    public static final int EVENT_MERGE = 10;
    public static final int EVENT_ROUNDABOUT_ENTER = 11;
    public static final int EVENT_ROUNDABOUT_EXIT = 12;
    public static final int EVENT_ROUNDABOUT_ENTER_AND_EXIT = 13;
    public static final int EVENT_STRAIGHTE = 14;
    public static final int EVENT_FERRY_BOAT = 16;
    public static final int EVENT_FERRY_TRAINE = 17;
    public static final int EVENT_DESTINATION = 18;

    private static volatile NextTurnDetail[] _emptyArray;
    public static NextTurnDetail[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new NextTurnDetail[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string road = 1;
    public java.lang.String road;

    // required .ca.yyx.hu.aap.protocol.NextTurnDetail.Side side = 2;
    public int side;

    // required .ca.yyx.hu.aap.protocol.NextTurnDetail.NextEvent nextturn = 3;
    public int nextturn;

    // optional bytes turngraph = 4;
    public byte[] turngraph;

    // optional uint32 trunnumer = 5;
    public int trunnumer;

    // optional uint32 turnangel = 6;
    public int turnangel;

    public NextTurnDetail() {
      clear();
    }

    public NextTurnDetail clear() {
      road = "";
      side = ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.SIDE_LEFT;
      nextturn = ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_UNKNOWN;
      turngraph = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      trunnumer = 0;
      turnangel = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.road);
      output.writeInt32(2, this.side);
      output.writeInt32(3, this.nextturn);
      if (!java.util.Arrays.equals(this.turngraph, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(4, this.turngraph);
      }
      if (this.trunnumer != 0) {
        output.writeUInt32(5, this.trunnumer);
      }
      if (this.turnangel != 0) {
        output.writeUInt32(6, this.turnangel);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.road);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(2, this.side);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(3, this.nextturn);
      if (!java.util.Arrays.equals(this.turngraph, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(4, this.turngraph);
      }
      if (this.trunnumer != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(5, this.trunnumer);
      }
      if (this.turnangel != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(6, this.turnangel);
      }
      return size;
    }

    @Override
    public NextTurnDetail mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.road = input.readString();
            break;
          }
          case 16: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.SIDE_LEFT:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.SIDE_RIGHT:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.SIDE_UNSPECIFIED:
                this.side = value;
                break;
            }
            break;
          }
          case 24: {
            int value = input.readInt32();
            switch (value) {
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_UNKNOWN:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_DEPARTE:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_NAME_CHANGE:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_SLIGHT_TURN:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_TURN:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_SHARP_TURN:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_UTURN:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_ONRAMPE:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_OFFRAMP:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_FORME:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_MERGE:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_ROUNDABOUT_ENTER:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_ROUNDABOUT_EXIT:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_ROUNDABOUT_ENTER_AND_EXIT:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_STRAIGHTE:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_FERRY_BOAT:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_FERRY_TRAINE:
              case ca.yyx.hu.aap.protocol.nano.NavigationStatus.NextTurnDetail.EVENT_DESTINATION:
                this.nextturn = value;
                break;
            }
            break;
          }
          case 34: {
            this.turngraph = input.readBytes();
            break;
          }
          case 40: {
            this.trunnumer = input.readUInt32();
            break;
          }
          case 48: {
            this.turnangel = input.readUInt32();
            break;
          }
        }
      }
    }

    public static NextTurnDetail parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new NextTurnDetail(), data);
    }

    public static NextTurnDetail parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new NextTurnDetail().mergeFrom(input);
    }
  }

  public static final class NextTurnDistnaceEvent extends
      com.google.protobuf.nano.MessageNano {

    private static volatile NextTurnDistnaceEvent[] _emptyArray;
    public static NextTurnDistnaceEvent[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new NextTurnDistnaceEvent[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 distance = 1;
    public int distance;

    // optional uint32 time = 2;
    public int time;

    public NextTurnDistnaceEvent() {
      clear();
    }

    public NextTurnDistnaceEvent clear() {
      distance = 0;
      time = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.distance != 0) {
        output.writeUInt32(1, this.distance);
      }
      if (this.time != 0) {
        output.writeUInt32(2, this.time);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.distance != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.distance);
      }
      if (this.time != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.time);
      }
      return size;
    }

    @Override
    public NextTurnDistnaceEvent mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.distance = input.readUInt32();
            break;
          }
          case 16: {
            this.time = input.readUInt32();
            break;
          }
        }
      }
    }

    public static NextTurnDistnaceEvent parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new NextTurnDistnaceEvent(), data);
    }

    public static NextTurnDistnaceEvent parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new NextTurnDistnaceEvent().mergeFrom(input);
    }
  }
}
